//
// Created by wang.junren on 2018/6/19.
//

#include "LocalSocketServer.h"
#include "CSMResAccess.h"
#include <map>

using std::string;
static const char *tag = "csm_res";


multimap<string,string> CSMResAccess::packageNameAndFinger = {
		{
				string("com.cmcc.hemihua"),
				string(
						{
								0x88,0x2D,0x03,0xDA,
								0xAF,0x5B,0xD5,0xA6,
								0x32,0xA0,0xEB,0x01,
								0xC2,0xA4,0x89,0xD9,
								0xF7,0x41,0x10,0xB2,
								0xE0,0x06,0xC8,0xBC,
								0x1E,0x2F,0xD3,0x47,
								0x8E,0x14,0x77,0x1A
						}
				)
		},

		{
				string("com.westone.csmmanager"),
				string(
						{
								0xCB,0xD0,0x1D,0x08,
								0x2D,0x07,0x89,0xFB,
								0x33,0x11,0x94,0xF7,
								0xE7,0xAC,0x74,0x41,
								0xDC,0xE1,0x8A,0xD9,
								0xF8,0xF2,0xF4,0x41,
								0x22,0xAB,0x4C,0xA7,
								0x1F,0xDB,0x29,0x50
						}
				)
		},

		{
				string("com.westone.clienttest"),
				string(
						{
								0x38,0xF8,0x26,0x33,
								0x35,0xC9,0x5E,0x20,
								0xE9,0x19,0xFF,0x2C,
								0x57,0xC7,0xA0,0x77,
								0xE0,0x5D,0xD6,0x21,
								0x26,0x21,0x05,0x27,
								0x3F,0x92,0xE9,0xD3,
								0xDC,0x0E,0x1D,0xE7
						}
				)
		},

		{
				string("com.ohayo.scsservicedemo"),
				string(
						{
								0x69,0x27,0xD9,0x17,
								0x87,0xE3,0x09,0xE7,
								0x5B,0xB0,0x11,0xE1,
								0x23,0x2F,0xD1,0xBD,
								0xA6,0x62,0xE8,0xC2,
								0x08,0x97,0xF1,0xFB,
								0xA2,0x23,0xE9,0x08,
								0x9A,0x95,0xE9,0x41
						}
				)
		},

		{
				string("com.westone.skfdemo"),
				string(
						{
								0x5F,0x0E,0xB3,0xBD,
								0xCE,0xF6,0x83,0xA4,
								0x9E,0x99,0x36,0xFA,
								0xC0,0xA5,0xC1,0x38,
								0x3F,0xE4,0x70,0xFB,
								0x33,0xE5,0xF5,0x0A,
								0xB1,0x70,0xB5,0x78,
								0x47,0x43,0x9A,0xFE
						}
				)
		},

		{
				string("com.cetcs.ecmapplication"),
				string(
						{
								0x5F,0x0E,0xB3,0xBD,
								0xCE,0xF6,0x83,0xA4,
								0x9E,0x99,0x36,0xFA,
								0xC0,0xA5,0xC1,0x38,
								0x3F,0xE4,0x70,0xFB,
								0x33,0xE5,0xF5,0x0A,
								0xB1,0x70,0xB5,0x78,
								0x47,0x43,0x9A,0xFE
						}
				)
		},

		{
				string("com.raycom.securesms"),
				string(
						{
								0x69,0x27,0xD9,0x17,
								0x87,0xE3,0x09,0xE7,
								0x5B,0xB0,0x11,0xE1,
								0x23,0x2F,0xD1,0xBD,
								0xA6,0x62,0xE8,0xC2,
								0x08,0x97,0xF1,0xFB,
								0xA2,0x23,0xE9,0x08,
								0x9A,0x95,0xE9,0x41
						}
				)
		},
		{
				string("com.westone.padmanager"),
				string(
						{
								0xCB,0xD0,0x1D,0x08,
								0x2D,0x07,0x89,0xFB,
								0x33,0x11,0x94,0xF7,
								0xE7,0xAC,0x74,0x41,
								0xDC,0xE1,0x8A,0xD9,
								0xF8,0xF2,0xF4,0x41,
								0x22,0xAB,0x4C,0xA7,
								0x1F,0xDB,0x29,0x50
						}
				)

		},

		{
				string("com.westone.zhengwutest"),
				string(
						{
								/*0x38,0xF8,0x26,0x33,
                                0x35,0xC9,0x5E,0x20,
                                0xE9,0x19,0xFF,0x2C,
                                0x57,0xC7,0xA0,0x77,
                                0xE0,0x5D,0xD6,0x21,
                                0x26,0x21,0x05,0x27,
                                0x3F,0x92,0xE9,0xD3,
                                0xDC,0x0E,0x1D,0xE7*/
								0x5F,0x0E,0xB3,0xBD,
								0xCE,0xF6,0x83,0xA4,
								0x9E,0x99,0x36,0xFA,
								0xC0,0xA5,0xC1,0x38,
								0x3F,0xE4,0x70,0xFB,
								0x33,0xE5,0xF5,0x0A,
								0xB1,0x70,0xB5,0x78,
								0x47,0x43,0x9A,0xFE
						}
				)
		},

		{
				string("cn.com.westone.securitymeeting"),
				string(
						{
								0x69,0x27,0xD9,0x17,
								0x87,0xE3,0x09,0xE7,
								0x5B,0xB0,0x11,0xE1,
								0x23,0x2F,0xD1,0xBD,
								0xA6,0x62,0xE8,0xC2,
								0x08,0x97,0xF1,0xFB,
								0xA2,0x23,0xE9,0x08,
								0x9A,0x95,0xE9,0x41
						}

					)
		},					
		{
				string("com.zdk.mg.dualdomain"),
				string(
						{
								0x69,0x27,0xD9,0x17,
								0x87,0xE3,0x09,0xE7,
								0x5B,0xB0,0x11,0xE1,
								0x23,0x2F,0xD1,0xBD,
								0xA6,0x62,0xE8,0xC2,
								0x08,0x97,0xF1,0xFB,
								0xA2,0x23,0xE9,0x08,
								0x9A,0x95,0xE9,0x41
						}

				)
		},
		{
				string("com.westone.csmmanager"),
				string(
						{
								0xC8,0xA2,0xE9,0xBC,
								0xCF,0x59,0x7C,0x2F,
								0xB6,0xDC,0x66,0xBE,
								0xE2,0x93,0xFC,0x13,
								0xF2,0xFC,0x47,0xEC,
								0x77,0xBC,0x6B,0x2B,
								0x0D,0x52,0xC1,0x1F,
								0x51,0x19,0x2A,0xB8
						}
				)
		},
		{
				string("cn.com.westone.authclient"),
				string(
						{
								0x69,0x27,0xD9,0x17,
								0x87,0xE3,0x09,0xE7,
								0x5B,0xB0,0x11,0xE1,
								0x23,0x2F,0xD1,0xBD,
								0xA6,0x62,0xE8,0xC2,
								0x08,0x97,0xF1,0xFB,
								0xA2,0x23,0xE9,0x08,
								0x9A,0x95,0xE9,0x41
						}

				)
		},
		{
				//westone_hemihua.jks
				string("com.westone.csmmanager"),
				string(
						{
								0x5F,0x0E,0xB3,0xBD,
								0xCE,0xF6,0x83,0xA4,
								0x9E,0x99,0x36,0xFA,
								0xC0,0xA5,0xC1,0x38,
								0x3F,0xE4,0x70,0xFB,
								0x33,0xE5,0xF5,0x0A,
								0xB1,0x70,0xB5,0x78,
								0x47,0x43,0x9A,0xFE
						}

				)
		},
		{
				//VPN project
				string("com.android.launcher3"),
				string(
						{
							0xC8,0xA2,0xE9,0xBC,
							0xCF,0x59,0x7C,0x2F,
							0xB6,0xDC,0x66,0xBE,
							0xE2,0x93,0xFC,0x13,
							0xF2,0xFC,0x47,0xEC,
							0x77,0xBC,0x6B,0x2B,
							0x0D,0x52,0xC1,0x1F,
							0x51,0x19,0x2A,0xB8
						}

				)
		},
		{
				//encrypt SMS
				string("com.westone.securitySMS"),
				string(
						{
							0x69,0x27,0xD9,0x17,
			                0x87,0xE3,0x09,0xE7,
			                0x5B,0xB0,0x11,0xE1,
			                0x23,0x2F,0xD1,0xBD,
			                0xA6,0x62,0xE8,0xC2,
			                0x08,0x97,0xF1,0xFB,
			                0xA2,0x23,0xE9,0x08,
			                0x9A,0x95,0xE9,0x41
						}

				)
		},

		{
			string("com.westone.filebox"),
			string(
					{
							0x91,0x28,0xB5,0x86,
							0xC3,0x42,0xE6,0x2C,
							0x54,0x5B,0x2C,0x14,
							0x6D,0xAC,0xE8,0xF5,
							0x72,0x45,0xCD,0x3C,
							0x74,0xB9,0xA9,0x58,
							0x5C,0x43,0x7F,0x8C,
							0xEE,0x4F,0x5E,0xE2
					}
					)
		}
};


bool CSMResAccess::CheckCert(string packageName,unsigned char *sign) {
    string f;
    f.append((char*)sign,32);

    auto it = packageNameAndFinger.begin();

    for(;it != packageNameAndFinger.end();it++){
        if(it->first == packageName && it->second == f){
            return true;
        }
    }

    return false;
}
