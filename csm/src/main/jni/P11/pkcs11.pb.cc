// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pkcs11.proto

#include "pkcs11.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_pkcs11_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PRO_Attribute_pkcs11_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_pkcs11_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PRO_MechanismInfo_pkcs11_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_pkcs11_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PRO_Mechanism_pkcs11_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_pkcs11_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PRO_SessionInfo_pkcs11_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_pkcs11_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PRO_Version_pkcs11_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_pkcs11_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PRO_ipparam_pkcs11_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_pkcs11_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PRO_CK_INFO_pkcs11_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_pkcs11_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PRO_CK_SLOT_INFO_pkcs11_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_pkcs11_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PRO_TokenInfo_pkcs11_2eproto;
namespace com {
namespace weston {
namespace pkcs11 {
class PRO_VersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PRO_Version> _instance;
} _PRO_Version_default_instance_;
class PRO_AttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PRO_Attribute> _instance;
} _PRO_Attribute_default_instance_;
class PRO_MechanismDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PRO_Mechanism> _instance;
} _PRO_Mechanism_default_instance_;
class PRO_CK_INFODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PRO_CK_INFO> _instance;
} _PRO_CK_INFO_default_instance_;
class PRO_CK_SLOT_INFODefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PRO_CK_SLOT_INFO> _instance;
} _PRO_CK_SLOT_INFO_default_instance_;
class PRO_TokenInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PRO_TokenInfo> _instance;
} _PRO_TokenInfo_default_instance_;
class PRO_MechanismInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PRO_MechanismInfo> _instance;
} _PRO_MechanismInfo_default_instance_;
class PRO_SessionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PRO_SessionInfo> _instance;
} _PRO_SessionInfo_default_instance_;
class PRO_ipparamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PRO_ipparam> _instance;
} _PRO_ipparam_default_instance_;
class Req_C_InitializeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Initialize> _instance;
} _Req_C_Initialize_default_instance_;
class Rsp_C_InitializeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Initialize> _instance;
} _Rsp_C_Initialize_default_instance_;
class Req_C_FinalizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Finalize> _instance;
} _Req_C_Finalize_default_instance_;
class Rsp_C_FinalizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Finalize> _instance;
} _Rsp_C_Finalize_default_instance_;
class Req_C_GetInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GetInfo> _instance;
} _Req_C_GetInfo_default_instance_;
class Rsp_C_GetInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GetInfo> _instance;
} _Rsp_C_GetInfo_default_instance_;
class Req_C_GetFunctionListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GetFunctionList> _instance;
} _Req_C_GetFunctionList_default_instance_;
class Rsp_C_GetFunctionListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GetFunctionList> _instance;
} _Rsp_C_GetFunctionList_default_instance_;
class Req_C_GetSlotListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GetSlotList> _instance;
} _Req_C_GetSlotList_default_instance_;
class Rsp_C_GetSlotListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GetSlotList> _instance;
} _Rsp_C_GetSlotList_default_instance_;
class Req_C_GetSlotInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GetSlotInfo> _instance;
} _Req_C_GetSlotInfo_default_instance_;
class Rsp_C_GetSlotInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GetSlotInfo> _instance;
} _Rsp_C_GetSlotInfo_default_instance_;
class Req_C_GetTokenInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GetTokenInfo> _instance;
} _Req_C_GetTokenInfo_default_instance_;
class Rsp_C_GetTokenInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GetTokenInfo> _instance;
} _Rsp_C_GetTokenInfo_default_instance_;
class Req_C_GetMechanismListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GetMechanismList> _instance;
} _Req_C_GetMechanismList_default_instance_;
class Rsp_C_GetMechanismListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GetMechanismList> _instance;
} _Rsp_C_GetMechanismList_default_instance_;
class Req_C_GetMechanismInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GetMechanismInfo> _instance;
} _Req_C_GetMechanismInfo_default_instance_;
class Rsp_C_GetMechanismInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GetMechanismInfo> _instance;
} _Rsp_C_GetMechanismInfo_default_instance_;
class Req_C_InitTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_InitToken> _instance;
} _Req_C_InitToken_default_instance_;
class Rsp_C_InitTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_InitToken> _instance;
} _Rsp_C_InitToken_default_instance_;
class Req_C_InitPINDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_InitPIN> _instance;
} _Req_C_InitPIN_default_instance_;
class Rsp_C_InitPINDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_InitPIN> _instance;
} _Rsp_C_InitPIN_default_instance_;
class Req_C_SetPINDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_SetPIN> _instance;
} _Req_C_SetPIN_default_instance_;
class Rsp_C_SetPINDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_SetPIN> _instance;
} _Rsp_C_SetPIN_default_instance_;
class Req_C_OpenSessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_OpenSession> _instance;
} _Req_C_OpenSession_default_instance_;
class Rsp_C_OpenSessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_OpenSession> _instance;
} _Rsp_C_OpenSession_default_instance_;
class Req_C_CloseSessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_CloseSession> _instance;
} _Req_C_CloseSession_default_instance_;
class Rsp_C_CloseSessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_CloseSession> _instance;
} _Rsp_C_CloseSession_default_instance_;
class Req_C_CloseAllSessionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_CloseAllSessions> _instance;
} _Req_C_CloseAllSessions_default_instance_;
class Rsp_C_CloseAllSessionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_CloseAllSessions> _instance;
} _Rsp_C_CloseAllSessions_default_instance_;
class Req_C_GetSessionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GetSessionInfo> _instance;
} _Req_C_GetSessionInfo_default_instance_;
class Rsp_C_GetSessionInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GetSessionInfo> _instance;
} _Rsp_C_GetSessionInfo_default_instance_;
class Req_C_GetOperationStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GetOperationState> _instance;
} _Req_C_GetOperationState_default_instance_;
class Rsp_C_GetOperationStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GetOperationState> _instance;
} _Rsp_C_GetOperationState_default_instance_;
class Req_C_SetOperationStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_SetOperationState> _instance;
} _Req_C_SetOperationState_default_instance_;
class Rsp_C_SetOperationStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_SetOperationState> _instance;
} _Rsp_C_SetOperationState_default_instance_;
class Req_C_LoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Login> _instance;
} _Req_C_Login_default_instance_;
class Rsp_C_LoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Login> _instance;
} _Rsp_C_Login_default_instance_;
class Req_C_LogoutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Logout> _instance;
} _Req_C_Logout_default_instance_;
class Rsp_C_LogoutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Logout> _instance;
} _Rsp_C_Logout_default_instance_;
class Req_C_CreateObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_CreateObject> _instance;
} _Req_C_CreateObject_default_instance_;
class Rsp_C_CreateObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_CreateObject> _instance;
} _Rsp_C_CreateObject_default_instance_;
class Req_C_CopyObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_CopyObject> _instance;
} _Req_C_CopyObject_default_instance_;
class Rsp_C_CopyObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_CopyObject> _instance;
} _Rsp_C_CopyObject_default_instance_;
class Req_C_DestroyObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_DestroyObject> _instance;
} _Req_C_DestroyObject_default_instance_;
class Rsp_C_DestroyObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_DestroyObject> _instance;
} _Rsp_C_DestroyObject_default_instance_;
class Req_C_GetObjectSizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GetObjectSize> _instance;
} _Req_C_GetObjectSize_default_instance_;
class Rsp_C_GetObjectSizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GetObjectSize> _instance;
} _Rsp_C_GetObjectSize_default_instance_;
class Req_C_GetAttributeValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GetAttributeValue> _instance;
} _Req_C_GetAttributeValue_default_instance_;
class Rsp_C_GetAttributeValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GetAttributeValue> _instance;
} _Rsp_C_GetAttributeValue_default_instance_;
class Req_C_SetAttributeValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_SetAttributeValue> _instance;
} _Req_C_SetAttributeValue_default_instance_;
class Rsp_C_SetAttributeValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_SetAttributeValue> _instance;
} _Rsp_C_SetAttributeValue_default_instance_;
class Req_C_FindObjectsInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_FindObjectsInit> _instance;
} _Req_C_FindObjectsInit_default_instance_;
class Rsp_C_FindObjectsInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_FindObjectsInit> _instance;
} _Rsp_C_FindObjectsInit_default_instance_;
class Req_C_FindObjectsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_FindObjects> _instance;
} _Req_C_FindObjects_default_instance_;
class Rsp_C_FindObjectsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_FindObjects> _instance;
} _Rsp_C_FindObjects_default_instance_;
class Req_C_FindObjectsFinalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_FindObjectsFinal> _instance;
} _Req_C_FindObjectsFinal_default_instance_;
class Rsp_C_FindObjectsFinalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_FindObjectsFinal> _instance;
} _Rsp_C_FindObjectsFinal_default_instance_;
class Req_C_EncryptInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_EncryptInit> _instance;
} _Req_C_EncryptInit_default_instance_;
class Rsp_C_EncryptInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_EncryptInit> _instance;
} _Rsp_C_EncryptInit_default_instance_;
class Req_C_EncryptDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Encrypt> _instance;
} _Req_C_Encrypt_default_instance_;
class Rsp_C_EncryptDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Encrypt> _instance;
} _Rsp_C_Encrypt_default_instance_;
class Req_C_EncryptUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_EncryptUpdate> _instance;
} _Req_C_EncryptUpdate_default_instance_;
class Rsp_C_EncryptUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_EncryptUpdate> _instance;
} _Rsp_C_EncryptUpdate_default_instance_;
class Req_C_EncryptFinalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_EncryptFinal> _instance;
} _Req_C_EncryptFinal_default_instance_;
class Rsp_C_EncryptFinalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_EncryptFinal> _instance;
} _Rsp_C_EncryptFinal_default_instance_;
class Req_C_DecryptInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_DecryptInit> _instance;
} _Req_C_DecryptInit_default_instance_;
class Rsp_C_DecryptInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_DecryptInit> _instance;
} _Rsp_C_DecryptInit_default_instance_;
class Req_C_DecryptDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Decrypt> _instance;
} _Req_C_Decrypt_default_instance_;
class Rsp_C_DecryptDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Decrypt> _instance;
} _Rsp_C_Decrypt_default_instance_;
class Req_C_DecryptUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_DecryptUpdate> _instance;
} _Req_C_DecryptUpdate_default_instance_;
class Rsp_C_DecryptUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_DecryptUpdate> _instance;
} _Rsp_C_DecryptUpdate_default_instance_;
class Req_C_DecryptFinalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_DecryptFinal> _instance;
} _Req_C_DecryptFinal_default_instance_;
class Rsp_C_DecryptFinalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_DecryptFinal> _instance;
} _Rsp_C_DecryptFinal_default_instance_;
class Req_C_DigestInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_DigestInit> _instance;
} _Req_C_DigestInit_default_instance_;
class Rsp_C_DigestInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_DigestInit> _instance;
} _Rsp_C_DigestInit_default_instance_;
class Req_C_DigestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Digest> _instance;
} _Req_C_Digest_default_instance_;
class Rsp_C_DigestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Digest> _instance;
} _Rsp_C_Digest_default_instance_;
class Req_C_DigestUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_DigestUpdate> _instance;
} _Req_C_DigestUpdate_default_instance_;
class Rsp_C_DigestUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_DigestUpdate> _instance;
} _Rsp_C_DigestUpdate_default_instance_;
class Req_C_DigestKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_DigestKey> _instance;
} _Req_C_DigestKey_default_instance_;
class Rsp_C_DigestKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_DigestKey> _instance;
} _Rsp_C_DigestKey_default_instance_;
class Req_C_DigestFinalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_DigestFinal> _instance;
} _Req_C_DigestFinal_default_instance_;
class Rsp_C_DigestFinalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_DigestFinal> _instance;
} _Rsp_C_DigestFinal_default_instance_;
class Req_C_SignInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_SignInit> _instance;
} _Req_C_SignInit_default_instance_;
class Rsp_C_SignInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_SignInit> _instance;
} _Rsp_C_SignInit_default_instance_;
class Req_C_SignDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Sign> _instance;
} _Req_C_Sign_default_instance_;
class Rsp_C_SignDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Sign> _instance;
} _Rsp_C_Sign_default_instance_;
class Req_C_SignUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_SignUpdate> _instance;
} _Req_C_SignUpdate_default_instance_;
class Rsp_C_SignUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_SignUpdate> _instance;
} _Rsp_C_SignUpdate_default_instance_;
class Req_C_SignFinalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_SignFinal> _instance;
} _Req_C_SignFinal_default_instance_;
class Rsp_C_SignFinalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_SignFinal> _instance;
} _Rsp_C_SignFinal_default_instance_;
class Req_C_SignRecoverInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_SignRecoverInit> _instance;
} _Req_C_SignRecoverInit_default_instance_;
class Rsp_C_SignRecoverInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_SignRecoverInit> _instance;
} _Rsp_C_SignRecoverInit_default_instance_;
class Req_C_SignRecoverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_SignRecover> _instance;
} _Req_C_SignRecover_default_instance_;
class Rsp_C_SignRecoverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_SignRecover> _instance;
} _Rsp_C_SignRecover_default_instance_;
class Req_C_VerifyInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_VerifyInit> _instance;
} _Req_C_VerifyInit_default_instance_;
class Rsp_C_VerifyInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_VerifyInit> _instance;
} _Rsp_C_VerifyInit_default_instance_;
class Req_C_VerifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Verify> _instance;
} _Req_C_Verify_default_instance_;
class Rsp_C_VerifyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Verify> _instance;
} _Rsp_C_Verify_default_instance_;
class Req_C_VerifyUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_VerifyUpdate> _instance;
} _Req_C_VerifyUpdate_default_instance_;
class Rsp_C_VerifyUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_VerifyUpdate> _instance;
} _Rsp_C_VerifyUpdate_default_instance_;
class Req_C_VerifyFinalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_VerifyFinal> _instance;
} _Req_C_VerifyFinal_default_instance_;
class Rsp_C_VerifyFinalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_VerifyFinal> _instance;
} _Rsp_C_VerifyFinal_default_instance_;
class Req_C_VerifyRecoverInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_VerifyRecoverInit> _instance;
} _Req_C_VerifyRecoverInit_default_instance_;
class Rsp_C_VerifyRecoverInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_VerifyRecoverInit> _instance;
} _Rsp_C_VerifyRecoverInit_default_instance_;
class Req_C_VerifyRecoverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_VerifyRecover> _instance;
} _Req_C_VerifyRecover_default_instance_;
class Rsp_C_VerifyRecoverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_VerifyRecover> _instance;
} _Rsp_C_VerifyRecover_default_instance_;
class Req_C_DigestEncryptUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_DigestEncryptUpdate> _instance;
} _Req_C_DigestEncryptUpdate_default_instance_;
class Rsp_C_DigestEncryptUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_DigestEncryptUpdate> _instance;
} _Rsp_C_DigestEncryptUpdate_default_instance_;
class Req_C_DecryptDigestUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_DecryptDigestUpdate> _instance;
} _Req_C_DecryptDigestUpdate_default_instance_;
class Rsp_C_DecryptDigestUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_DecryptDigestUpdate> _instance;
} _Rsp_C_DecryptDigestUpdate_default_instance_;
class Req_C_SignEncryptUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_SignEncryptUpdate> _instance;
} _Req_C_SignEncryptUpdate_default_instance_;
class Rsp_C_SignEncryptUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_SignEncryptUpdate> _instance;
} _Rsp_C_SignEncryptUpdate_default_instance_;
class Req_C_DecryptVerifyUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_DecryptVerifyUpdate> _instance;
} _Req_C_DecryptVerifyUpdate_default_instance_;
class Rsp_C_DecryptVerifyUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_DecryptVerifyUpdate> _instance;
} _Rsp_C_DecryptVerifyUpdate_default_instance_;
class Req_C_GenerateKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GenerateKey> _instance;
} _Req_C_GenerateKey_default_instance_;
class Rsp_C_GenerateKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GenerateKey> _instance;
} _Rsp_C_GenerateKey_default_instance_;
class Req_C_GenerateKeyPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GenerateKeyPair> _instance;
} _Req_C_GenerateKeyPair_default_instance_;
class Rsp_C_GenerateKeyPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GenerateKeyPair> _instance;
} _Rsp_C_GenerateKeyPair_default_instance_;
class Req_C_WrapKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_WrapKey> _instance;
} _Req_C_WrapKey_default_instance_;
class Rsp_C_WrapKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_WrapKey> _instance;
} _Rsp_C_WrapKey_default_instance_;
class Req_C_UnwrapKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_UnwrapKey> _instance;
} _Req_C_UnwrapKey_default_instance_;
class Rsp_C_UnwrapKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_UnwrapKey> _instance;
} _Rsp_C_UnwrapKey_default_instance_;
class Req_C_DeriveKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_DeriveKey> _instance;
} _Req_C_DeriveKey_default_instance_;
class Rsp_C_DeriveKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_DeriveKey> _instance;
} _Rsp_C_DeriveKey_default_instance_;
class Req_C_SeedRandomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_SeedRandom> _instance;
} _Req_C_SeedRandom_default_instance_;
class Rsp_C_SeedRandomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_SeedRandom> _instance;
} _Rsp_C_SeedRandom_default_instance_;
class Req_C_GenerateRandomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GenerateRandom> _instance;
} _Req_C_GenerateRandom_default_instance_;
class Rsp_C_GenerateRandomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GenerateRandom> _instance;
} _Rsp_C_GenerateRandom_default_instance_;
class Req_C_GetFunctionStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_GetFunctionStatus> _instance;
} _Req_C_GetFunctionStatus_default_instance_;
class Rsp_C_GetFunctionStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_GetFunctionStatus> _instance;
} _Rsp_C_GetFunctionStatus_default_instance_;
class Req_C_CancelFunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_CancelFunction> _instance;
} _Req_C_CancelFunction_default_instance_;
class Rsp_C_CancelFunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_CancelFunction> _instance;
} _Rsp_C_CancelFunction_default_instance_;
class Req_C_WaitForSlotEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_WaitForSlotEvent> _instance;
} _Req_C_WaitForSlotEvent_default_instance_;
class Rsp_C_WaitForSlotEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_WaitForSlotEvent> _instance;
} _Rsp_C_WaitForSlotEvent_default_instance_;
class Req_C_Extend_GetPinRemainCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_GetPinRemainCount> _instance;
} _Req_C_Extend_GetPinRemainCount_default_instance_;
class Rsp_C_Extend_GetPinRemainCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_GetPinRemainCount> _instance;
} _Rsp_C_Extend_GetPinRemainCount_default_instance_;
class Req_C_Extend_GetStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_GetStatus> _instance;
} _Req_C_Extend_GetStatus_default_instance_;
class Rsp_C_Extend_GetStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_GetStatus> _instance;
} _Rsp_C_Extend_GetStatus_default_instance_;
class Rsp_Status_Callback_FuncDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_Status_Callback_Func> _instance;
} _Rsp_Status_Callback_Func_default_instance_;
class Req_C_Extend_Register_CallbackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_Register_Callback> _instance;
} _Req_C_Extend_Register_Callback_default_instance_;
class Rsp_C_Extend_Register_CallbackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_Register_Callback> _instance;
} _Rsp_C_Extend_Register_Callback_default_instance_;
class Req_C_Extend_Unregister_CallbackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_Unregister_Callback> _instance;
} _Req_C_Extend_Unregister_Callback_default_instance_;
class Rsp_C_Extend_Unregister_CallbackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_Unregister_Callback> _instance;
} _Rsp_C_Extend_Unregister_Callback_default_instance_;
class Req_C_Extend_GetExchangeSessionKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_GetExchangeSessionKey> _instance;
} _Req_C_Extend_GetExchangeSessionKey_default_instance_;
class Rsp_C_Extend_GetExchangeSessionKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_GetExchangeSessionKey> _instance;
} _Rsp_C_Extend_GetExchangeSessionKey_default_instance_;
class Req_C_Extend_DestroyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_Destroy> _instance;
} _Req_C_Extend_Destroy_default_instance_;
class Rsp_C_Extend_DestroyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_Destroy> _instance;
} _Rsp_C_Extend_Destroy_default_instance_;
class Req_C_Extend_Reset_Pin_With_OTPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_Reset_Pin_With_OTP> _instance;
} _Req_C_Extend_Reset_Pin_With_OTP_default_instance_;
class Rsp_C_Extend_Reset_Pin_With_OTPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_Reset_Pin_With_OTP> _instance;
} _Rsp_C_Extend_Reset_Pin_With_OTP_default_instance_;
class Req_C_Extend_Reset_OTPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_Reset_OTP> _instance;
} _Req_C_Extend_Reset_OTP_default_instance_;
class Rsp_C_Extend_Reset_OTPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_Reset_OTP> _instance;
} _Rsp_C_Extend_Reset_OTP_default_instance_;
class Req_C_Extend_Get_OTP_Unlock_CountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_Get_OTP_Unlock_Count> _instance;
} _Req_C_Extend_Get_OTP_Unlock_Count_default_instance_;
class Rsp_C_Extend_Get_OTP_Unlock_CountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_Get_OTP_Unlock_Count> _instance;
} _Rsp_C_Extend_Get_OTP_Unlock_Count_default_instance_;
class Req_C_Extend_Get_OTP_Remain_CountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_Get_OTP_Remain_Count> _instance;
} _Req_C_Extend_Get_OTP_Remain_Count_default_instance_;
class Rsp_C_Extend_Get_OTP_Remain_CountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_Get_OTP_Remain_Count> _instance;
} _Rsp_C_Extend_Get_OTP_Remain_Count_default_instance_;
class Req_C_Extend_DeriveSessionKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_DeriveSessionKey> _instance;
} _Req_C_Extend_DeriveSessionKey_default_instance_;
class Rsp_C_Extend_DeriveSessionKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_DeriveSessionKey> _instance;
} _Rsp_C_Extend_DeriveSessionKey_default_instance_;
class Req_C_Extend_EncryptInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_EncryptInit> _instance;
} _Req_C_Extend_EncryptInit_default_instance_;
class Rsp_C_Extend_EncryptInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_EncryptInit> _instance;
} _Rsp_C_Extend_EncryptInit_default_instance_;
class Req_C_Extend_DecryptInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_DecryptInit> _instance;
} _Req_C_Extend_DecryptInit_default_instance_;
class Rsp_C_Extend_DecryptInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_DecryptInit> _instance;
} _Rsp_C_Extend_DecryptInit_default_instance_;
class Req_C_Extend_EncryptUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_EncryptUpdate> _instance;
} _Req_C_Extend_EncryptUpdate_default_instance_;
class Rsp_C_Extend_EncryptUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_EncryptUpdate> _instance;
} _Rsp_C_Extend_EncryptUpdate_default_instance_;
class Req_C_Extend_DecryptUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_DecryptUpdate> _instance;
} _Req_C_Extend_DecryptUpdate_default_instance_;
class Rsp_C_Extend_DecryptUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_DecryptUpdate> _instance;
} _Rsp_C_Extend_DecryptUpdate_default_instance_;
class Req_C_Extend_EncryptFinalizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_EncryptFinalize> _instance;
} _Req_C_Extend_EncryptFinalize_default_instance_;
class Rsp_C_Extend_EncryptFinalizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_EncryptFinalize> _instance;
} _Rsp_C_Extend_EncryptFinalize_default_instance_;
class Req_C_Extend_DecryptFinalizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_DecryptFinalize> _instance;
} _Req_C_Extend_DecryptFinalize_default_instance_;
class Rsp_C_Extend_DecryptFinalizeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_DecryptFinalize> _instance;
} _Rsp_C_Extend_DecryptFinalize_default_instance_;
class Req_C_Extend_PointMultiplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_PointMultiply> _instance;
} _Req_C_Extend_PointMultiply_default_instance_;
class Rsp_C_Extend_PointMultiplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_PointMultiply> _instance;
} _Rsp_C_Extend_PointMultiply_default_instance_;
class Req_C_Extend_Reset_TTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_Reset_TT> _instance;
} _Req_C_Extend_Reset_TT_default_instance_;
class Rsp_C_Extend_Reset_TTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_Reset_TT> _instance;
} _Rsp_C_Extend_Reset_TT_default_instance_;
class Req_C_Extend_Reset_BKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_Reset_BK> _instance;
} _Req_C_Extend_Reset_BK_default_instance_;
class Rsp_C_Extend_Reset_BKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_Reset_BK> _instance;
} _Rsp_C_Extend_Reset_BK_default_instance_;
class Req_C_Extend_Get_Special_Object_VersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_Get_Special_Object_Version> _instance;
} _Req_C_Extend_Get_Special_Object_Version_default_instance_;
class Rsp_C_Extend_Get_Special_Object_VersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_Get_Special_Object_Version> _instance;
} _Rsp_C_Extend_Get_Special_Object_Version_default_instance_;
class Req_C_Extend_DestroyCardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_DestroyCard> _instance;
} _Req_C_Extend_DestroyCard_default_instance_;
class Rsp_C_Extend_DestroyCardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_DestroyCard> _instance;
} _Rsp_C_Extend_DestroyCard_default_instance_;
class Req_C_Extend_MonopolizeEnableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_MonopolizeEnable> _instance;
} _Req_C_Extend_MonopolizeEnable_default_instance_;
class Rsp_C_Extend_MonopolizeEnableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_MonopolizeEnable> _instance;
} _Rsp_C_Extend_MonopolizeEnable_default_instance_;
class Req_C_Extend_MonopolizeDisableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_MonopolizeDisable> _instance;
} _Req_C_Extend_MonopolizeDisable_default_instance_;
class Rsp_C_Extend_MonopolizeDisableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_MonopolizeDisable> _instance;
} _Rsp_C_Extend_MonopolizeDisable_default_instance_;
class Req_C_Extend_GetDevInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_GetDevInfo> _instance;
} _Req_C_Extend_GetDevInfo_default_instance_;
class Rsp_C_Extend_GetDevInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_GetDevInfo> _instance;
} _Rsp_C_Extend_GetDevInfo_default_instance_;
class Req_C_Extend_DevSignDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_DevSign> _instance;
} _Req_C_Extend_DevSign_default_instance_;
class Rsp_C_Extend_DevSignDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_DevSign> _instance;
} _Rsp_C_Extend_DevSign_default_instance_;
class Req_C_Extend_Set_DestroyKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_Set_DestroyKey> _instance;
} _Req_C_Extend_Set_DestroyKey_default_instance_;
class Rsp_C_Extend_Set_DestroyKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_Set_DestroyKey> _instance;
} _Rsp_C_Extend_Set_DestroyKey_default_instance_;
class Req_C_Extend_Get_ExchangePubKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_C_Extend_Get_ExchangePubKey> _instance;
} _Req_C_Extend_Get_ExchangePubKey_default_instance_;
class Rsp_C_Extend_Get_ExchangePubKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_C_Extend_Get_ExchangePubKey> _instance;
} _Rsp_C_Extend_Get_ExchangePubKey_default_instance_;
class Req_softCreateCipherCardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_softCreateCipherCard> _instance;
} _Req_softCreateCipherCard_default_instance_;
class Rsp_softCreateCipherCardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_softCreateCipherCard> _instance;
} _Rsp_softCreateCipherCard_default_instance_;
class Req_DestroyCipherCardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Req_DestroyCipherCard> _instance;
} _Req_DestroyCipherCard_default_instance_;
class Rsp_DestroyCipherCardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rsp_DestroyCipherCard> _instance;
} _Rsp_DestroyCipherCard_default_instance_;
}  // namespace pkcs11
}  // namespace weston
}  // namespace com
static void InitDefaultsPRO_Version_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_PRO_Version_default_instance_;
    new (ptr) ::com::weston::pkcs11::PRO_Version();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::PRO_Version::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PRO_Version_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPRO_Version_pkcs11_2eproto}, {}};

static void InitDefaultsPRO_Attribute_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_PRO_Attribute_default_instance_;
    new (ptr) ::com::weston::pkcs11::PRO_Attribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::PRO_Attribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PRO_Attribute_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPRO_Attribute_pkcs11_2eproto}, {}};

static void InitDefaultsPRO_Mechanism_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_PRO_Mechanism_default_instance_;
    new (ptr) ::com::weston::pkcs11::PRO_Mechanism();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::PRO_Mechanism::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PRO_Mechanism_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPRO_Mechanism_pkcs11_2eproto}, {}};

static void InitDefaultsPRO_CK_INFO_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_PRO_CK_INFO_default_instance_;
    new (ptr) ::com::weston::pkcs11::PRO_CK_INFO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::PRO_CK_INFO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PRO_CK_INFO_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPRO_CK_INFO_pkcs11_2eproto}, {
      &scc_info_PRO_Version_pkcs11_2eproto.base,}};

static void InitDefaultsPRO_CK_SLOT_INFO_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_PRO_CK_SLOT_INFO_default_instance_;
    new (ptr) ::com::weston::pkcs11::PRO_CK_SLOT_INFO();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::PRO_CK_SLOT_INFO::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PRO_CK_SLOT_INFO_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPRO_CK_SLOT_INFO_pkcs11_2eproto}, {
      &scc_info_PRO_Version_pkcs11_2eproto.base,}};

static void InitDefaultsPRO_TokenInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_PRO_TokenInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::PRO_TokenInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::PRO_TokenInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PRO_TokenInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPRO_TokenInfo_pkcs11_2eproto}, {
      &scc_info_PRO_Version_pkcs11_2eproto.base,}};

static void InitDefaultsPRO_MechanismInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_PRO_MechanismInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::PRO_MechanismInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::PRO_MechanismInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PRO_MechanismInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPRO_MechanismInfo_pkcs11_2eproto}, {}};

static void InitDefaultsPRO_SessionInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_PRO_SessionInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::PRO_SessionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::PRO_SessionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PRO_SessionInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPRO_SessionInfo_pkcs11_2eproto}, {}};

static void InitDefaultsPRO_ipparam_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_PRO_ipparam_default_instance_;
    new (ptr) ::com::weston::pkcs11::PRO_ipparam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::PRO_ipparam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PRO_ipparam_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPRO_ipparam_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Initialize_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Initialize_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Initialize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Initialize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Initialize_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Initialize_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Initialize_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Initialize_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Initialize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Initialize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Initialize_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Initialize_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Finalize_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Finalize_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Finalize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Finalize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Finalize_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Finalize_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Finalize_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Finalize_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Finalize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Finalize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Finalize_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Finalize_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_GetInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GetInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GetInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GetInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_GetInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_GetInfo_pkcs11_2eproto}, {
      &scc_info_PRO_CK_INFO_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_GetInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GetInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GetInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GetInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Rsp_C_GetInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRsp_C_GetInfo_pkcs11_2eproto}, {
      &scc_info_PRO_CK_INFO_pkcs11_2eproto.base,}};

static void InitDefaultsReq_C_GetFunctionList_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GetFunctionList_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GetFunctionList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GetFunctionList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_GetFunctionList_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_GetFunctionList_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_GetFunctionList_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GetFunctionList_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GetFunctionList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GetFunctionList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_GetFunctionList_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_GetFunctionList_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_GetSlotList_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GetSlotList_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GetSlotList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GetSlotList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_GetSlotList_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_GetSlotList_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_GetSlotList_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GetSlotList_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GetSlotList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GetSlotList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_GetSlotList_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_GetSlotList_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_GetSlotInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GetSlotInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GetSlotInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GetSlotInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_GetSlotInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_GetSlotInfo_pkcs11_2eproto}, {
      &scc_info_PRO_CK_SLOT_INFO_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_GetSlotInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GetSlotInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GetSlotInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GetSlotInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Rsp_C_GetSlotInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRsp_C_GetSlotInfo_pkcs11_2eproto}, {
      &scc_info_PRO_CK_SLOT_INFO_pkcs11_2eproto.base,}};

static void InitDefaultsReq_C_GetTokenInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GetTokenInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GetTokenInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GetTokenInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_GetTokenInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_GetTokenInfo_pkcs11_2eproto}, {
      &scc_info_PRO_TokenInfo_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_GetTokenInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GetTokenInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GetTokenInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GetTokenInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Rsp_C_GetTokenInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRsp_C_GetTokenInfo_pkcs11_2eproto}, {
      &scc_info_PRO_TokenInfo_pkcs11_2eproto.base,}};

static void InitDefaultsReq_C_GetMechanismList_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GetMechanismList_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GetMechanismList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GetMechanismList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_GetMechanismList_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_GetMechanismList_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_GetMechanismList_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GetMechanismList_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GetMechanismList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GetMechanismList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_GetMechanismList_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_GetMechanismList_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_GetMechanismInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GetMechanismInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GetMechanismInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GetMechanismInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_GetMechanismInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_GetMechanismInfo_pkcs11_2eproto}, {
      &scc_info_PRO_MechanismInfo_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_GetMechanismInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GetMechanismInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GetMechanismInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GetMechanismInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Rsp_C_GetMechanismInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRsp_C_GetMechanismInfo_pkcs11_2eproto}, {
      &scc_info_PRO_MechanismInfo_pkcs11_2eproto.base,}};

static void InitDefaultsReq_C_InitToken_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_InitToken_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_InitToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_InitToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_InitToken_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_InitToken_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_InitToken_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_InitToken_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_InitToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_InitToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_InitToken_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_InitToken_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_InitPIN_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_InitPIN_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_InitPIN();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_InitPIN::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_InitPIN_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_InitPIN_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_InitPIN_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_InitPIN_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_InitPIN();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_InitPIN::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_InitPIN_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_InitPIN_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_SetPIN_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_SetPIN_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_SetPIN();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_SetPIN::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_SetPIN_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_SetPIN_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_SetPIN_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_SetPIN_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_SetPIN();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_SetPIN::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_SetPIN_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_SetPIN_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_OpenSession_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_OpenSession_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_OpenSession();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_OpenSession::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_OpenSession_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_OpenSession_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_OpenSession_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_OpenSession_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_OpenSession();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_OpenSession::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_OpenSession_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_OpenSession_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_CloseSession_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_CloseSession_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_CloseSession();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_CloseSession::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_CloseSession_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_CloseSession_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_CloseSession_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_CloseSession_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_CloseSession();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_CloseSession::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_CloseSession_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_CloseSession_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_CloseAllSessions_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_CloseAllSessions_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_CloseAllSessions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_CloseAllSessions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_CloseAllSessions_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_CloseAllSessions_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_CloseAllSessions_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_CloseAllSessions_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_CloseAllSessions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_CloseAllSessions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_CloseAllSessions_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_CloseAllSessions_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_GetSessionInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GetSessionInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GetSessionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GetSessionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_GetSessionInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_GetSessionInfo_pkcs11_2eproto}, {
      &scc_info_PRO_SessionInfo_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_GetSessionInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GetSessionInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GetSessionInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GetSessionInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Rsp_C_GetSessionInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRsp_C_GetSessionInfo_pkcs11_2eproto}, {
      &scc_info_PRO_SessionInfo_pkcs11_2eproto.base,}};

static void InitDefaultsReq_C_GetOperationState_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GetOperationState_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GetOperationState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GetOperationState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_GetOperationState_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_GetOperationState_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_GetOperationState_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GetOperationState_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GetOperationState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GetOperationState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_GetOperationState_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_GetOperationState_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_SetOperationState_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_SetOperationState_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_SetOperationState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_SetOperationState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_SetOperationState_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_SetOperationState_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_SetOperationState_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_SetOperationState_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_SetOperationState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_SetOperationState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_SetOperationState_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_SetOperationState_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Login_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Login_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Login_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Login_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Login_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Login_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Login_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Login_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Logout_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Logout_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Logout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Logout::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Logout_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Logout_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Logout_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Logout_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Logout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Logout::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Logout_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Logout_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_CreateObject_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_CreateObject_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_CreateObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_CreateObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_CreateObject_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_CreateObject_pkcs11_2eproto}, {
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_CreateObject_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_CreateObject_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_CreateObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_CreateObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_CreateObject_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_CreateObject_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_CopyObject_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_CopyObject_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_CopyObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_CopyObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_CopyObject_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_CopyObject_pkcs11_2eproto}, {
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_CopyObject_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_CopyObject_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_CopyObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_CopyObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_CopyObject_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_CopyObject_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_DestroyObject_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_DestroyObject_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_DestroyObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_DestroyObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_DestroyObject_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_DestroyObject_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_DestroyObject_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_DestroyObject_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_DestroyObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_DestroyObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_DestroyObject_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_DestroyObject_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_GetObjectSize_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GetObjectSize_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GetObjectSize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GetObjectSize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_GetObjectSize_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_GetObjectSize_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_GetObjectSize_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GetObjectSize_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GetObjectSize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GetObjectSize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_GetObjectSize_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_GetObjectSize_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_GetAttributeValue_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GetAttributeValue_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GetAttributeValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GetAttributeValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_GetAttributeValue_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_GetAttributeValue_pkcs11_2eproto}, {
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_GetAttributeValue_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GetAttributeValue_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GetAttributeValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GetAttributeValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Rsp_C_GetAttributeValue_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRsp_C_GetAttributeValue_pkcs11_2eproto}, {
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsReq_C_SetAttributeValue_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_SetAttributeValue_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_SetAttributeValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_SetAttributeValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_SetAttributeValue_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_SetAttributeValue_pkcs11_2eproto}, {
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_SetAttributeValue_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_SetAttributeValue_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_SetAttributeValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_SetAttributeValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_SetAttributeValue_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_SetAttributeValue_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_FindObjectsInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_FindObjectsInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_FindObjectsInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_FindObjectsInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_FindObjectsInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_FindObjectsInit_pkcs11_2eproto}, {
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_FindObjectsInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_FindObjectsInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_FindObjectsInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_FindObjectsInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_FindObjectsInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_FindObjectsInit_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_FindObjects_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_FindObjects_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_FindObjects();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_FindObjects::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_FindObjects_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_FindObjects_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_FindObjects_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_FindObjects_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_FindObjects();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_FindObjects::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_FindObjects_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_FindObjects_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_FindObjectsFinal_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_FindObjectsFinal_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_FindObjectsFinal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_FindObjectsFinal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_FindObjectsFinal_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_FindObjectsFinal_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_FindObjectsFinal_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_FindObjectsFinal_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_FindObjectsFinal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_FindObjectsFinal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_FindObjectsFinal_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_FindObjectsFinal_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_EncryptInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_EncryptInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_EncryptInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_EncryptInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_EncryptInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_EncryptInit_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_EncryptInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_EncryptInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_EncryptInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_EncryptInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_EncryptInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_EncryptInit_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Encrypt_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Encrypt_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Encrypt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Encrypt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Encrypt_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Encrypt_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Encrypt_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Encrypt_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Encrypt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Encrypt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Encrypt_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Encrypt_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_EncryptUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_EncryptUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_EncryptUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_EncryptUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_EncryptUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_EncryptUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_EncryptUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_EncryptUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_EncryptUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_EncryptUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_EncryptUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_EncryptUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_EncryptFinal_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_EncryptFinal_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_EncryptFinal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_EncryptFinal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_EncryptFinal_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_EncryptFinal_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_EncryptFinal_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_EncryptFinal_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_EncryptFinal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_EncryptFinal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_EncryptFinal_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_EncryptFinal_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_DecryptInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_DecryptInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_DecryptInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_DecryptInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_DecryptInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_DecryptInit_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_DecryptInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_DecryptInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_DecryptInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_DecryptInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_DecryptInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_DecryptInit_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Decrypt_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Decrypt_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Decrypt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Decrypt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Decrypt_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Decrypt_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Decrypt_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Decrypt_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Decrypt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Decrypt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Decrypt_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Decrypt_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_DecryptUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_DecryptUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_DecryptUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_DecryptUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_DecryptUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_DecryptUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_DecryptUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_DecryptUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_DecryptUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_DecryptUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_DecryptUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_DecryptUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_DecryptFinal_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_DecryptFinal_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_DecryptFinal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_DecryptFinal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_DecryptFinal_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_DecryptFinal_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_DecryptFinal_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_DecryptFinal_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_DecryptFinal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_DecryptFinal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_DecryptFinal_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_DecryptFinal_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_DigestInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_DigestInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_DigestInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_DigestInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_DigestInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_DigestInit_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_DigestInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_DigestInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_DigestInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_DigestInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_DigestInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_DigestInit_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Digest_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Digest_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Digest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Digest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Digest_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Digest_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Digest_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Digest_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Digest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Digest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Digest_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Digest_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_DigestUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_DigestUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_DigestUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_DigestUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_DigestUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_DigestUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_DigestUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_DigestUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_DigestUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_DigestUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_DigestUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_DigestUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_DigestKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_DigestKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_DigestKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_DigestKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_DigestKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_DigestKey_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_DigestKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_DigestKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_DigestKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_DigestKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_DigestKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_DigestKey_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_DigestFinal_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_DigestFinal_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_DigestFinal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_DigestFinal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_DigestFinal_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_DigestFinal_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_DigestFinal_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_DigestFinal_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_DigestFinal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_DigestFinal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_DigestFinal_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_DigestFinal_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_SignInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_SignInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_SignInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_SignInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_SignInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_SignInit_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_SignInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_SignInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_SignInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_SignInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_SignInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_SignInit_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Sign_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Sign_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Sign();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Sign::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Sign_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Sign_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Sign_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Sign_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Sign();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Sign::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Sign_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Sign_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_SignUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_SignUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_SignUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_SignUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_SignUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_SignUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_SignUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_SignUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_SignUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_SignUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_SignUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_SignUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_SignFinal_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_SignFinal_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_SignFinal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_SignFinal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_SignFinal_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_SignFinal_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_SignFinal_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_SignFinal_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_SignFinal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_SignFinal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_SignFinal_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_SignFinal_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_SignRecoverInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_SignRecoverInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_SignRecoverInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_SignRecoverInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_SignRecoverInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_SignRecoverInit_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_SignRecoverInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_SignRecoverInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_SignRecoverInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_SignRecoverInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_SignRecoverInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_SignRecoverInit_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_SignRecover_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_SignRecover_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_SignRecover();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_SignRecover::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_SignRecover_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_SignRecover_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_SignRecover_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_SignRecover_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_SignRecover();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_SignRecover::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_SignRecover_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_SignRecover_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_VerifyInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_VerifyInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_VerifyInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_VerifyInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_VerifyInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_VerifyInit_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_VerifyInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_VerifyInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_VerifyInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_VerifyInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_VerifyInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_VerifyInit_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Verify_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Verify_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Verify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Verify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Verify_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Verify_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Verify_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Verify_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Verify();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Verify::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Verify_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Verify_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_VerifyUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_VerifyUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_VerifyUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_VerifyUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_VerifyUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_VerifyUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_VerifyUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_VerifyUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_VerifyUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_VerifyUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_VerifyUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_VerifyUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_VerifyFinal_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_VerifyFinal_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_VerifyFinal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_VerifyFinal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_VerifyFinal_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_VerifyFinal_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_VerifyFinal_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_VerifyFinal_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_VerifyFinal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_VerifyFinal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_VerifyFinal_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_VerifyFinal_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_VerifyRecoverInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_VerifyRecoverInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_VerifyRecoverInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_VerifyRecoverInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_VerifyRecoverInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_VerifyRecoverInit_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_VerifyRecoverInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_VerifyRecoverInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_VerifyRecoverInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_VerifyRecoverInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_VerifyRecoverInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_VerifyRecoverInit_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_VerifyRecover_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_VerifyRecover_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_VerifyRecover();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_VerifyRecover::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_VerifyRecover_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_VerifyRecover_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_VerifyRecover_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_VerifyRecover_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_VerifyRecover();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_VerifyRecover::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_VerifyRecover_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_VerifyRecover_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_DigestEncryptUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_DigestEncryptUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_DigestEncryptUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_DigestEncryptUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_DigestEncryptUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_DigestEncryptUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_DigestEncryptUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_DigestEncryptUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_DigestEncryptUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_DigestEncryptUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_DigestEncryptUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_DigestEncryptUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_DecryptDigestUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_DecryptDigestUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_DecryptDigestUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_DecryptDigestUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_DecryptDigestUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_DecryptDigestUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_DecryptDigestUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_DecryptDigestUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_DecryptDigestUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_DecryptDigestUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_DecryptDigestUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_DecryptDigestUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_SignEncryptUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_SignEncryptUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_SignEncryptUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_SignEncryptUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_SignEncryptUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_SignEncryptUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_SignEncryptUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_SignEncryptUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_SignEncryptUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_SignEncryptUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_SignEncryptUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_SignEncryptUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_DecryptVerifyUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_DecryptVerifyUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_DecryptVerifyUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_DecryptVerifyUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_DecryptVerifyUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_DecryptVerifyUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_DecryptVerifyUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_DecryptVerifyUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_DecryptVerifyUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_DecryptVerifyUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_DecryptVerifyUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_DecryptVerifyUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_GenerateKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GenerateKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GenerateKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GenerateKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Req_C_GenerateKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReq_C_GenerateKey_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_GenerateKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GenerateKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GenerateKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GenerateKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_GenerateKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_GenerateKey_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_GenerateKeyPair_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GenerateKeyPair_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GenerateKeyPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GenerateKeyPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Req_C_GenerateKeyPair_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReq_C_GenerateKeyPair_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_GenerateKeyPair_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GenerateKeyPair_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GenerateKeyPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GenerateKeyPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_GenerateKeyPair_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_GenerateKeyPair_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_WrapKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_WrapKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_WrapKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_WrapKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_WrapKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_WrapKey_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_WrapKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_WrapKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_WrapKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_WrapKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_WrapKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_WrapKey_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_UnwrapKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_UnwrapKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_UnwrapKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_UnwrapKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Req_C_UnwrapKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReq_C_UnwrapKey_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_UnwrapKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_UnwrapKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_UnwrapKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_UnwrapKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_UnwrapKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_UnwrapKey_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_DeriveKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_DeriveKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_DeriveKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_DeriveKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Req_C_DeriveKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReq_C_DeriveKey_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_DeriveKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_DeriveKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_DeriveKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_DeriveKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_DeriveKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_DeriveKey_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_SeedRandom_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_SeedRandom_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_SeedRandom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_SeedRandom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_SeedRandom_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_SeedRandom_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_SeedRandom_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_SeedRandom_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_SeedRandom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_SeedRandom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_SeedRandom_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_SeedRandom_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_GenerateRandom_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GenerateRandom_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GenerateRandom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GenerateRandom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_GenerateRandom_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_GenerateRandom_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_GenerateRandom_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GenerateRandom_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GenerateRandom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GenerateRandom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_GenerateRandom_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_GenerateRandom_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_GetFunctionStatus_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_GetFunctionStatus_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_GetFunctionStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_GetFunctionStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_GetFunctionStatus_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_GetFunctionStatus_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_GetFunctionStatus_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_GetFunctionStatus_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_GetFunctionStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_GetFunctionStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_GetFunctionStatus_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_GetFunctionStatus_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_CancelFunction_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_CancelFunction_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_CancelFunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_CancelFunction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_CancelFunction_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_CancelFunction_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_CancelFunction_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_CancelFunction_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_CancelFunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_CancelFunction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_CancelFunction_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_CancelFunction_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_WaitForSlotEvent_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_WaitForSlotEvent_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_WaitForSlotEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_WaitForSlotEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_WaitForSlotEvent_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_WaitForSlotEvent_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_WaitForSlotEvent_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_WaitForSlotEvent_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_WaitForSlotEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_WaitForSlotEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_WaitForSlotEvent_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_WaitForSlotEvent_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_GetPinRemainCount_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_GetPinRemainCount_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_GetPinRemainCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_GetPinRemainCount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_GetPinRemainCount_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_GetPinRemainCount_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_GetPinRemainCount_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_GetPinRemainCount_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_GetPinRemainCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_GetPinRemainCount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_GetPinRemainCount_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_GetPinRemainCount_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_GetStatus_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_GetStatus_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_GetStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_GetStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_GetStatus_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_GetStatus_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_GetStatus_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_GetStatus_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_GetStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_GetStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_GetStatus_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_GetStatus_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_Status_Callback_Func_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_Status_Callback_Func_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_Status_Callback_Func();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_Status_Callback_Func::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_Status_Callback_Func_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_Status_Callback_Func_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_Register_Callback_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_Register_Callback_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_Register_Callback();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_Register_Callback::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_Register_Callback_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_Register_Callback_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_Register_Callback_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_Register_Callback_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_Register_Callback();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_Register_Callback::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_Register_Callback_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_Register_Callback_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_Unregister_Callback_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_Unregister_Callback_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_Unregister_Callback();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_Unregister_Callback::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_Unregister_Callback_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_Unregister_Callback_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_Unregister_Callback_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_Unregister_Callback_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_Unregister_Callback();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_Unregister_Callback::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_Unregister_Callback_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_Unregister_Callback_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_GetExchangeSessionKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_GetExchangeSessionKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_GetExchangeSessionKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_GetExchangeSessionKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_GetExchangeSessionKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_GetExchangeSessionKey_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_GetExchangeSessionKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_GetExchangeSessionKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_GetExchangeSessionKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_GetExchangeSessionKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_GetExchangeSessionKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_GetExchangeSessionKey_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_Destroy_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_Destroy_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_Destroy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_Destroy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_Destroy_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_Destroy_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_Destroy_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_Destroy_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_Destroy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_Destroy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_Destroy_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_Destroy_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_Reset_Pin_With_OTP_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_Reset_Pin_With_OTP_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_Reset_Pin_With_OTP_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_Reset_Pin_With_OTP_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_Reset_Pin_With_OTP_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_Reset_Pin_With_OTP_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_Reset_Pin_With_OTP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_Reset_Pin_With_OTP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_Reset_Pin_With_OTP_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_Reset_Pin_With_OTP_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_Reset_OTP_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_Reset_OTP_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_Reset_OTP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_Reset_OTP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_Reset_OTP_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_Reset_OTP_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_Reset_OTP_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_Reset_OTP_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_Reset_OTP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_Reset_OTP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_Reset_OTP_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_Reset_OTP_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_Get_OTP_Unlock_Count_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_Get_OTP_Unlock_Count_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_Get_OTP_Unlock_Count();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_Get_OTP_Unlock_Count::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_Get_OTP_Unlock_Count_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_Get_OTP_Unlock_Count_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_Get_OTP_Unlock_Count_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_Get_OTP_Unlock_Count_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Unlock_Count();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Unlock_Count::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_Get_OTP_Unlock_Count_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_Get_OTP_Unlock_Count_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_Get_OTP_Remain_Count_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_Get_OTP_Remain_Count_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_Get_OTP_Remain_Count();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_Get_OTP_Remain_Count::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_Get_OTP_Remain_Count_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_Get_OTP_Remain_Count_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_Get_OTP_Remain_Count_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_Get_OTP_Remain_Count_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Remain_Count();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Remain_Count::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_Get_OTP_Remain_Count_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_Get_OTP_Remain_Count_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_DeriveSessionKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_DeriveSessionKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Req_C_Extend_DeriveSessionKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReq_C_Extend_DeriveSessionKey_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_Extend_DeriveSessionKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_DeriveSessionKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_DeriveSessionKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_DeriveSessionKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_DeriveSessionKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_DeriveSessionKey_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_EncryptInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_EncryptInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_EncryptInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_EncryptInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Req_C_Extend_EncryptInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReq_C_Extend_EncryptInit_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_Extend_EncryptInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_EncryptInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_EncryptInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_EncryptInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_EncryptInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_EncryptInit_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_DecryptInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_DecryptInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_DecryptInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_DecryptInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Req_C_Extend_DecryptInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReq_C_Extend_DecryptInit_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,
      &scc_info_PRO_Attribute_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_Extend_DecryptInit_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_DecryptInit_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_DecryptInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_DecryptInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_DecryptInit_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_DecryptInit_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_EncryptUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_EncryptUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_EncryptUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_EncryptUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_EncryptUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_EncryptUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_EncryptUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_EncryptUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_EncryptUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_EncryptUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_EncryptUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_EncryptUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_DecryptUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_DecryptUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_DecryptUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_DecryptUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_DecryptUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_DecryptUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_DecryptUpdate_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_DecryptUpdate_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_DecryptUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_DecryptUpdate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_DecryptUpdate_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_DecryptUpdate_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_EncryptFinalize_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_EncryptFinalize_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_EncryptFinalize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_EncryptFinalize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_EncryptFinalize_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_EncryptFinalize_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_EncryptFinalize_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_EncryptFinalize_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_EncryptFinalize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_EncryptFinalize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_EncryptFinalize_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_EncryptFinalize_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_DecryptFinalize_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_DecryptFinalize_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_DecryptFinalize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_DecryptFinalize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_DecryptFinalize_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_DecryptFinalize_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_DecryptFinalize_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_DecryptFinalize_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_DecryptFinalize();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_DecryptFinalize::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_DecryptFinalize_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_DecryptFinalize_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_PointMultiply_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_PointMultiply_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_PointMultiply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_PointMultiply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_Extend_PointMultiply_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_Extend_PointMultiply_pkcs11_2eproto}, {
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_Extend_PointMultiply_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_PointMultiply_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_PointMultiply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_PointMultiply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_PointMultiply_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_PointMultiply_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_Reset_TT_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_Reset_TT_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_Reset_TT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_Reset_TT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_Reset_TT_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_Reset_TT_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_Reset_TT_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_Reset_TT_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_Reset_TT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_Reset_TT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_Reset_TT_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_Reset_TT_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_Reset_BK_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_Reset_BK_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_Reset_BK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_Reset_BK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_Reset_BK_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_Reset_BK_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_Reset_BK_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_Reset_BK_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_Reset_BK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_Reset_BK::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_Reset_BK_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_Reset_BK_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_Get_Special_Object_Version_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_Get_Special_Object_Version_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_Get_Special_Object_Version();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_Get_Special_Object_Version::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_Get_Special_Object_Version_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_Get_Special_Object_Version_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_Get_Special_Object_Version_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_Get_Special_Object_Version_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_Get_Special_Object_Version();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_Get_Special_Object_Version::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_Get_Special_Object_Version_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_Get_Special_Object_Version_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_DestroyCard_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_DestroyCard_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_DestroyCard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_DestroyCard::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_DestroyCard_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_DestroyCard_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_DestroyCard_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_DestroyCard_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_DestroyCard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_DestroyCard::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_DestroyCard_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_DestroyCard_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_MonopolizeEnable_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_MonopolizeEnable_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_MonopolizeEnable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_MonopolizeEnable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_MonopolizeEnable_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_MonopolizeEnable_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_MonopolizeEnable_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_MonopolizeEnable_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_MonopolizeEnable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_MonopolizeEnable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_MonopolizeEnable_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_MonopolizeEnable_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_MonopolizeDisable_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_MonopolizeDisable_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_MonopolizeDisable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_MonopolizeDisable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_MonopolizeDisable_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_MonopolizeDisable_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_MonopolizeDisable_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_MonopolizeDisable_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_MonopolizeDisable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_MonopolizeDisable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_MonopolizeDisable_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_MonopolizeDisable_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_GetDevInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_GetDevInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_GetDevInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_GetDevInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Req_C_Extend_GetDevInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReq_C_Extend_GetDevInfo_pkcs11_2eproto}, {
      &scc_info_PRO_ipparam_pkcs11_2eproto.base,}};

static void InitDefaultsRsp_C_Extend_GetDevInfo_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_GetDevInfo_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_GetDevInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_GetDevInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_GetDevInfo_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_GetDevInfo_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_DevSign_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_DevSign_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_DevSign();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_DevSign::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_DevSign_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_DevSign_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_DevSign_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_DevSign_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_DevSign();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_DevSign::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_DevSign_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_DevSign_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_Set_DestroyKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_Set_DestroyKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_Set_DestroyKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_Set_DestroyKey_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_Set_DestroyKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_Set_DestroyKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_Set_DestroyKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_Set_DestroyKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_Set_DestroyKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_Set_DestroyKey_pkcs11_2eproto}, {}};

static void InitDefaultsReq_C_Extend_Get_ExchangePubKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_C_Extend_Get_ExchangePubKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_C_Extend_Get_ExchangePubKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_C_Extend_Get_ExchangePubKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_C_Extend_Get_ExchangePubKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_C_Extend_Get_ExchangePubKey_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_C_Extend_Get_ExchangePubKey_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_C_Extend_Get_ExchangePubKey_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_C_Extend_Get_ExchangePubKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_C_Extend_Get_ExchangePubKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_C_Extend_Get_ExchangePubKey_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_C_Extend_Get_ExchangePubKey_pkcs11_2eproto}, {}};

static void InitDefaultsReq_softCreateCipherCard_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_softCreateCipherCard_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_softCreateCipherCard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_softCreateCipherCard::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_softCreateCipherCard_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_softCreateCipherCard_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_softCreateCipherCard_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_softCreateCipherCard_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_softCreateCipherCard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_softCreateCipherCard::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_softCreateCipherCard_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_softCreateCipherCard_pkcs11_2eproto}, {}};

static void InitDefaultsReq_DestroyCipherCard_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Req_DestroyCipherCard_default_instance_;
    new (ptr) ::com::weston::pkcs11::Req_DestroyCipherCard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Req_DestroyCipherCard::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Req_DestroyCipherCard_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReq_DestroyCipherCard_pkcs11_2eproto}, {}};

static void InitDefaultsRsp_DestroyCipherCard_pkcs11_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::weston::pkcs11::_Rsp_DestroyCipherCard_default_instance_;
    new (ptr) ::com::weston::pkcs11::Rsp_DestroyCipherCard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::weston::pkcs11::Rsp_DestroyCipherCard::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Rsp_DestroyCipherCard_pkcs11_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRsp_DestroyCipherCard_pkcs11_2eproto}, {}};

void InitDefaults_pkcs11_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_PRO_Version_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PRO_Attribute_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PRO_Mechanism_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PRO_CK_INFO_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PRO_CK_SLOT_INFO_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PRO_TokenInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PRO_MechanismInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PRO_SessionInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PRO_ipparam_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Initialize_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Initialize_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Finalize_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Finalize_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GetInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GetInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GetFunctionList_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GetFunctionList_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GetSlotList_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GetSlotList_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GetSlotInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GetSlotInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GetTokenInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GetTokenInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GetMechanismList_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GetMechanismList_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GetMechanismInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GetMechanismInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_InitToken_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_InitToken_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_InitPIN_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_InitPIN_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_SetPIN_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_SetPIN_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_OpenSession_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_OpenSession_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_CloseSession_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_CloseSession_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_CloseAllSessions_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_CloseAllSessions_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GetSessionInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GetSessionInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GetOperationState_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GetOperationState_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_SetOperationState_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_SetOperationState_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Login_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Login_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Logout_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Logout_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_CreateObject_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_CreateObject_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_CopyObject_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_CopyObject_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_DestroyObject_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_DestroyObject_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GetObjectSize_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GetObjectSize_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GetAttributeValue_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GetAttributeValue_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_SetAttributeValue_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_SetAttributeValue_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_FindObjectsInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_FindObjectsInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_FindObjects_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_FindObjects_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_FindObjectsFinal_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_FindObjectsFinal_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_EncryptInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_EncryptInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Encrypt_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Encrypt_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_EncryptUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_EncryptUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_EncryptFinal_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_EncryptFinal_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_DecryptInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_DecryptInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Decrypt_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Decrypt_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_DecryptUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_DecryptUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_DecryptFinal_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_DecryptFinal_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_DigestInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_DigestInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Digest_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Digest_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_DigestUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_DigestUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_DigestKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_DigestKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_DigestFinal_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_DigestFinal_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_SignInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_SignInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Sign_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Sign_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_SignUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_SignUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_SignFinal_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_SignFinal_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_SignRecoverInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_SignRecoverInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_SignRecover_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_SignRecover_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_VerifyInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_VerifyInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Verify_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Verify_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_VerifyUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_VerifyUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_VerifyFinal_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_VerifyFinal_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_VerifyRecoverInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_VerifyRecoverInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_VerifyRecover_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_VerifyRecover_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_DigestEncryptUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_DigestEncryptUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_DecryptDigestUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_DecryptDigestUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_SignEncryptUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_SignEncryptUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_DecryptVerifyUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_DecryptVerifyUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GenerateKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GenerateKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GenerateKeyPair_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GenerateKeyPair_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_WrapKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_WrapKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_UnwrapKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_UnwrapKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_DeriveKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_DeriveKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_SeedRandom_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_SeedRandom_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GenerateRandom_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GenerateRandom_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_GetFunctionStatus_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_GetFunctionStatus_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_CancelFunction_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_CancelFunction_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_WaitForSlotEvent_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_WaitForSlotEvent_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_GetPinRemainCount_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_GetPinRemainCount_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_GetStatus_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_GetStatus_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_Status_Callback_Func_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_Register_Callback_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_Register_Callback_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_Unregister_Callback_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_Unregister_Callback_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_GetExchangeSessionKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_GetExchangeSessionKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_Destroy_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_Destroy_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_Reset_Pin_With_OTP_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_Reset_Pin_With_OTP_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_Reset_OTP_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_Reset_OTP_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_Get_OTP_Unlock_Count_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_Get_OTP_Unlock_Count_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_Get_OTP_Remain_Count_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_Get_OTP_Remain_Count_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_DeriveSessionKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_DeriveSessionKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_EncryptInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_EncryptInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_DecryptInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_DecryptInit_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_EncryptUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_EncryptUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_DecryptUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_DecryptUpdate_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_EncryptFinalize_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_EncryptFinalize_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_DecryptFinalize_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_DecryptFinalize_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_PointMultiply_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_PointMultiply_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_Reset_TT_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_Reset_TT_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_Reset_BK_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_Reset_BK_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_Get_Special_Object_Version_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_Get_Special_Object_Version_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_DestroyCard_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_DestroyCard_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_MonopolizeEnable_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_MonopolizeEnable_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_MonopolizeDisable_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_MonopolizeDisable_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_GetDevInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_GetDevInfo_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_DevSign_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_DevSign_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_Set_DestroyKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_Set_DestroyKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_C_Extend_Get_ExchangePubKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_C_Extend_Get_ExchangePubKey_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_softCreateCipherCard_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_softCreateCipherCard_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Req_DestroyCipherCard_pkcs11_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Rsp_DestroyCipherCard_pkcs11_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_pkcs11_2eproto[206];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_pkcs11_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_pkcs11_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_pkcs11_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Version, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Version, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Version, major_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Version, minor_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Attribute, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Attribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Attribute, type_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Attribute, value_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Attribute, ulvaluelen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Mechanism, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Mechanism, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Mechanism, mechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Mechanism, pparameter_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_Mechanism, ulvaluelen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_INFO, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_INFO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_INFO, cryptokiversion_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_INFO, manufacturerid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_INFO, flags_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_INFO, librarydescription_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_INFO, libraryversion_),
  2,
  0,
  4,
  1,
  3,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_SLOT_INFO, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_SLOT_INFO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_SLOT_INFO, slotdescription_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_SLOT_INFO, manufacturerid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_SLOT_INFO, flags_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_SLOT_INFO, hardwareversion_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_CK_SLOT_INFO, firmwareversion_),
  0,
  1,
  4,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, labe_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, manufacturerid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, model_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, serialnumber_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, flags_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, ulmaxsessioncount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, ulsessioncount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, ulmaxrwsessioncount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, ulrwsessioncount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, ulmaxpinlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, ulminpinlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, ultotalpublicmemory_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, ulfreepublicmemory_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, ultotalprivatememory_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, ulfreeprivatememory_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, hardwareversion_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, firmwareversion_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_TokenInfo, utctime_),
  0,
  1,
  2,
  3,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  5,
  6,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_MechanismInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_MechanismInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_MechanismInfo, ulminkeysize_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_MechanismInfo, ulmaxkeysize_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_MechanismInfo, flags_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_SessionInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_SessionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_SessionInfo, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_SessionInfo, state_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_SessionInfo, flags_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_SessionInfo, uldeviceerror_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_ipparam, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_ipparam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_ipparam, ip_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_ipparam, owayport_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::PRO_ipparam, twayport_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Initialize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Initialize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Initialize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Initialize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Finalize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Finalize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Finalize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Finalize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetInfo, pinfo_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetInfo, pinfo_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetFunctionList, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetFunctionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetFunctionList, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetFunctionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSlotList, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSlotList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSlotList, tokenprespent_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSlotList, pslotlist_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSlotList, pulcount_),
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetSlotList, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetSlotList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetSlotList, pslotlist_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetSlotList, pulcount_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSlotInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSlotInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSlotInfo, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSlotInfo, pinfo_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetSlotInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetSlotInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetSlotInfo, pinfo_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetTokenInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetTokenInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetTokenInfo, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetTokenInfo, pinfo_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetTokenInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetTokenInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetTokenInfo, pinfo_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetMechanismList, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetMechanismList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetMechanismList, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetMechanismList, pmechanismlist_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetMechanismList, pulcount_),
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetMechanismList, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetMechanismList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetMechanismList, pmechanismlist_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetMechanismList, pulcount_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetMechanismInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetMechanismInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetMechanismInfo, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetMechanismInfo, type_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetMechanismInfo, pinfo_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetMechanismInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetMechanismInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetMechanismInfo, pinfo_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_InitToken, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_InitToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_InitToken, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_InitToken, ppin_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_InitToken, ulpinlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_InitToken, plabel_),
  2,
  0,
  3,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_InitToken, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_InitToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_InitPIN, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_InitPIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_InitPIN, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_InitPIN, ppin_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_InitPIN, ulpinlen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_InitPIN, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_InitPIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetPIN, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetPIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetPIN, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetPIN, poldpin_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetPIN, uloldlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetPIN, pnewpin_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetPIN, ulnewlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SetPIN, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SetPIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_OpenSession, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_OpenSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_OpenSession, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_OpenSession, flags_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_OpenSession, phsession_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_OpenSession, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_OpenSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_OpenSession, phsession_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CloseSession, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CloseSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CloseSession, hsession_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_CloseSession, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_CloseSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CloseAllSessions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CloseAllSessions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CloseAllSessions, slotid_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_CloseAllSessions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_CloseAllSessions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSessionInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSessionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSessionInfo, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetSessionInfo, pinfo_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetSessionInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetSessionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetSessionInfo, pinfo_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetOperationState, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetOperationState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetOperationState, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetOperationState, poperationstate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetOperationState, puloperationstatelen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetOperationState, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetOperationState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetOperationState, poperationstate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetOperationState, puloperationstatelen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetOperationState, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetOperationState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetOperationState, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetOperationState, poperationstate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetOperationState, uloperationstatelen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetOperationState, hencryptionkey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetOperationState, hauthenticationkey_),
  1,
  0,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SetOperationState, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SetOperationState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Login, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Login, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Login, usertype_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Login, ppin_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Login, ulpinlen_),
  1,
  2,
  0,
  3,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Login, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Logout, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Logout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Logout, hsession_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Logout, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Logout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CreateObject, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CreateObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CreateObject, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CreateObject, ptemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CreateObject, ulcount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CreateObject, phobject_),
  0,
  ~0u,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_CreateObject, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_CreateObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_CreateObject, phobject_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CopyObject, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CopyObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CopyObject, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CopyObject, hobject_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CopyObject, ptemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CopyObject, ulcount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CopyObject, phnewobject_),
  0,
  1,
  ~0u,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_CopyObject, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_CopyObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_CopyObject, phnewobject_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DestroyObject, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DestroyObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DestroyObject, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DestroyObject, hobject_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DestroyObject, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DestroyObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetObjectSize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetObjectSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetObjectSize, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetObjectSize, hobject_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetObjectSize, pulsize_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetObjectSize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetObjectSize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetObjectSize, pulsize_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetAttributeValue, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetAttributeValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetAttributeValue, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetAttributeValue, hobject_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetAttributeValue, ptemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetAttributeValue, ulcount_),
  0,
  1,
  ~0u,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetAttributeValue, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetAttributeValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetAttributeValue, ptemplate_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetAttributeValue, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetAttributeValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetAttributeValue, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetAttributeValue, hobject_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetAttributeValue, ptemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SetAttributeValue, ulcount_),
  0,
  1,
  ~0u,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SetAttributeValue, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SetAttributeValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjectsInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjectsInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjectsInit, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjectsInit, ptemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjectsInit, ulcount_),
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_FindObjectsInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_FindObjectsInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjects, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjects, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjects, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjects, phobject_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjects, ulmaxobjectcount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjects, pulobjectcount_),
  0,
  ~0u,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_FindObjects, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_FindObjects, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_FindObjects, phobject_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_FindObjects, pulobjectcount_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjectsFinal, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjectsFinal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_FindObjectsFinal, hsession_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_FindObjectsFinal, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_FindObjectsFinal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptInit, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptInit, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptInit, hkey_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_EncryptInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_EncryptInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Encrypt, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Encrypt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Encrypt, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Encrypt, pdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Encrypt, uldatalen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Encrypt, pencrypteddata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Encrypt, pulencrypteddatalen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Encrypt, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Encrypt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Encrypt, pencrypteddata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Encrypt, pulencrypteddatalen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptUpdate, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptUpdate, ulpartlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptUpdate, pencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptUpdate, pulencryptedpartlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_EncryptUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_EncryptUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_EncryptUpdate, pencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_EncryptUpdate, pulencryptedpartlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptFinal, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptFinal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptFinal, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptFinal, plastencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_EncryptFinal, pullastencryptedpartlen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_EncryptFinal, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_EncryptFinal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_EncryptFinal, plastencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_EncryptFinal, pullastencryptedpartlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptInit, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptInit, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptInit, hkey_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Decrypt, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Decrypt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Decrypt, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Decrypt, pencrypteddata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Decrypt, ulencrypteddatalen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Decrypt, pdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Decrypt, puldatalen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Decrypt, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Decrypt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Decrypt, pdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Decrypt, puldatalen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptUpdate, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptUpdate, pencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptUpdate, ulencryptedpartlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptUpdate, pulpartlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptUpdate, pulpartlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptFinal, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptFinal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptFinal, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptFinal, plastpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptFinal, pullastpartlen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptFinal, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptFinal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptFinal, plastpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptFinal, pullastpartlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestInit, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestInit, pmechanism_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Digest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Digest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Digest, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Digest, pdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Digest, uldatalen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Digest, pdigest_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Digest, puldigestlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Digest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Digest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Digest, pdigest_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Digest, puldigestlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestUpdate, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestUpdate, ulpartlen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestKey, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestKey, hkey_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestFinal, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestFinal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestFinal, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestFinal, pdigest_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestFinal, puldigestlen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestFinal, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestFinal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestFinal, pdigest_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestFinal, puldigestlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignInit, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignInit, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignInit, hkey_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Sign, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Sign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Sign, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Sign, pdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Sign, uldatalen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Sign, psignature_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Sign, pulsignaturelen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Sign, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Sign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Sign, psignature_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Sign, pulsignaturelen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignUpdate, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignUpdate, ulpartlen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignFinal, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignFinal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignFinal, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignFinal, psignature_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignFinal, pulsignaturelen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignFinal, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignFinal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignFinal, psignature_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignFinal, pulsignaturelen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignRecoverInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignRecoverInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignRecoverInit, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignRecoverInit, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignRecoverInit, hkey_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignRecoverInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignRecoverInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignRecover, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignRecover, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignRecover, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignRecover, pdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignRecover, uldatalen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignRecover, psignature_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignRecover, pulsignaturelen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignRecover, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignRecover, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignRecover, psignature_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignRecover, pulsignaturelen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyInit, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyInit, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyInit, hkey_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_VerifyInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_VerifyInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Verify, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Verify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Verify, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Verify, pdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Verify, uldatalen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Verify, psignature_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Verify, ulsignaturelen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Verify, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Verify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyUpdate, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyUpdate, ulpartlen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_VerifyUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_VerifyUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyFinal, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyFinal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyFinal, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyFinal, psignature_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyFinal, ulsignaturelen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_VerifyFinal, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_VerifyFinal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyRecoverInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyRecoverInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyRecoverInit, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyRecoverInit, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyRecoverInit, hkey_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_VerifyRecoverInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_VerifyRecoverInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyRecover, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyRecover, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyRecover, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyRecover, psignature_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyRecover, ulsignaturelen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyRecover, pdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_VerifyRecover, puldatalen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_VerifyRecover, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_VerifyRecover, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_VerifyRecover, pdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_VerifyRecover, puldatalen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestEncryptUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestEncryptUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestEncryptUpdate, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestEncryptUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestEncryptUpdate, ulpartlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestEncryptUpdate, pencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DigestEncryptUpdate, pulencryptedpartlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestEncryptUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestEncryptUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestEncryptUpdate, pencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DigestEncryptUpdate, pulencryptedpartlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptDigestUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptDigestUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptDigestUpdate, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptDigestUpdate, pencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptDigestUpdate, ulencryptedpartlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptDigestUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptDigestUpdate, pulpartlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptDigestUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptDigestUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptDigestUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptDigestUpdate, pulpartlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignEncryptUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignEncryptUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignEncryptUpdate, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignEncryptUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignEncryptUpdate, ulpartlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignEncryptUpdate, pencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SignEncryptUpdate, pulencryptedpartlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignEncryptUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignEncryptUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignEncryptUpdate, pencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SignEncryptUpdate, pulencryptedpartlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptVerifyUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptVerifyUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptVerifyUpdate, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptVerifyUpdate, pencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptVerifyUpdate, ulencryptedpartlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptVerifyUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DecryptVerifyUpdate, pulpartlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptVerifyUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptVerifyUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptVerifyUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DecryptVerifyUpdate, pulpartlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKey, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKey, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKey, ptemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKey, ulcount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKey, phkey_),
  1,
  0,
  ~0u,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GenerateKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GenerateKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GenerateKey, phkey_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKeyPair, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKeyPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKeyPair, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKeyPair, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKeyPair, ppublickeytemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKeyPair, ulpublickeyattributecount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKeyPair, pprivatekeytemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKeyPair, ulprivatekeyattributecount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKeyPair, phpublickey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateKeyPair, phprivatekey_),
  1,
  0,
  ~0u,
  2,
  ~0u,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GenerateKeyPair, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GenerateKeyPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GenerateKeyPair, phpublickey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GenerateKeyPair, phprivatekey_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WrapKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WrapKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WrapKey, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WrapKey, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WrapKey, hwrappingkey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WrapKey, hkey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WrapKey, pwrappedkey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WrapKey, pulwrappedkeylen_),
  2,
  1,
  3,
  4,
  0,
  5,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_WrapKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_WrapKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_WrapKey, pwrappedkey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_WrapKey, pulwrappedkeylen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_UnwrapKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_UnwrapKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_UnwrapKey, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_UnwrapKey, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_UnwrapKey, hunwrappingkey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_UnwrapKey, pwrappedkey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_UnwrapKey, ulwrappedkeylen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_UnwrapKey, ptemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_UnwrapKey, ulattributecount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_UnwrapKey, phkey_),
  2,
  1,
  3,
  0,
  4,
  ~0u,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_UnwrapKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_UnwrapKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_UnwrapKey, phkey_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DeriveKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DeriveKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DeriveKey, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DeriveKey, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DeriveKey, hbasekey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DeriveKey, ptemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DeriveKey, ulattributecount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_DeriveKey, phkey_),
  1,
  0,
  2,
  ~0u,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DeriveKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DeriveKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_DeriveKey, phkey_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SeedRandom, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SeedRandom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SeedRandom, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SeedRandom, pseed_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_SeedRandom, ulseedlen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SeedRandom, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_SeedRandom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateRandom, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateRandom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateRandom, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateRandom, randomdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GenerateRandom, ulrandomlen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GenerateRandom, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GenerateRandom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GenerateRandom, randomdata_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetFunctionStatus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetFunctionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_GetFunctionStatus, hsession_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetFunctionStatus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_GetFunctionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CancelFunction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CancelFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_CancelFunction, hsession_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_CancelFunction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_CancelFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WaitForSlotEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WaitForSlotEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WaitForSlotEvent, flags_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WaitForSlotEvent, pslot_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_WaitForSlotEvent, prserved_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_WaitForSlotEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_WaitForSlotEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_WaitForSlotEvent, pslot_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_WaitForSlotEvent, prserved_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetPinRemainCount, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetPinRemainCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetPinRemainCount, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetPinRemainCount, puiremaincount_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetPinRemainCount, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetPinRemainCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetPinRemainCount, puiremaincount_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetStatus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetStatus, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetStatus, pstatus_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetStatus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetStatus, pstatus_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_Status_Callback_Func, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_Status_Callback_Func, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_Status_Callback_Func, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_Status_Callback_Func, status_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Register_Callback, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Register_Callback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Register_Callback, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Register_Callback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Unregister_Callback, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Unregister_Callback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Unregister_Callback, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Unregister_Callback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetExchangeSessionKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetExchangeSessionKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetExchangeSessionKey, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetExchangeSessionKey, hkey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetExchangeSessionKey, pencrypteddata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetExchangeSessionKey, pulencrypteddatalen_),
  1,
  2,
  0,
  3,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetExchangeSessionKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetExchangeSessionKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetExchangeSessionKey, pencrypteddata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetExchangeSessionKey, pulencrypteddatalen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Destroy, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Destroy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Destroy, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Destroy, containername_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Destroy, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Destroy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP, pbotppin_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP, ulotppinlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP, pbnewuserpin_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP, ulnewuserpinlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Reset_Pin_With_OTP, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Reset_Pin_With_OTP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_OTP, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_OTP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_OTP, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_OTP, pbotpmpk_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_OTP, ulmpklen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_OTP, pbmpkiv_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_OTP, ulmpkivlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Reset_OTP, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Reset_OTP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_OTP_Unlock_Count, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_OTP_Unlock_Count, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_OTP_Unlock_Count, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_OTP_Unlock_Count, pulcount_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Unlock_Count, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Unlock_Count, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Unlock_Count, pulcount_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_OTP_Remain_Count, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_OTP_Remain_Count, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_OTP_Remain_Count, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_OTP_Remain_Count, pulcount_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Remain_Count, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Remain_Count, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Remain_Count, pulcount_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey, hlocalkey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey, hremotekey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey, ptemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey, ulattributecount_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey, phkey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey, pexchangeiv_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey, pexchangeivlen_),
  2,
  1,
  3,
  4,
  ~0u,
  5,
  6,
  0,
  7,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DeriveSessionKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DeriveSessionKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DeriveSessionKey, phkey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DeriveSessionKey, pexchangeiv_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DeriveSessionKey, pexchangeivlen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptInit, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptInit, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptInit, ptemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptInit, ulattributecount_),
  1,
  0,
  ~0u,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_EncryptInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_EncryptInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptInit, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptInit, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptInit, ptemplate_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptInit, ulattributecount_),
  1,
  0,
  ~0u,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DecryptInit, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DecryptInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptUpdate, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptUpdate, piv_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptUpdate, ulivlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptUpdate, ulpartlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptUpdate, pencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptUpdate, pulencryptedpartlen_),
  3,
  0,
  4,
  1,
  5,
  2,
  6,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_EncryptUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_EncryptUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_EncryptUpdate, pencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_EncryptUpdate, pulencryptedpartlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptUpdate, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptUpdate, piv_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptUpdate, ulivlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptUpdate, pencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptUpdate, ulencryptedpartlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptUpdate, pulpartlen_),
  3,
  0,
  4,
  1,
  5,
  2,
  6,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DecryptUpdate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DecryptUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DecryptUpdate, ppart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DecryptUpdate, pulpartlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptFinalize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptFinalize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptFinalize, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptFinalize, plastencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_EncryptFinalize, pullastencryptedpartlen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_EncryptFinalize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_EncryptFinalize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_EncryptFinalize, plastencryptedpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_EncryptFinalize, pullastencryptedpartlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptFinalize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptFinalize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptFinalize, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptFinalize, plastpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DecryptFinalize, pullastpartlen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DecryptFinalize, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DecryptFinalize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DecryptFinalize, plastpart_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DecryptFinalize, pullastpartlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_PointMultiply, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_PointMultiply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_PointMultiply, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_PointMultiply, pmechanism_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_PointMultiply, hkey_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_PointMultiply, poutdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_PointMultiply, pulcount_),
  2,
  1,
  3,
  0,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_PointMultiply, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_PointMultiply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_PointMultiply, poutdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_PointMultiply, pulcount_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_TT, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_TT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_TT, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_TT, pbttmpk_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_TT, ulmpklen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_TT, pbmpkiv_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_TT, ulmpkivlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Reset_TT, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Reset_TT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_BK, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_BK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_BK, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_BK, pbbkmpk_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_BK, ulmpklen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_BK, pbmpkiv_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Reset_BK, ulmpkivlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Reset_BK, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Reset_BK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_Special_Object_Version, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_Special_Object_Version, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_Special_Object_Version, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_Special_Object_Version, objectclass_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_Special_Object_Version, pversion_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_Special_Object_Version, pullen_),
  1,
  2,
  0,
  3,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_Special_Object_Version, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_Special_Object_Version, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_Special_Object_Version, pversion_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_Special_Object_Version, pullen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DestroyCard, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DestroyCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DestroyCard, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DestroyCard, prandomin_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DestroyCard, randominlen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DestroyCard, prandomout_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DestroyCard, prandomoutlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DestroyCard, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DestroyCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DestroyCard, prandomout_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DestroyCard, prandomoutlen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_MonopolizeEnable, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_MonopolizeEnable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_MonopolizeEnable, slotid_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_MonopolizeEnable, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_MonopolizeEnable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_MonopolizeDisable, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_MonopolizeDisable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_MonopolizeDisable, slotid_),
  0,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_MonopolizeDisable, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_MonopolizeDisable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetDevInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetDevInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetDevInfo, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetDevInfo, username_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetDevInfo, ipparam_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetDevInfo, pdevinfo_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_GetDevInfo, puldevinfolen_),
  3,
  0,
  2,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetDevInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetDevInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetDevInfo, pdevinfo_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_GetDevInfo, puldevinfolen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DevSign, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DevSign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DevSign, slotid_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DevSign, pdata_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DevSign, uldatalen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DevSign, psignature_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_DevSign, pulsignaturelen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DevSign, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DevSign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DevSign, psignature_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_DevSign, pulsignaturelen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey, pdestroykeympk_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey, ulmpklen_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey, pbmpkiv_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey, ulmpkivlen_),
  2,
  0,
  3,
  1,
  4,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Set_DestroyKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Set_DestroyKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_ExchangePubKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_ExchangePubKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_ExchangePubKey, hsession_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_ExchangePubKey, pexchangepubkeyvalue_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_C_Extend_Get_ExchangePubKey, pulkeylen_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_ExchangePubKey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_ExchangePubKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_ExchangePubKey, pexchangepubkeyvalue_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_C_Extend_Get_ExchangePubKey, pulkeylen_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_softCreateCipherCard, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_softCreateCipherCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_softCreateCipherCard, token_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_softCreateCipherCard, username_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_softCreateCipherCard, licsesrveraddr_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_softCreateCipherCard, csppaddr_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_softCreateCipherCard, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_softCreateCipherCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_DestroyCipherCard, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Req_DestroyCipherCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_DestroyCipherCard, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::com::weston::pkcs11::Rsp_DestroyCipherCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::com::weston::pkcs11::PRO_Version)},
  { 9, 17, sizeof(::com::weston::pkcs11::PRO_Attribute)},
  { 20, 28, sizeof(::com::weston::pkcs11::PRO_Mechanism)},
  { 31, 41, sizeof(::com::weston::pkcs11::PRO_CK_INFO)},
  { 46, 56, sizeof(::com::weston::pkcs11::PRO_CK_SLOT_INFO)},
  { 61, 84, sizeof(::com::weston::pkcs11::PRO_TokenInfo)},
  { 102, 110, sizeof(::com::weston::pkcs11::PRO_MechanismInfo)},
  { 113, 122, sizeof(::com::weston::pkcs11::PRO_SessionInfo)},
  { 126, 134, sizeof(::com::weston::pkcs11::PRO_ipparam)},
  { 137, 142, sizeof(::com::weston::pkcs11::Req_C_Initialize)},
  { 142, 147, sizeof(::com::weston::pkcs11::Rsp_C_Initialize)},
  { 147, 152, sizeof(::com::weston::pkcs11::Req_C_Finalize)},
  { 152, 157, sizeof(::com::weston::pkcs11::Rsp_C_Finalize)},
  { 157, 163, sizeof(::com::weston::pkcs11::Req_C_GetInfo)},
  { 164, 170, sizeof(::com::weston::pkcs11::Rsp_C_GetInfo)},
  { 171, 176, sizeof(::com::weston::pkcs11::Req_C_GetFunctionList)},
  { 176, 181, sizeof(::com::weston::pkcs11::Rsp_C_GetFunctionList)},
  { 181, 189, sizeof(::com::weston::pkcs11::Req_C_GetSlotList)},
  { 192, 199, sizeof(::com::weston::pkcs11::Rsp_C_GetSlotList)},
  { 201, 208, sizeof(::com::weston::pkcs11::Req_C_GetSlotInfo)},
  { 210, 216, sizeof(::com::weston::pkcs11::Rsp_C_GetSlotInfo)},
  { 217, 224, sizeof(::com::weston::pkcs11::Req_C_GetTokenInfo)},
  { 226, 232, sizeof(::com::weston::pkcs11::Rsp_C_GetTokenInfo)},
  { 233, 241, sizeof(::com::weston::pkcs11::Req_C_GetMechanismList)},
  { 244, 251, sizeof(::com::weston::pkcs11::Rsp_C_GetMechanismList)},
  { 253, 261, sizeof(::com::weston::pkcs11::Req_C_GetMechanismInfo)},
  { 264, 270, sizeof(::com::weston::pkcs11::Rsp_C_GetMechanismInfo)},
  { 271, 280, sizeof(::com::weston::pkcs11::Req_C_InitToken)},
  { 284, 289, sizeof(::com::weston::pkcs11::Rsp_C_InitToken)},
  { 289, 297, sizeof(::com::weston::pkcs11::Req_C_InitPIN)},
  { 300, 305, sizeof(::com::weston::pkcs11::Rsp_C_InitPIN)},
  { 305, 315, sizeof(::com::weston::pkcs11::Req_C_SetPIN)},
  { 320, 325, sizeof(::com::weston::pkcs11::Rsp_C_SetPIN)},
  { 325, 333, sizeof(::com::weston::pkcs11::Req_C_OpenSession)},
  { 336, 342, sizeof(::com::weston::pkcs11::Rsp_C_OpenSession)},
  { 343, 349, sizeof(::com::weston::pkcs11::Req_C_CloseSession)},
  { 350, 355, sizeof(::com::weston::pkcs11::Rsp_C_CloseSession)},
  { 355, 361, sizeof(::com::weston::pkcs11::Req_C_CloseAllSessions)},
  { 362, 367, sizeof(::com::weston::pkcs11::Rsp_C_CloseAllSessions)},
  { 367, 374, sizeof(::com::weston::pkcs11::Req_C_GetSessionInfo)},
  { 376, 382, sizeof(::com::weston::pkcs11::Rsp_C_GetSessionInfo)},
  { 383, 391, sizeof(::com::weston::pkcs11::Req_C_GetOperationState)},
  { 394, 401, sizeof(::com::weston::pkcs11::Rsp_C_GetOperationState)},
  { 403, 413, sizeof(::com::weston::pkcs11::Req_C_SetOperationState)},
  { 418, 423, sizeof(::com::weston::pkcs11::Rsp_C_SetOperationState)},
  { 423, 432, sizeof(::com::weston::pkcs11::Req_C_Login)},
  { 436, 441, sizeof(::com::weston::pkcs11::Rsp_C_Login)},
  { 441, 447, sizeof(::com::weston::pkcs11::Req_C_Logout)},
  { 448, 453, sizeof(::com::weston::pkcs11::Rsp_C_Logout)},
  { 453, 462, sizeof(::com::weston::pkcs11::Req_C_CreateObject)},
  { 466, 472, sizeof(::com::weston::pkcs11::Rsp_C_CreateObject)},
  { 473, 483, sizeof(::com::weston::pkcs11::Req_C_CopyObject)},
  { 488, 494, sizeof(::com::weston::pkcs11::Rsp_C_CopyObject)},
  { 495, 502, sizeof(::com::weston::pkcs11::Req_C_DestroyObject)},
  { 504, 509, sizeof(::com::weston::pkcs11::Rsp_C_DestroyObject)},
  { 509, 517, sizeof(::com::weston::pkcs11::Req_C_GetObjectSize)},
  { 520, 526, sizeof(::com::weston::pkcs11::Rsp_C_GetObjectSize)},
  { 527, 536, sizeof(::com::weston::pkcs11::Req_C_GetAttributeValue)},
  { 540, 546, sizeof(::com::weston::pkcs11::Rsp_C_GetAttributeValue)},
  { 547, 556, sizeof(::com::weston::pkcs11::Req_C_SetAttributeValue)},
  { 560, 565, sizeof(::com::weston::pkcs11::Rsp_C_SetAttributeValue)},
  { 565, 573, sizeof(::com::weston::pkcs11::Req_C_FindObjectsInit)},
  { 576, 581, sizeof(::com::weston::pkcs11::Rsp_C_FindObjectsInit)},
  { 581, 590, sizeof(::com::weston::pkcs11::Req_C_FindObjects)},
  { 594, 601, sizeof(::com::weston::pkcs11::Rsp_C_FindObjects)},
  { 603, 609, sizeof(::com::weston::pkcs11::Req_C_FindObjectsFinal)},
  { 610, 615, sizeof(::com::weston::pkcs11::Rsp_C_FindObjectsFinal)},
  { 615, 623, sizeof(::com::weston::pkcs11::Req_C_EncryptInit)},
  { 626, 631, sizeof(::com::weston::pkcs11::Rsp_C_EncryptInit)},
  { 631, 641, sizeof(::com::weston::pkcs11::Req_C_Encrypt)},
  { 646, 653, sizeof(::com::weston::pkcs11::Rsp_C_Encrypt)},
  { 655, 665, sizeof(::com::weston::pkcs11::Req_C_EncryptUpdate)},
  { 670, 677, sizeof(::com::weston::pkcs11::Rsp_C_EncryptUpdate)},
  { 679, 687, sizeof(::com::weston::pkcs11::Req_C_EncryptFinal)},
  { 690, 697, sizeof(::com::weston::pkcs11::Rsp_C_EncryptFinal)},
  { 699, 707, sizeof(::com::weston::pkcs11::Req_C_DecryptInit)},
  { 710, 715, sizeof(::com::weston::pkcs11::Rsp_C_DecryptInit)},
  { 715, 725, sizeof(::com::weston::pkcs11::Req_C_Decrypt)},
  { 730, 737, sizeof(::com::weston::pkcs11::Rsp_C_Decrypt)},
  { 739, 749, sizeof(::com::weston::pkcs11::Req_C_DecryptUpdate)},
  { 754, 761, sizeof(::com::weston::pkcs11::Rsp_C_DecryptUpdate)},
  { 763, 771, sizeof(::com::weston::pkcs11::Req_C_DecryptFinal)},
  { 774, 781, sizeof(::com::weston::pkcs11::Rsp_C_DecryptFinal)},
  { 783, 790, sizeof(::com::weston::pkcs11::Req_C_DigestInit)},
  { 792, 797, sizeof(::com::weston::pkcs11::Rsp_C_DigestInit)},
  { 797, 807, sizeof(::com::weston::pkcs11::Req_C_Digest)},
  { 812, 819, sizeof(::com::weston::pkcs11::Rsp_C_Digest)},
  { 821, 829, sizeof(::com::weston::pkcs11::Req_C_DigestUpdate)},
  { 832, 837, sizeof(::com::weston::pkcs11::Rsp_C_DigestUpdate)},
  { 837, 844, sizeof(::com::weston::pkcs11::Req_C_DigestKey)},
  { 846, 851, sizeof(::com::weston::pkcs11::Rsp_C_DigestKey)},
  { 851, 859, sizeof(::com::weston::pkcs11::Req_C_DigestFinal)},
  { 862, 869, sizeof(::com::weston::pkcs11::Rsp_C_DigestFinal)},
  { 871, 879, sizeof(::com::weston::pkcs11::Req_C_SignInit)},
  { 882, 887, sizeof(::com::weston::pkcs11::Rsp_C_SignInit)},
  { 887, 897, sizeof(::com::weston::pkcs11::Req_C_Sign)},
  { 902, 909, sizeof(::com::weston::pkcs11::Rsp_C_Sign)},
  { 911, 919, sizeof(::com::weston::pkcs11::Req_C_SignUpdate)},
  { 922, 927, sizeof(::com::weston::pkcs11::Rsp_C_SignUpdate)},
  { 927, 935, sizeof(::com::weston::pkcs11::Req_C_SignFinal)},
  { 938, 945, sizeof(::com::weston::pkcs11::Rsp_C_SignFinal)},
  { 947, 955, sizeof(::com::weston::pkcs11::Req_C_SignRecoverInit)},
  { 958, 963, sizeof(::com::weston::pkcs11::Rsp_C_SignRecoverInit)},
  { 963, 973, sizeof(::com::weston::pkcs11::Req_C_SignRecover)},
  { 978, 985, sizeof(::com::weston::pkcs11::Rsp_C_SignRecover)},
  { 987, 995, sizeof(::com::weston::pkcs11::Req_C_VerifyInit)},
  { 998, 1003, sizeof(::com::weston::pkcs11::Rsp_C_VerifyInit)},
  { 1003, 1013, sizeof(::com::weston::pkcs11::Req_C_Verify)},
  { 1018, 1023, sizeof(::com::weston::pkcs11::Rsp_C_Verify)},
  { 1023, 1031, sizeof(::com::weston::pkcs11::Req_C_VerifyUpdate)},
  { 1034, 1039, sizeof(::com::weston::pkcs11::Rsp_C_VerifyUpdate)},
  { 1039, 1047, sizeof(::com::weston::pkcs11::Req_C_VerifyFinal)},
  { 1050, 1055, sizeof(::com::weston::pkcs11::Rsp_C_VerifyFinal)},
  { 1055, 1063, sizeof(::com::weston::pkcs11::Req_C_VerifyRecoverInit)},
  { 1066, 1071, sizeof(::com::weston::pkcs11::Rsp_C_VerifyRecoverInit)},
  { 1071, 1081, sizeof(::com::weston::pkcs11::Req_C_VerifyRecover)},
  { 1086, 1093, sizeof(::com::weston::pkcs11::Rsp_C_VerifyRecover)},
  { 1095, 1105, sizeof(::com::weston::pkcs11::Req_C_DigestEncryptUpdate)},
  { 1110, 1117, sizeof(::com::weston::pkcs11::Rsp_C_DigestEncryptUpdate)},
  { 1119, 1129, sizeof(::com::weston::pkcs11::Req_C_DecryptDigestUpdate)},
  { 1134, 1141, sizeof(::com::weston::pkcs11::Rsp_C_DecryptDigestUpdate)},
  { 1143, 1153, sizeof(::com::weston::pkcs11::Req_C_SignEncryptUpdate)},
  { 1158, 1165, sizeof(::com::weston::pkcs11::Rsp_C_SignEncryptUpdate)},
  { 1167, 1177, sizeof(::com::weston::pkcs11::Req_C_DecryptVerifyUpdate)},
  { 1182, 1189, sizeof(::com::weston::pkcs11::Rsp_C_DecryptVerifyUpdate)},
  { 1191, 1201, sizeof(::com::weston::pkcs11::Req_C_GenerateKey)},
  { 1206, 1212, sizeof(::com::weston::pkcs11::Rsp_C_GenerateKey)},
  { 1213, 1226, sizeof(::com::weston::pkcs11::Req_C_GenerateKeyPair)},
  { 1234, 1241, sizeof(::com::weston::pkcs11::Rsp_C_GenerateKeyPair)},
  { 1243, 1254, sizeof(::com::weston::pkcs11::Req_C_WrapKey)},
  { 1260, 1267, sizeof(::com::weston::pkcs11::Rsp_C_WrapKey)},
  { 1269, 1282, sizeof(::com::weston::pkcs11::Req_C_UnwrapKey)},
  { 1290, 1296, sizeof(::com::weston::pkcs11::Rsp_C_UnwrapKey)},
  { 1297, 1308, sizeof(::com::weston::pkcs11::Req_C_DeriveKey)},
  { 1314, 1320, sizeof(::com::weston::pkcs11::Rsp_C_DeriveKey)},
  { 1321, 1329, sizeof(::com::weston::pkcs11::Req_C_SeedRandom)},
  { 1332, 1337, sizeof(::com::weston::pkcs11::Rsp_C_SeedRandom)},
  { 1337, 1345, sizeof(::com::weston::pkcs11::Req_C_GenerateRandom)},
  { 1348, 1354, sizeof(::com::weston::pkcs11::Rsp_C_GenerateRandom)},
  { 1355, 1361, sizeof(::com::weston::pkcs11::Req_C_GetFunctionStatus)},
  { 1362, 1367, sizeof(::com::weston::pkcs11::Rsp_C_GetFunctionStatus)},
  { 1367, 1373, sizeof(::com::weston::pkcs11::Req_C_CancelFunction)},
  { 1374, 1379, sizeof(::com::weston::pkcs11::Rsp_C_CancelFunction)},
  { 1379, 1387, sizeof(::com::weston::pkcs11::Req_C_WaitForSlotEvent)},
  { 1390, 1397, sizeof(::com::weston::pkcs11::Rsp_C_WaitForSlotEvent)},
  { 1399, 1406, sizeof(::com::weston::pkcs11::Req_C_Extend_GetPinRemainCount)},
  { 1408, 1414, sizeof(::com::weston::pkcs11::Rsp_C_Extend_GetPinRemainCount)},
  { 1415, 1422, sizeof(::com::weston::pkcs11::Req_C_Extend_GetStatus)},
  { 1424, 1430, sizeof(::com::weston::pkcs11::Rsp_C_Extend_GetStatus)},
  { 1431, 1438, sizeof(::com::weston::pkcs11::Rsp_Status_Callback_Func)},
  { 1440, 1445, sizeof(::com::weston::pkcs11::Req_C_Extend_Register_Callback)},
  { 1445, 1450, sizeof(::com::weston::pkcs11::Rsp_C_Extend_Register_Callback)},
  { 1450, 1455, sizeof(::com::weston::pkcs11::Req_C_Extend_Unregister_Callback)},
  { 1455, 1460, sizeof(::com::weston::pkcs11::Rsp_C_Extend_Unregister_Callback)},
  { 1460, 1469, sizeof(::com::weston::pkcs11::Req_C_Extend_GetExchangeSessionKey)},
  { 1473, 1480, sizeof(::com::weston::pkcs11::Rsp_C_Extend_GetExchangeSessionKey)},
  { 1482, 1489, sizeof(::com::weston::pkcs11::Req_C_Extend_Destroy)},
  { 1491, 1496, sizeof(::com::weston::pkcs11::Rsp_C_Extend_Destroy)},
  { 1496, 1506, sizeof(::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP)},
  { 1511, 1516, sizeof(::com::weston::pkcs11::Rsp_C_Extend_Reset_Pin_With_OTP)},
  { 1516, 1526, sizeof(::com::weston::pkcs11::Req_C_Extend_Reset_OTP)},
  { 1531, 1536, sizeof(::com::weston::pkcs11::Rsp_C_Extend_Reset_OTP)},
  { 1536, 1543, sizeof(::com::weston::pkcs11::Req_C_Extend_Get_OTP_Unlock_Count)},
  { 1545, 1551, sizeof(::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Unlock_Count)},
  { 1552, 1559, sizeof(::com::weston::pkcs11::Req_C_Extend_Get_OTP_Remain_Count)},
  { 1561, 1567, sizeof(::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Remain_Count)},
  { 1568, 1582, sizeof(::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey)},
  { 1591, 1599, sizeof(::com::weston::pkcs11::Rsp_C_Extend_DeriveSessionKey)},
  { 1602, 1611, sizeof(::com::weston::pkcs11::Req_C_Extend_EncryptInit)},
  { 1615, 1620, sizeof(::com::weston::pkcs11::Rsp_C_Extend_EncryptInit)},
  { 1620, 1629, sizeof(::com::weston::pkcs11::Req_C_Extend_DecryptInit)},
  { 1633, 1638, sizeof(::com::weston::pkcs11::Rsp_C_Extend_DecryptInit)},
  { 1638, 1650, sizeof(::com::weston::pkcs11::Req_C_Extend_EncryptUpdate)},
  { 1657, 1664, sizeof(::com::weston::pkcs11::Rsp_C_Extend_EncryptUpdate)},
  { 1666, 1678, sizeof(::com::weston::pkcs11::Req_C_Extend_DecryptUpdate)},
  { 1685, 1692, sizeof(::com::weston::pkcs11::Rsp_C_Extend_DecryptUpdate)},
  { 1694, 1702, sizeof(::com::weston::pkcs11::Req_C_Extend_EncryptFinalize)},
  { 1705, 1712, sizeof(::com::weston::pkcs11::Rsp_C_Extend_EncryptFinalize)},
  { 1714, 1722, sizeof(::com::weston::pkcs11::Req_C_Extend_DecryptFinalize)},
  { 1725, 1732, sizeof(::com::weston::pkcs11::Rsp_C_Extend_DecryptFinalize)},
  { 1734, 1744, sizeof(::com::weston::pkcs11::Req_C_Extend_PointMultiply)},
  { 1749, 1756, sizeof(::com::weston::pkcs11::Rsp_C_Extend_PointMultiply)},
  { 1758, 1768, sizeof(::com::weston::pkcs11::Req_C_Extend_Reset_TT)},
  { 1773, 1778, sizeof(::com::weston::pkcs11::Rsp_C_Extend_Reset_TT)},
  { 1778, 1788, sizeof(::com::weston::pkcs11::Req_C_Extend_Reset_BK)},
  { 1793, 1798, sizeof(::com::weston::pkcs11::Rsp_C_Extend_Reset_BK)},
  { 1798, 1807, sizeof(::com::weston::pkcs11::Req_C_Extend_Get_Special_Object_Version)},
  { 1811, 1818, sizeof(::com::weston::pkcs11::Rsp_C_Extend_Get_Special_Object_Version)},
  { 1820, 1830, sizeof(::com::weston::pkcs11::Req_C_Extend_DestroyCard)},
  { 1835, 1842, sizeof(::com::weston::pkcs11::Rsp_C_Extend_DestroyCard)},
  { 1844, 1850, sizeof(::com::weston::pkcs11::Req_C_Extend_MonopolizeEnable)},
  { 1851, 1856, sizeof(::com::weston::pkcs11::Rsp_C_Extend_MonopolizeEnable)},
  { 1856, 1862, sizeof(::com::weston::pkcs11::Req_C_Extend_MonopolizeDisable)},
  { 1863, 1868, sizeof(::com::weston::pkcs11::Rsp_C_Extend_MonopolizeDisable)},
  { 1868, 1878, sizeof(::com::weston::pkcs11::Req_C_Extend_GetDevInfo)},
  { 1883, 1890, sizeof(::com::weston::pkcs11::Rsp_C_Extend_GetDevInfo)},
  { 1892, 1902, sizeof(::com::weston::pkcs11::Req_C_Extend_DevSign)},
  { 1907, 1914, sizeof(::com::weston::pkcs11::Rsp_C_Extend_DevSign)},
  { 1916, 1926, sizeof(::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey)},
  { 1931, 1936, sizeof(::com::weston::pkcs11::Rsp_C_Extend_Set_DestroyKey)},
  { 1936, 1944, sizeof(::com::weston::pkcs11::Req_C_Extend_Get_ExchangePubKey)},
  { 1947, 1954, sizeof(::com::weston::pkcs11::Rsp_C_Extend_Get_ExchangePubKey)},
  { 1956, 1965, sizeof(::com::weston::pkcs11::Req_softCreateCipherCard)},
  { 1969, 1974, sizeof(::com::weston::pkcs11::Rsp_softCreateCipherCard)},
  { 1974, 1979, sizeof(::com::weston::pkcs11::Req_DestroyCipherCard)},
  { 1979, 1984, sizeof(::com::weston::pkcs11::Rsp_DestroyCipherCard)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_PRO_Version_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_PRO_Attribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_PRO_Mechanism_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_PRO_CK_INFO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_PRO_CK_SLOT_INFO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_PRO_TokenInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_PRO_MechanismInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_PRO_SessionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_PRO_ipparam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Initialize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Initialize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Finalize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Finalize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GetFunctionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GetFunctionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GetSlotList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GetSlotList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GetSlotInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GetSlotInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GetTokenInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GetTokenInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GetMechanismList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GetMechanismList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GetMechanismInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GetMechanismInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_InitToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_InitToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_InitPIN_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_InitPIN_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_SetPIN_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_SetPIN_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_OpenSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_OpenSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_CloseSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_CloseSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_CloseAllSessions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_CloseAllSessions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GetSessionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GetSessionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GetOperationState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GetOperationState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_SetOperationState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_SetOperationState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Logout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Logout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_CreateObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_CreateObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_CopyObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_CopyObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_DestroyObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_DestroyObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GetObjectSize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GetObjectSize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GetAttributeValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GetAttributeValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_SetAttributeValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_SetAttributeValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_FindObjectsInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_FindObjectsInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_FindObjects_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_FindObjects_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_FindObjectsFinal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_FindObjectsFinal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_EncryptInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_EncryptInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Encrypt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Encrypt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_EncryptUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_EncryptUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_EncryptFinal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_EncryptFinal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_DecryptInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_DecryptInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Decrypt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Decrypt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_DecryptUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_DecryptUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_DecryptFinal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_DecryptFinal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_DigestInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_DigestInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Digest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Digest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_DigestUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_DigestUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_DigestKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_DigestKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_DigestFinal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_DigestFinal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_SignInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_SignInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Sign_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Sign_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_SignUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_SignUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_SignFinal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_SignFinal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_SignRecoverInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_SignRecoverInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_SignRecover_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_SignRecover_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_VerifyInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_VerifyInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Verify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Verify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_VerifyUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_VerifyUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_VerifyFinal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_VerifyFinal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_VerifyRecoverInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_VerifyRecoverInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_VerifyRecover_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_VerifyRecover_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_DigestEncryptUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_DigestEncryptUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_DecryptDigestUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_DecryptDigestUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_SignEncryptUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_SignEncryptUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_DecryptVerifyUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_DecryptVerifyUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GenerateKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GenerateKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GenerateKeyPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GenerateKeyPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_WrapKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_WrapKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_UnwrapKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_UnwrapKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_DeriveKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_DeriveKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_SeedRandom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_SeedRandom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GenerateRandom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GenerateRandom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_GetFunctionStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_GetFunctionStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_CancelFunction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_CancelFunction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_WaitForSlotEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_WaitForSlotEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_GetPinRemainCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_GetPinRemainCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_GetStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_GetStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_Status_Callback_Func_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_Register_Callback_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_Register_Callback_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_Unregister_Callback_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_Unregister_Callback_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_GetExchangeSessionKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_GetExchangeSessionKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_Destroy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_Destroy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_Reset_Pin_With_OTP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_Reset_Pin_With_OTP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_Reset_OTP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_Reset_OTP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_Get_OTP_Unlock_Count_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_Get_OTP_Unlock_Count_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_Get_OTP_Remain_Count_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_Get_OTP_Remain_Count_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_DeriveSessionKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_DeriveSessionKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_EncryptInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_EncryptInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_DecryptInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_DecryptInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_EncryptUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_EncryptUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_DecryptUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_DecryptUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_EncryptFinalize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_EncryptFinalize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_DecryptFinalize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_DecryptFinalize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_PointMultiply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_PointMultiply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_Reset_TT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_Reset_TT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_Reset_BK_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_Reset_BK_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_Get_Special_Object_Version_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_Get_Special_Object_Version_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_DestroyCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_DestroyCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_MonopolizeEnable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_MonopolizeEnable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_MonopolizeDisable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_MonopolizeDisable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_GetDevInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_GetDevInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_DevSign_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_DevSign_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_Set_DestroyKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_Set_DestroyKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_C_Extend_Get_ExchangePubKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_C_Extend_Get_ExchangePubKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_softCreateCipherCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_softCreateCipherCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Req_DestroyCipherCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::weston::pkcs11::_Rsp_DestroyCipherCard_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_pkcs11_2eproto = {
  {}, AddDescriptors_pkcs11_2eproto, "pkcs11.proto", schemas,
  file_default_instances, TableStruct_pkcs11_2eproto::offsets,
  file_level_metadata_pkcs11_2eproto, 206, file_level_enum_descriptors_pkcs11_2eproto, file_level_service_descriptors_pkcs11_2eproto,
};

const char descriptor_table_protodef_pkcs11_2eproto[] =
  "\n\014pkcs11.proto\022\021com.weston.pkcs11\"+\n\013PRO"
  "_Version\022\r\n\005major\030\001 \002(\r\022\r\n\005minor\030\002 \002(\r\"@"
  "\n\rPRO_Attribute\022\014\n\004type\030\001 \002(\r\022\r\n\005value\030\002"
  " \001(\014\022\022\n\nulValueLen\030\003 \002(\r\"J\n\rPRO_Mechanis"
  "m\022\021\n\tmechanism\030\001 \002(\r\022\022\n\npParameter\030\002 \001(\014"
  "\022\022\n\nulValueLen\030\003 \002(\r\"\301\001\n\013PRO_CK_INFO\0227\n\017"
  "cryptokiVersion\030\001 \002(\0132\036.com.weston.pkcs1"
  "1.PRO_Version\022\026\n\016manufacturerID\030\002 \002(\014\022\r\n"
  "\005flags\030\003 \002(\r\022\032\n\022libraryDescription\030\004 \002(\014"
  "\0226\n\016libraryVersion\030\005 \002(\0132\036.com.weston.pk"
  "cs11.PRO_Version\"\304\001\n\020PRO_CK_SLOT_INFO\022\027\n"
  "\017slotDescription\030\001 \002(\014\022\026\n\016manufacturerID"
  "\030\002 \002(\014\022\r\n\005flags\030\003 \002(\r\0227\n\017hardwareVersion"
  "\030\004 \002(\0132\036.com.weston.pkcs11.PRO_Version\0227"
  "\n\017firmwareVersion\030\005 \002(\0132\036.com.weston.pkc"
  "s11.PRO_Version\"\364\003\n\rPRO_TokenInfo\022\014\n\004lab"
  "e\030\001 \002(\014\022\026\n\016manufacturerID\030\002 \002(\014\022\r\n\005model"
  "\030\003 \002(\014\022\024\n\014serialNumber\030\004 \002(\014\022\r\n\005flags\030\005 "
  "\002(\r\022\031\n\021ulMaxSessionCount\030\006 \002(\r\022\026\n\016ulSess"
  "ionCount\030\007 \002(\r\022\033\n\023ulMaxRwSessionCount\030\010 "
  "\002(\r\022\030\n\020ulRwSessionCount\030\t \002(\r\022\023\n\013ulMaxPi"
  "nLen\030\n \002(\r\022\023\n\013ulMinPinLen\030\013 \002(\r\022\033\n\023ulTot"
  "alPublicMemory\030\014 \002(\r\022\032\n\022ulFreePublicMemo"
  "ry\030\r \002(\r\022\034\n\024ulTotalPrivateMemory\030\016 \002(\r\022\033"
  "\n\023ulFreePrivateMemory\030\017 \002(\r\0227\n\017hardwareV"
  "ersion\030\020 \002(\0132\036.com.weston.pkcs11.PRO_Ver"
  "sion\0227\n\017firmwareVersion\030\021 \002(\0132\036.com.west"
  "on.pkcs11.PRO_Version\022\017\n\007utcTime\030\022 \002(\014\"N"
  "\n\021PRO_MechanismInfo\022\024\n\014ulMinKeySize\030\001 \002("
  "\r\022\024\n\014ulMaxKeySize\030\002 \002(\r\022\r\n\005flags\030\003 \002(\r\"V"
  "\n\017PRO_SessionInfo\022\016\n\006slotID\030\001 \002(\r\022\r\n\005sta"
  "te\030\002 \002(\r\022\r\n\005flags\030\003 \002(\r\022\025\n\rulDeviceError"
  "\030\004 \002(\r\"=\n\013PRO_ipparam\022\n\n\002ip\030\001 \002(\014\022\020\n\010oWa"
  "yPort\030\002 \002(\r\022\020\n\010tWayPort\030\003 \002(\r\"\022\n\020Req_C_I"
  "nitialize\"\022\n\020Rsp_C_Initialize\"\020\n\016Req_C_F"
  "inalize\"\020\n\016Rsp_C_Finalize\">\n\rReq_C_GetIn"
  "fo\022-\n\005pInfo\030\001 \001(\0132\036.com.weston.pkcs11.PR"
  "O_CK_INFO\">\n\rRsp_C_GetInfo\022-\n\005pInfo\030\001 \001("
  "\0132\036.com.weston.pkcs11.PRO_CK_INFO\"\027\n\025Req"
  "_C_GetFunctionList\"\027\n\025Rsp_C_GetFunctionL"
  "ist\"O\n\021Req_C_GetSlotList\022\025\n\rtokenPrespen"
  "t\030\001 \002(\r\022\021\n\tpSlotList\030\002 \003(\r\022\020\n\010pulCount\030\003"
  " \001(\r\"8\n\021Rsp_C_GetSlotList\022\021\n\tpSlotList\030\001"
  " \003(\r\022\020\n\010pulCount\030\002 \001(\r\"W\n\021Req_C_GetSlotI"
  "nfo\022\016\n\006slotID\030\001 \002(\r\0222\n\005pInfo\030\002 \001(\0132#.com"
  ".weston.pkcs11.PRO_CK_SLOT_INFO\"G\n\021Rsp_C"
  "_GetSlotInfo\0222\n\005pInfo\030\001 \001(\0132#.com.weston"
  ".pkcs11.PRO_CK_SLOT_INFO\"U\n\022Req_C_GetTok"
  "enInfo\022\016\n\006slotID\030\001 \002(\r\022/\n\005pInfo\030\002 \001(\0132 ."
  "com.weston.pkcs11.PRO_TokenInfo\"E\n\022Rsp_C"
  "_GetTokenInfo\022/\n\005pInfo\030\001 \001(\0132 .com.westo"
  "n.pkcs11.PRO_TokenInfo\"R\n\026Req_C_GetMecha"
  "nismList\022\016\n\006slotID\030\001 \002(\r\022\026\n\016pMechanismLi"
  "st\030\002 \003(\r\022\020\n\010pulCount\030\003 \001(\r\"B\n\026Rsp_C_GetM"
  "echanismList\022\026\n\016pMechanismList\030\001 \003(\r\022\020\n\010"
  "pulCount\030\002 \001(\r\"k\n\026Req_C_GetMechanismInfo"
  "\022\016\n\006slotID\030\001 \002(\r\022\014\n\004type\030\002 \002(\r\0223\n\005pInfo\030"
  "\003 \001(\0132$.com.weston.pkcs11.PRO_MechanismI"
  "nfo\"M\n\026Rsp_C_GetMechanismInfo\0223\n\005pInfo\030\001"
  " \001(\0132$.com.weston.pkcs11.PRO_MechanismIn"
  "fo\"Q\n\017Req_C_InitToken\022\016\n\006slotID\030\001 \002(\r\022\014\n"
  "\004pPin\030\002 \001(\014\022\020\n\010ulPinLen\030\003 \002(\r\022\016\n\006pLabel\030"
  "\004 \001(\014\"\021\n\017Rsp_C_InitToken\"A\n\rReq_C_InitPI"
  "N\022\020\n\010hSession\030\001 \002(\r\022\014\n\004pPin\030\002 \001(\014\022\020\n\010ulP"
  "inLen\030\003 \002(\r\"\017\n\rRsp_C_InitPIN\"f\n\014Req_C_Se"
  "tPIN\022\020\n\010hSession\030\001 \002(\r\022\017\n\007pOldPin\030\002 \001(\014\022"
  "\020\n\010ulOldLen\030\003 \002(\r\022\017\n\007pNewPin\030\004 \001(\014\022\020\n\010ul"
  "NewLen\030\005 \002(\r\"\016\n\014Rsp_C_SetPIN\"E\n\021Req_C_Op"
  "enSession\022\016\n\006slotID\030\001 \002(\r\022\r\n\005flags\030\002 \002(\r"
  "\022\021\n\tphSession\030\003 \001(\r\"&\n\021Rsp_C_OpenSession"
  "\022\021\n\tphSession\030\001 \001(\r\"&\n\022Req_C_CloseSessio"
  "n\022\020\n\010hSession\030\001 \002(\r\"\024\n\022Rsp_C_CloseSessio"
  "n\"(\n\026Req_C_CloseAllSessions\022\016\n\006slotID\030\001 "
  "\002(\r\"\030\n\026Rsp_C_CloseAllSessions\"[\n\024Req_C_G"
  "etSessionInfo\022\020\n\010hSession\030\001 \002(\r\0221\n\005pInfo"
  "\030\002 \001(\0132\".com.weston.pkcs11.PRO_SessionIn"
  "fo\"I\n\024Rsp_C_GetSessionInfo\0221\n\005pInfo\030\001 \001("
  "\0132\".com.weston.pkcs11.PRO_SessionInfo\"b\n"
  "\027Req_C_GetOperationState\022\020\n\010hSession\030\001 \002"
  "(\r\022\027\n\017pOperationState\030\002 \001(\014\022\034\n\024pulOperat"
  "ionStateLen\030\003 \001(\r\"P\n\027Rsp_C_GetOperationS"
  "tate\022\027\n\017pOperationState\030\001 \001(\014\022\034\n\024pulOper"
  "ationStateLen\030\002 \001(\r\"\225\001\n\027Req_C_SetOperati"
  "onState\022\020\n\010hSession\030\001 \002(\r\022\027\n\017pOperationS"
  "tate\030\002 \001(\014\022\033\n\023ulOperationStateLen\030\003 \002(\r\022"
  "\026\n\016hEncryptionKey\030\004 \002(\r\022\032\n\022hAuthenticati"
  "onKey\030\005 \002(\r\"\031\n\027Rsp_C_SetOperationState\"Q"
  "\n\013Req_C_Login\022\020\n\010hSession\030\001 \002(\r\022\020\n\010userT"
  "ype\030\002 \002(\r\022\014\n\004pPin\030\003 \001(\014\022\020\n\010ulPinLen\030\004 \002("
  "\r\"\r\n\013Rsp_C_Login\" \n\014Req_C_Logout\022\020\n\010hSes"
  "sion\030\001 \002(\r\"\016\n\014Rsp_C_Logout\"~\n\022Req_C_Crea"
  "teObject\022\020\n\010hSession\030\001 \002(\r\0223\n\tpTemplate\030"
  "\002 \003(\0132 .com.weston.pkcs11.PRO_Attribute\022"
  "\017\n\007ulCount\030\003 \002(\r\022\020\n\010phObject\030\004 \001(\r\"&\n\022Rs"
  "p_C_CreateObject\022\020\n\010phObject\030\001 \001(\r\"\220\001\n\020R"
  "eq_C_CopyObject\022\020\n\010hSession\030\001 \002(\r\022\017\n\007hOb"
  "ject\030\002 \002(\r\0223\n\tpTemplate\030\003 \003(\0132 .com.west"
  "on.pkcs11.PRO_Attribute\022\017\n\007ulCount\030\004 \002(\r"
  "\022\023\n\013phNewObject\030\005 \001(\r\"\'\n\020Rsp_C_CopyObjec"
  "t\022\023\n\013phNewObject\030\001 \001(\r\"8\n\023Req_C_DestroyO"
  "bject\022\020\n\010hSession\030\001 \002(\r\022\017\n\007hObject\030\002 \002(\r"
  "\"\025\n\023Rsp_C_DestroyObject\"I\n\023Req_C_GetObje"
  "ctSize\022\020\n\010hSession\030\001 \002(\r\022\017\n\007hObject\030\002 \002("
  "\r\022\017\n\007pulSize\030\003 \001(\r\"&\n\023Rsp_C_GetObjectSiz"
  "e\022\017\n\007pulSize\030\001 \001(\r\"\202\001\n\027Req_C_GetAttribut"
  "eValue\022\020\n\010hSession\030\001 \002(\r\022\017\n\007hObject\030\002 \002("
  "\r\0223\n\tpTemplate\030\003 \003(\0132 .com.weston.pkcs11"
  ".PRO_Attribute\022\017\n\007ulCount\030\004 \002(\r\"N\n\027Rsp_C"
  "_GetAttributeValue\0223\n\tpTemplate\030\001 \003(\0132 ."
  "com.weston.pkcs11.PRO_Attribute\"\202\001\n\027Req_"
  "C_SetAttributeValue\022\020\n\010hSession\030\001 \002(\r\022\017\n"
  "\007hObject\030\002 \002(\r\0223\n\tpTemplate\030\003 \003(\0132 .com."
  "weston.pkcs11.PRO_Attribute\022\017\n\007ulCount\030\004"
  " \002(\r\"\031\n\027Rsp_C_SetAttributeValue\"o\n\025Req_C"
  "_FindObjectsInit\022\020\n\010hSession\030\001 \002(\r\0223\n\tpT"
  "emplate\030\002 \003(\0132 .com.weston.pkcs11.PRO_At"
  "tribute\022\017\n\007ulCount\030\003 \002(\r\"\027\n\025Rsp_C_FindOb"
  "jectsInit\"i\n\021Req_C_FindObjects\022\020\n\010hSessi"
  "on\030\001 \002(\r\022\020\n\010phObject\030\002 \003(\r\022\030\n\020ulMaxObjec"
  "tCount\030\003 \002(\r\022\026\n\016pulObjectCount\030\004 \001(\r\"=\n\021"
  "Rsp_C_FindObjects\022\020\n\010phObject\030\001 \003(\r\022\026\n\016p"
  "ulObjectCount\030\002 \001(\r\"*\n\026Req_C_FindObjects"
  "Final\022\020\n\010hSession\030\001 \002(\r\"\030\n\026Rsp_C_FindObj"
  "ectsFinal\"i\n\021Req_C_EncryptInit\022\020\n\010hSessi"
  "on\030\001 \002(\r\0224\n\npMechanism\030\002 \001(\0132 .com.westo"
  "n.pkcs11.PRO_Mechanism\022\014\n\004hKey\030\003 \002(\r\"\023\n\021"
  "Rsp_C_EncryptInit\"x\n\rReq_C_Encrypt\022\020\n\010hS"
  "ession\030\001 \002(\r\022\r\n\005pData\030\002 \001(\014\022\021\n\tulDataLen"
  "\030\003 \002(\r\022\026\n\016pEncryptedData\030\004 \001(\014\022\033\n\023pulEnc"
  "ryptedDataLen\030\005 \001(\r\"D\n\rRsp_C_Encrypt\022\026\n\016"
  "pEncryptedData\030\001 \001(\014\022\033\n\023pulEncryptedData"
  "Len\030\002 \001(\r\"~\n\023Req_C_EncryptUpdate\022\020\n\010hSes"
  "sion\030\001 \002(\r\022\r\n\005pPart\030\002 \001(\014\022\021\n\tulPartLen\030\003"
  " \002(\r\022\026\n\016pEncryptedPart\030\004 \001(\014\022\033\n\023pulEncry"
  "ptedPartLen\030\005 \001(\r\"J\n\023Rsp_C_EncryptUpdate"
  "\022\026\n\016pEncryptedPart\030\001 \001(\014\022\033\n\023pulEncrypted"
  "PartLen\030\002 \001(\r\"c\n\022Req_C_EncryptFinal\022\020\n\010h"
  "Session\030\001 \002(\r\022\032\n\022pLastEncryptedPart\030\002 \001("
  "\014\022\037\n\027pulLastEncryptedPartLen\030\003 \001(\r\"Q\n\022Rs"
  "p_C_EncryptFinal\022\032\n\022pLastEncryptedPart\030\001"
  " \001(\014\022\037\n\027pulLastEncryptedPartLen\030\002 \001(\r\"i\n"
  "\021Req_C_DecryptInit\022\020\n\010hSession\030\001 \002(\r\0224\n\n"
  "pMechanism\030\002 \001(\0132 .com.weston.pkcs11.PRO"
  "_Mechanism\022\014\n\004hKey\030\003 \002(\r\"\023\n\021Rsp_C_Decryp"
  "tInit\"x\n\rReq_C_Decrypt\022\020\n\010hSession\030\001 \002(\r"
  "\022\026\n\016pEncryptedData\030\002 \001(\014\022\032\n\022ulEncryptedD"
  "ataLen\030\003 \002(\r\022\r\n\005pData\030\004 \001(\014\022\022\n\npulDataLe"
  "n\030\005 \001(\r\"2\n\rRsp_C_Decrypt\022\r\n\005pData\030\001 \001(\014\022"
  "\022\n\npulDataLen\030\002 \001(\r\"~\n\023Req_C_DecryptUpda"
  "te\022\020\n\010hSession\030\001 \002(\r\022\026\n\016pEncryptedPart\030\002"
  " \001(\014\022\032\n\022ulEncryptedPartLen\030\003 \002(\r\022\r\n\005pPar"
  "t\030\004 \001(\014\022\022\n\npulPartLen\030\005 \001(\r\"8\n\023Rsp_C_Dec"
  "ryptUpdate\022\r\n\005pPart\030\001 \001(\014\022\022\n\npulPartLen\030"
  "\002 \001(\r\"Q\n\022Req_C_DecryptFinal\022\020\n\010hSession\030"
  "\001 \002(\r\022\021\n\tpLastPart\030\002 \001(\014\022\026\n\016pulLastPartL"
  "en\030\003 \001(\r\"\?\n\022Rsp_C_DecryptFinal\022\021\n\tpLastP"
  "art\030\001 \001(\014\022\026\n\016pulLastPartLen\030\002 \001(\r\"Z\n\020Req"
  "_C_DigestInit\022\020\n\010hSession\030\001 \002(\r\0224\n\npMech"
  "anism\030\002 \001(\0132 .com.weston.pkcs11.PRO_Mech"
  "anism\"\022\n\020Rsp_C_DigestInit\"i\n\014Req_C_Diges"
  "t\022\020\n\010hSession\030\001 \002(\r\022\r\n\005pData\030\002 \001(\014\022\021\n\tul"
  "DataLen\030\003 \002(\r\022\017\n\007pDigest\030\004 \001(\014\022\024\n\014pulDig"
  "estLen\030\005 \001(\r\"5\n\014Rsp_C_Digest\022\017\n\007pDigest\030"
  "\001 \001(\014\022\024\n\014pulDigestLen\030\002 \001(\r\"H\n\022Req_C_Dig"
  "estUpdate\022\020\n\010hSession\030\001 \002(\r\022\r\n\005pPart\030\002 \001"
  "(\014\022\021\n\tulPartLen\030\003 \002(\r\"\024\n\022Rsp_C_DigestUpd"
  "ate\"1\n\017Req_C_DigestKey\022\020\n\010hSession\030\001 \002(\r"
  "\022\014\n\004hKey\030\002 \002(\r\"\021\n\017Rsp_C_DigestKey\"L\n\021Req"
  "_C_DigestFinal\022\020\n\010hSession\030\001 \002(\r\022\017\n\007pDig"
  "est\030\002 \001(\014\022\024\n\014pulDigestLen\030\003 \001(\r\":\n\021Rsp_C"
  "_DigestFinal\022\017\n\007pDigest\030\001 \001(\014\022\024\n\014pulDige"
  "stLen\030\002 \001(\r\"f\n\016Req_C_SignInit\022\020\n\010hSessio"
  "n\030\001 \002(\r\0224\n\npMechanism\030\002 \001(\0132 .com.weston"
  ".pkcs11.PRO_Mechanism\022\014\n\004hKey\030\003 \002(\r\"\020\n\016R"
  "sp_C_SignInit\"m\n\nReq_C_Sign\022\020\n\010hSession\030"
  "\001 \002(\r\022\r\n\005pData\030\002 \001(\014\022\021\n\tulDataLen\030\003 \002(\r\022"
  "\022\n\npSignature\030\004 \001(\014\022\027\n\017pulSignatureLen\030\005"
  " \001(\r\"9\n\nRsp_C_Sign\022\022\n\npSignature\030\001 \001(\014\022\027"
  "\n\017pulSignatureLen\030\002 \001(\r\"F\n\020Req_C_SignUpd"
  "ate\022\020\n\010hSession\030\001 \002(\r\022\r\n\005pPart\030\002 \001(\014\022\021\n\t"
  "ulPartLen\030\003 \002(\r\"\022\n\020Rsp_C_SignUpdate\"P\n\017R"
  "eq_C_SignFinal\022\020\n\010hSession\030\001 \002(\r\022\022\n\npSig"
  "nature\030\002 \001(\014\022\027\n\017pulSignatureLen\030\003 \001(\r\">\n"
  "\017Rsp_C_SignFinal\022\022\n\npSignature\030\001 \001(\014\022\027\n\017"
  "pulSignatureLen\030\002 \001(\r\"m\n\025Req_C_SignRecov"
  "erInit\022\020\n\010hSession\030\001 \002(\r\0224\n\npMechanism\030\002"
  " \001(\0132 .com.weston.pkcs11.PRO_Mechanism\022\014"
  "\n\004hKey\030\003 \002(\r\"\027\n\025Rsp_C_SignRecoverInit\"t\n"
  "\021Req_C_SignRecover\022\020\n\010hSession\030\001 \002(\r\022\r\n\005"
  "pData\030\002 \001(\014\022\021\n\tulDataLen\030\003 \002(\r\022\022\n\npSigna"
  "ture\030\004 \001(\014\022\027\n\017pulSignatureLen\030\005 \001(\r\"@\n\021R"
  "sp_C_SignRecover\022\022\n\npSignature\030\001 \001(\014\022\027\n\017"
  "pulSignatureLen\030\002 \001(\r\"h\n\020Req_C_VerifyIni"
  "t\022\020\n\010hSession\030\001 \002(\r\0224\n\npMechanism\030\002 \001(\0132"
  " .com.weston.pkcs11.PRO_Mechanism\022\014\n\004hKe"
  "y\030\003 \002(\r\"\022\n\020Rsp_C_VerifyInit\"n\n\014Req_C_Ver"
  "ify\022\020\n\010hSession\030\001 \002(\r\022\r\n\005pData\030\002 \001(\014\022\021\n\t"
  "ulDataLen\030\003 \002(\r\022\022\n\npSignature\030\004 \001(\014\022\026\n\016u"
  "lSignatureLen\030\005 \002(\r\"\016\n\014Rsp_C_Verify\"H\n\022R"
  "eq_C_VerifyUpdate\022\020\n\010hSession\030\001 \002(\r\022\r\n\005p"
  "Part\030\002 \001(\014\022\021\n\tulPartLen\030\003 \002(\r\"\024\n\022Rsp_C_V"
  "erifyUpdate\"Q\n\021Req_C_VerifyFinal\022\020\n\010hSes"
  "sion\030\001 \002(\r\022\022\n\npSignature\030\002 \001(\014\022\026\n\016ulSign"
  "atureLen\030\003 \002(\r\"\023\n\021Rsp_C_VerifyFinal\"o\n\027R"
  "eq_C_VerifyRecoverInit\022\020\n\010hSession\030\001 \002(\r"
  "\0224\n\npMechanism\030\002 \001(\0132 .com.weston.pkcs11"
  ".PRO_Mechanism\022\014\n\004hKey\030\003 \002(\r\"\031\n\027Rsp_C_Ve"
  "rifyRecoverInit\"v\n\023Req_C_VerifyRecover\022\020"
  "\n\010hSession\030\001 \002(\r\022\022\n\npSignature\030\002 \001(\014\022\026\n\016"
  "ulSignatureLen\030\003 \002(\r\022\r\n\005pData\030\004 \001(\014\022\022\n\np"
  "ulDataLen\030\005 \001(\r\"8\n\023Rsp_C_VerifyRecover\022\r"
  "\n\005pData\030\001 \001(\014\022\022\n\npulDataLen\030\002 \001(\r\"\204\001\n\031Re"
  "q_C_DigestEncryptUpdate\022\020\n\010hSession\030\001 \002("
  "\r\022\r\n\005pPart\030\002 \001(\014\022\021\n\tulPartLen\030\003 \002(\r\022\026\n\016p"
  "EncryptedPart\030\004 \001(\014\022\033\n\023pulEncryptedPartL"
  "en\030\005 \001(\r\"P\n\031Rsp_C_DigestEncryptUpdate\022\026\n"
  "\016pEncryptedPart\030\001 \001(\014\022\033\n\023pulEncryptedPar"
  "tLen\030\002 \001(\r\"\204\001\n\031Req_C_DecryptDigestUpdate"
  "\022\020\n\010hSession\030\001 \002(\r\022\026\n\016pEncryptedPart\030\002 \001"
  "(\014\022\032\n\022ulEncryptedPartLen\030\003 \002(\r\022\r\n\005pPart\030"
  "\004 \001(\014\022\022\n\npulPartLen\030\005 \001(\r\">\n\031Rsp_C_Decry"
  "ptDigestUpdate\022\r\n\005pPart\030\001 \001(\014\022\022\n\npulPart"
  "Len\030\002 \001(\r\"\202\001\n\027Req_C_SignEncryptUpdate\022\020\n"
  "\010hSession\030\001 \002(\r\022\r\n\005pPart\030\002 \001(\014\022\021\n\tulPart"
  "Len\030\003 \002(\r\022\026\n\016pEncryptedPart\030\004 \001(\014\022\033\n\023pul"
  "EncryptedPartLen\030\005 \001(\r\"N\n\027Rsp_C_SignEncr"
  "yptUpdate\022\026\n\016pEncryptedPart\030\001 \001(\014\022\033\n\023pul"
  "EncryptedPartLen\030\002 \001(\r\"\204\001\n\031Req_C_Decrypt"
  "VerifyUpdate\022\020\n\010hSession\030\001 \002(\r\022\026\n\016pEncry"
  "ptedPart\030\002 \001(\014\022\032\n\022ulEncryptedPartLen\030\003 \002"
  "(\r\022\r\n\005pPart\030\004 \001(\014\022\022\n\npulPartLen\030\005 \001(\r\">\n"
  "\031Rsp_C_DecryptVerifyUpdate\022\r\n\005pPart\030\001 \001("
  "\014\022\022\n\npulPartLen\030\002 \001(\r\"\260\001\n\021Req_C_Generate"
  "Key\022\020\n\010hSession\030\001 \002(\r\0224\n\npMechanism\030\002 \001("
  "\0132 .com.weston.pkcs11.PRO_Mechanism\0223\n\tp"
  "Template\030\003 \003(\0132 .com.weston.pkcs11.PRO_A"
  "ttribute\022\017\n\007ulCount\030\004 \002(\r\022\r\n\005phKey\030\005 \001(\r"
  "\"\"\n\021Rsp_C_GenerateKey\022\r\n\005phKey\030\001 \001(\r\"\316\002\n"
  "\025Req_C_GenerateKeyPair\022\020\n\010hSession\030\001 \002(\r"
  "\0224\n\npMechanism\030\002 \001(\0132 .com.weston.pkcs11"
  ".PRO_Mechanism\022<\n\022pPublicKeyTemplate\030\003 \003"
  "(\0132 .com.weston.pkcs11.PRO_Attribute\022!\n\031"
  "ulPublicKeyAttributeCount\030\004 \002(\r\022=\n\023pPriv"
  "ateKeyTemplate\030\005 \003(\0132 .com.weston.pkcs11"
  ".PRO_Attribute\022\"\n\032ulPrivateKeyAttributeC"
  "ount\030\006 \002(\r\022\023\n\013phPublicKey\030\007 \001(\r\022\024\n\014phPri"
  "vateKey\030\010 \001(\r\"B\n\025Rsp_C_GenerateKeyPair\022\023"
  "\n\013phPublicKey\030\001 \001(\r\022\024\n\014phPrivateKey\030\002 \001("
  "\r\"\252\001\n\rReq_C_WrapKey\022\020\n\010hSession\030\001 \002(\r\0224\n"
  "\npMechanism\030\002 \001(\0132 .com.weston.pkcs11.PR"
  "O_Mechanism\022\024\n\014hWrappingKey\030\003 \002(\r\022\014\n\004hKe"
  "y\030\004 \002(\r\022\023\n\013pWrappedKey\030\005 \001(\014\022\030\n\020pulWrapp"
  "edKeyLen\030\006 \001(\r\">\n\rRsp_C_WrapKey\022\023\n\013pWrap"
  "pedKey\030\001 \001(\014\022\030\n\020pulWrappedKeyLen\030\002 \001(\r\"\375"
  "\001\n\017Req_C_UnwrapKey\022\020\n\010hSession\030\001 \002(\r\0224\n\n"
  "pMechanism\030\002 \001(\0132 .com.weston.pkcs11.PRO"
  "_Mechanism\022\026\n\016hUnwrappingKey\030\003 \002(\r\022\023\n\013pW"
  "rappedKey\030\004 \001(\014\022\027\n\017ulWrappedKeyLen\030\005 \002(\r"
  "\0223\n\tpTemplate\030\006 \003(\0132 .com.weston.pkcs11."
  "PRO_Attribute\022\030\n\020ulAttributeCount\030\007 \002(\r\022"
  "\r\n\005phKey\030\010 \001(\r\" \n\017Rsp_C_UnwrapKey\022\r\n\005phK"
  "ey\030\001 \001(\r\"\311\001\n\017Req_C_DeriveKey\022\020\n\010hSession"
  "\030\001 \002(\r\0224\n\npMechanism\030\002 \001(\0132 .com.weston."
  "pkcs11.PRO_Mechanism\022\020\n\010hBaseKey\030\003 \002(\r\0223"
  "\n\tpTemplate\030\004 \003(\0132 .com.weston.pkcs11.PR"
  "O_Attribute\022\030\n\020ulAttributeCount\030\005 \002(\r\022\r\n"
  "\005phKey\030\006 \001(\r\" \n\017Rsp_C_DeriveKey\022\r\n\005phKey"
  "\030\001 \001(\r\"F\n\020Req_C_SeedRandom\022\020\n\010hSession\030\001"
  " \002(\r\022\r\n\005pSeed\030\002 \001(\014\022\021\n\tulSeedLen\030\003 \002(\r\"\022"
  "\n\020Rsp_C_SeedRandom\"Q\n\024Req_C_GenerateRand"
  "om\022\020\n\010hSession\030\001 \002(\r\022\022\n\nRandomData\030\002 \001(\014"
  "\022\023\n\013ulRandomLen\030\003 \002(\r\"*\n\024Rsp_C_GenerateR"
  "andom\022\022\n\nRandomData\030\001 \001(\014\"+\n\027Req_C_GetFu"
  "nctionStatus\022\020\n\010hSession\030\001 \002(\r\"\031\n\027Rsp_C_"
  "GetFunctionStatus\"(\n\024Req_C_CancelFunctio"
  "n\022\020\n\010hSession\030\001 \002(\r\"\026\n\024Rsp_C_CancelFunct"
  "ion\"H\n\026Req_C_WaitForSlotEvent\022\r\n\005flags\030\001"
  " \002(\r\022\r\n\005pSlot\030\002 \001(\r\022\020\n\010pRserved\030\003 \001(\014\"9\n"
  "\026Rsp_C_WaitForSlotEvent\022\r\n\005pSlot\030\001 \001(\r\022\020"
  "\n\010pRserved\030\002 \001(\014\"J\n\036Req_C_Extend_GetPinR"
  "emainCount\022\020\n\010hSession\030\001 \002(\r\022\026\n\016pUiRemai"
  "nCount\030\002 \001(\r\"8\n\036Rsp_C_Extend_GetPinRemai"
  "nCount\022\026\n\016pUiRemainCount\030\001 \001(\r\"9\n\026Req_C_"
  "Extend_GetStatus\022\016\n\006slotID\030\001 \002(\r\022\017\n\007pSta"
  "tus\030\002 \001(\r\")\n\026Rsp_C_Extend_GetStatus\022\017\n\007p"
  "Status\030\001 \001(\r\":\n\030Rsp_Status_Callback_Func"
  "\022\016\n\006slotID\030\001 \002(\r\022\016\n\006status\030\002 \002(\r\" \n\036Req_"
  "C_Extend_Register_Callback\" \n\036Rsp_C_Exte"
  "nd_Register_Callback\"\"\n Req_C_Extend_Unr"
  "egister_Callback\"\"\n Rsp_C_Extend_Unregis"
  "ter_Callback\"y\n\"Req_C_Extend_GetExchange"
  "SessionKey\022\020\n\010hSession\030\001 \002(\r\022\014\n\004hKey\030\002 \002"
  "(\r\022\026\n\016pEncryptedData\030\003 \001(\014\022\033\n\023pulEncrypt"
  "edDataLen\030\004 \001(\r\"Y\n\"Rsp_C_Extend_GetExcha"
  "ngeSessionKey\022\026\n\016pEncryptedData\030\002 \001(\014\022\033\n"
  "\023pulEncryptedDataLen\030\003 \001(\r\"=\n\024Req_C_Exte"
  "nd_Destroy\022\016\n\006slotID\030\001 \002(\r\022\025\n\rcontainerN"
  "ame\030\002 \001(\014\"\026\n\024Rsp_C_Extend_Destroy\"\211\001\n\037Re"
  "q_C_Extend_Reset_Pin_With_OTP\022\020\n\010hSessio"
  "n\030\001 \002(\r\022\020\n\010pbOTPPIN\030\002 \001(\014\022\023\n\013ulOTPPINLen"
  "\030\003 \002(\r\022\024\n\014pbNewUserPIN\030\004 \001(\014\022\027\n\017ulNewUse"
  "rPINLen\030\005 \002(\r\"!\n\037Rsp_C_Extend_Reset_Pin_"
  "With_OTP\"s\n\026Req_C_Extend_Reset_OTP\022\020\n\010hS"
  "ession\030\001 \002(\r\022\020\n\010pbOTPMpk\030\002 \001(\014\022\020\n\010ulMpkL"
  "en\030\003 \002(\r\022\017\n\007pbMpkIV\030\004 \001(\014\022\022\n\nulMpkIVLen\030"
  "\005 \002(\r\"\030\n\026Rsp_C_Extend_Reset_OTP\"G\n!Req_C"
  "_Extend_Get_OTP_Unlock_Count\022\020\n\010hSession"
  "\030\001 \002(\r\022\020\n\010pulCount\030\002 \001(\r\"5\n!Rsp_C_Extend"
  "_Get_OTP_Unlock_Count\022\020\n\010pulCount\030\001 \001(\r\""
  "G\n!Req_C_Extend_Get_OTP_Remain_Count\022\020\n\010"
  "hSession\030\001 \002(\r\022\020\n\010pulCount\030\002 \001(\r\"5\n!Rsp_"
  "C_Extend_Get_OTP_Remain_Count\022\020\n\010pulCoun"
  "t\030\001 \001(\r\"\231\002\n\035Req_C_Extend_DeriveSessionKe"
  "y\022\020\n\010hSession\030\001 \002(\r\0224\n\npMechanism\030\002 \001(\0132"
  " .com.weston.pkcs11.PRO_Mechanism\022\021\n\thLo"
  "calKey\030\003 \002(\r\022\022\n\nhRemoteKey\030\004 \002(\r\0223\n\tpTem"
  "plate\030\005 \003(\0132 .com.weston.pkcs11.PRO_Attr"
  "ibute\022\030\n\020ulAttributeCount\030\006 \002(\r\022\r\n\005phKey"
  "\030\007 \001(\r\022\023\n\013pExchangeIV\030\010 \001(\014\022\026\n\016pExchange"
  "IVLen\030\t \001(\r\"[\n\035Rsp_C_Extend_DeriveSessio"
  "nKey\022\r\n\005phKey\030\001 \001(\r\022\023\n\013pExchangeIV\030\002 \001(\014"
  "\022\026\n\016pExchangeIVLen\030\003 \001(\r\"\261\001\n\030Req_C_Exten"
  "d_EncryptInit\022\020\n\010hSession\030\001 \002(\r\0224\n\npMech"
  "anism\030\002 \001(\0132 .com.weston.pkcs11.PRO_Mech"
  "anism\0223\n\tpTemplate\030\003 \003(\0132 .com.weston.pk"
  "cs11.PRO_Attribute\022\030\n\020ulAttributeCount\030\004"
  " \002(\r\"\032\n\030Rsp_C_Extend_EncryptInit\"\261\001\n\030Req"
  "_C_Extend_DecryptInit\022\020\n\010hSession\030\001 \002(\r\022"
  "4\n\npMechanism\030\002 \001(\0132 .com.weston.pkcs11."
  "PRO_Mechanism\0223\n\tpTemplate\030\003 \003(\0132 .com.w"
  "eston.pkcs11.PRO_Attribute\022\030\n\020ulAttribut"
  "eCount\030\004 \002(\r\"\032\n\030Rsp_C_Extend_DecryptInit"
  "\"\243\001\n\032Req_C_Extend_EncryptUpdate\022\020\n\010hSess"
  "ion\030\001 \002(\r\022\013\n\003pIv\030\002 \001(\014\022\017\n\007ulIvLen\030\003 \002(\r\022"
  "\r\n\005pPart\030\004 \001(\014\022\021\n\tulPartLen\030\005 \002(\r\022\026\n\016pEn"
  "cryptedPart\030\006 \001(\014\022\033\n\023pulEncryptedPartLen"
  "\030\007 \001(\r\"Q\n\032Rsp_C_Extend_EncryptUpdate\022\026\n\016"
  "pEncryptedPart\030\006 \001(\014\022\033\n\023pulEncryptedPart"
  "Len\030\007 \001(\r\"\243\001\n\032Req_C_Extend_DecryptUpdate"
  "\022\020\n\010hSession\030\001 \002(\r\022\013\n\003pIv\030\002 \001(\014\022\017\n\007ulIvL"
  "en\030\003 \002(\r\022\026\n\016pEncryptedPart\030\004 \001(\014\022\032\n\022ulEn"
  "cryptedPartLen\030\005 \002(\r\022\r\n\005pPart\030\006 \001(\014\022\022\n\np"
  "ulPartLen\030\007 \001(\r\"\?\n\032Rsp_C_Extend_DecryptU"
  "pdate\022\r\n\005pPart\030\006 \001(\014\022\022\n\npulPartLen\030\007 \001(\r"
  "\"m\n\034Req_C_Extend_EncryptFinalize\022\020\n\010hSes"
  "sion\030\001 \002(\r\022\032\n\022pLastEncryptedPart\030\006 \001(\014\022\037"
  "\n\027pulLastEncryptedPartLen\030\007 \001(\r\"[\n\034Rsp_C"
  "_Extend_EncryptFinalize\022\032\n\022pLastEncrypte"
  "dPart\030\006 \001(\014\022\037\n\027pulLastEncryptedPartLen\030\007"
  " \001(\r\"[\n\034Req_C_Extend_DecryptFinalize\022\020\n\010"
  "hSession\030\001 \002(\r\022\021\n\tpLastPart\030\006 \001(\014\022\026\n\016pul"
  "LastPartLen\030\007 \001(\r\"I\n\034Rsp_C_Extend_Decryp"
  "tFinalize\022\021\n\tpLastPart\030\006 \001(\014\022\026\n\016pulLastP"
  "artLen\030\007 \001(\r\"\226\001\n\032Req_C_Extend_PointMulti"
  "ply\022\020\n\010hSession\030\001 \002(\r\0224\n\npMechanism\030\002 \001("
  "\0132 .com.weston.pkcs11.PRO_Mechanism\022\014\n\004h"
  "Key\030\003 \002(\r\022\020\n\010pOutData\030\004 \001(\014\022\020\n\010pulCount\030"
  "\005 \001(\r\"@\n\032Rsp_C_Extend_PointMultiply\022\020\n\010p"
  "OutData\030\004 \001(\014\022\020\n\010pulCount\030\005 \001(\r\"q\n\025Req_C"
  "_Extend_Reset_TT\022\020\n\010hSession\030\001 \002(\r\022\017\n\007pb"
  "TTMpk\030\002 \001(\014\022\020\n\010ulMpkLen\030\003 \002(\r\022\017\n\007pbMpkIV"
  "\030\004 \001(\014\022\022\n\nulMpkIVLen\030\005 \002(\r\"\027\n\025Rsp_C_Exte"
  "nd_Reset_TT\"q\n\025Req_C_Extend_Reset_BK\022\020\n\010"
  "hSession\030\001 \002(\r\022\017\n\007pbBKMpk\030\002 \001(\014\022\020\n\010ulMpk"
  "Len\030\003 \002(\r\022\017\n\007pbMpkIV\030\004 \001(\014\022\022\n\nulMpkIVLen"
  "\030\005 \002(\r\"\027\n\025Rsp_C_Extend_Reset_BK\"r\n\'Req_C"
  "_Extend_Get_Special_Object_Version\022\020\n\010hS"
  "ession\030\001 \002(\r\022\023\n\013objectClass\030\002 \002(\r\022\020\n\010pVe"
  "rsion\030\003 \001(\014\022\016\n\006pUlLen\030\004 \001(\r\"K\n\'Rsp_C_Ext"
  "end_Get_Special_Object_Version\022\020\n\010pVersi"
  "on\030\001 \001(\014\022\016\n\006pUlLen\030\002 \001(\r\"}\n\030Req_C_Extend"
  "_DestroyCard\022\016\n\006slotID\030\001 \002(\r\022\021\n\tprandomI"
  "n\030\002 \002(\014\022\023\n\013randomInLen\030\003 \002(\r\022\022\n\nprandomO"
  "ut\030\004 \001(\014\022\025\n\rprandomOutLen\030\005 \001(\r\"E\n\030Rsp_C"
  "_Extend_DestroyCard\022\022\n\nprandomOut\030\001 \001(\014\022"
  "\025\n\rprandomOutLen\030\002 \001(\r\"/\n\035Req_C_Extend_M"
  "onopolizeEnable\022\016\n\006slotID\030\001 \002(\r\"\037\n\035Rsp_C"
  "_Extend_MonopolizeEnable\"0\n\036Req_C_Extend"
  "_MonopolizeDisable\022\016\n\006slotID\030\001 \002(\r\" \n\036Rs"
  "p_C_Extend_MonopolizeDisable\"\225\001\n\027Req_C_E"
  "xtend_GetDevInfo\022\016\n\006slotID\030\001 \002(\r\022\020\n\010user"
  "Name\030\002 \001(\t\022/\n\007ipparam\030\003 \001(\0132\036.com.weston"
  ".pkcs11.PRO_ipparam\022\020\n\010pDevInfo\030\004 \001(\014\022\025\n"
  "\rpUlDevInfoLen\030\005 \001(\r\"B\n\027Rsp_C_Extend_Get"
  "DevInfo\022\020\n\010pDevInfo\030\001 \001(\014\022\025\n\rpUlDevInfoL"
  "en\030\002 \001(\r\"u\n\024Req_C_Extend_DevSign\022\016\n\006slot"
  "ID\030\001 \002(\r\022\r\n\005pData\030\002 \002(\014\022\021\n\tulDataLen\030\003 \002"
  "(\r\022\022\n\npSignature\030\004 \001(\014\022\027\n\017pulSignatureLe"
  "n\030\005 \001(\r\"C\n\024Rsp_C_Extend_DevSign\022\022\n\npSign"
  "ature\030\001 \001(\014\022\027\n\017pulSignatureLen\030\002 \001(\r\"~\n\033"
  "Req_C_Extend_Set_DestroyKey\022\020\n\010hSession\030"
  "\001 \002(\r\022\026\n\016pDestroyKeyMpk\030\002 \001(\014\022\020\n\010ulMpkLe"
  "n\030\003 \002(\r\022\017\n\007pbMpkIV\030\004 \001(\014\022\022\n\nulMpkIVLen\030\005"
  " \002(\r\"\035\n\033Rsp_C_Extend_Set_DestroyKey\"d\n\037R"
  "eq_C_Extend_Get_ExchangePubKey\022\020\n\010hSessi"
  "on\030\001 \002(\r\022\034\n\024pExchangePubKeyValue\030\002 \001(\014\022\021"
  "\n\tpulKeyLen\030\003 \002(\r\"R\n\037Rsp_C_Extend_Get_Ex"
  "changePubKey\022\034\n\024pExchangePubKeyValue\030\001 \001"
  "(\014\022\021\n\tpulKeyLen\030\002 \001(\r\"e\n\030Req_softCreateC"
  "ipherCard\022\r\n\005token\030\001 \002(\t\022\020\n\010userName\030\002 \002"
  "(\t\022\026\n\016licSesrverAddr\030\003 \002(\t\022\020\n\010csppAddr\030\004"
  " \002(\t\"\032\n\030Rsp_softCreateCipherCard\"\027\n\025Req_"
  "DestroyCipherCard\"\027\n\025Rsp_DestroyCipherCa"
  "rd"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_pkcs11_2eproto = {
  false, InitDefaults_pkcs11_2eproto, 
  descriptor_table_protodef_pkcs11_2eproto,
  "pkcs11.proto", &assign_descriptors_table_pkcs11_2eproto, 16122,
};

void AddDescriptors_pkcs11_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_pkcs11_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_pkcs11_2eproto = []() { AddDescriptors_pkcs11_2eproto(); return true; }();
namespace com {
namespace weston {
namespace pkcs11 {

// ===================================================================

void PRO_Version::InitAsDefaultInstance() {
}
class PRO_Version::HasBitSetters {
 public:
  static void set_has_major(PRO_Version* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_minor(PRO_Version* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRO_Version::kMajorFieldNumber;
const int PRO_Version::kMinorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRO_Version::PRO_Version()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.PRO_Version)
}
PRO_Version::PRO_Version(const PRO_Version& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&major_, &from.major_,
    static_cast<size_t>(reinterpret_cast<char*>(&minor_) -
    reinterpret_cast<char*>(&major_)) + sizeof(minor_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.PRO_Version)
}

void PRO_Version::SharedCtor() {
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minor_) -
      reinterpret_cast<char*>(&major_)) + sizeof(minor_));
}

PRO_Version::~PRO_Version() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.PRO_Version)
  SharedDtor();
}

void PRO_Version::SharedDtor() {
}

void PRO_Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PRO_Version& PRO_Version::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PRO_Version_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void PRO_Version::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.PRO_Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&major_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&minor_) -
        reinterpret_cast<char*>(&major_)) + sizeof(minor_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PRO_Version::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PRO_Version*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 major = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_major(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 minor = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_minor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PRO_Version::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.PRO_Version)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_major(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_minor(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.PRO_Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.PRO_Version)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PRO_Version::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.PRO_Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 major = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->major(), output);
  }

  // required uint32 minor = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->minor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.PRO_Version)
}

::google::protobuf::uint8* PRO_Version::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.PRO_Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 major = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->major(), target);
  }

  // required uint32 minor = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->minor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.PRO_Version)
  return target;
}

size_t PRO_Version::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.PRO_Version)
  size_t total_size = 0;

  if (has_major()) {
    // required uint32 major = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->major());
  }

  if (has_minor()) {
    // required uint32 minor = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minor());
  }

  return total_size;
}
size_t PRO_Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.PRO_Version)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 major = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->major());

    // required uint32 minor = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minor());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PRO_Version::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.PRO_Version)
  GOOGLE_DCHECK_NE(&from, this);
  const PRO_Version* source =
      ::google::protobuf::DynamicCastToGenerated<PRO_Version>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.PRO_Version)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.PRO_Version)
    MergeFrom(*source);
  }
}

void PRO_Version::MergeFrom(const PRO_Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.PRO_Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      major_ = from.major_;
    }
    if (cached_has_bits & 0x00000002u) {
      minor_ = from.minor_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PRO_Version::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.PRO_Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRO_Version::CopyFrom(const PRO_Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.PRO_Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRO_Version::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PRO_Version::Swap(PRO_Version* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRO_Version::InternalSwap(PRO_Version* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(major_, other->major_);
  swap(minor_, other->minor_);
}

::google::protobuf::Metadata PRO_Version::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PRO_Attribute::InitAsDefaultInstance() {
}
class PRO_Attribute::HasBitSetters {
 public:
  static void set_has_type(PRO_Attribute* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_value(PRO_Attribute* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulvaluelen(PRO_Attribute* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRO_Attribute::kTypeFieldNumber;
const int PRO_Attribute::kValueFieldNumber;
const int PRO_Attribute::kUlValueLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRO_Attribute::PRO_Attribute()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.PRO_Attribute)
}
PRO_Attribute::PRO_Attribute(const PRO_Attribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulvaluelen_) -
    reinterpret_cast<char*>(&type_)) + sizeof(ulvaluelen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.PRO_Attribute)
}

void PRO_Attribute::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PRO_Attribute_pkcs11_2eproto.base);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulvaluelen_) -
      reinterpret_cast<char*>(&type_)) + sizeof(ulvaluelen_));
}

PRO_Attribute::~PRO_Attribute() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.PRO_Attribute)
  SharedDtor();
}

void PRO_Attribute::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PRO_Attribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PRO_Attribute& PRO_Attribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PRO_Attribute_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void PRO_Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.PRO_Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    value_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulvaluelen_) -
        reinterpret_cast<char*>(&type_)) + sizeof(ulvaluelen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PRO_Attribute::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PRO_Attribute*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulValueLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulvaluelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PRO_Attribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.PRO_Attribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulValueLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulvaluelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulvaluelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.PRO_Attribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.PRO_Attribute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PRO_Attribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.PRO_Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // required uint32 ulValueLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulvaluelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.PRO_Attribute)
}

::google::protobuf::uint8* PRO_Attribute::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.PRO_Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // required uint32 ulValueLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulvaluelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.PRO_Attribute)
  return target;
}

size_t PRO_Attribute::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.PRO_Attribute)
  size_t total_size = 0;

  if (has_type()) {
    // required uint32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  if (has_ulvaluelen()) {
    // required uint32 ulValueLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulvaluelen());
  }

  return total_size;
}
size_t PRO_Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.PRO_Attribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());

    // required uint32 ulValueLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulvaluelen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes value = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PRO_Attribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.PRO_Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  const PRO_Attribute* source =
      ::google::protobuf::DynamicCastToGenerated<PRO_Attribute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.PRO_Attribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.PRO_Attribute)
    MergeFrom(*source);
  }
}

void PRO_Attribute::MergeFrom(const PRO_Attribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.PRO_Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulvaluelen_ = from.ulvaluelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PRO_Attribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.PRO_Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRO_Attribute::CopyFrom(const PRO_Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.PRO_Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRO_Attribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void PRO_Attribute::Swap(PRO_Attribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRO_Attribute::InternalSwap(PRO_Attribute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(ulvaluelen_, other->ulvaluelen_);
}

::google::protobuf::Metadata PRO_Attribute::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PRO_Mechanism::InitAsDefaultInstance() {
}
class PRO_Mechanism::HasBitSetters {
 public:
  static void set_has_mechanism(PRO_Mechanism* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pparameter(PRO_Mechanism* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulvaluelen(PRO_Mechanism* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRO_Mechanism::kMechanismFieldNumber;
const int PRO_Mechanism::kPParameterFieldNumber;
const int PRO_Mechanism::kUlValueLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRO_Mechanism::PRO_Mechanism()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.PRO_Mechanism)
}
PRO_Mechanism::PRO_Mechanism(const PRO_Mechanism& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pparameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pparameter()) {
    pparameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pparameter_);
  }
  ::memcpy(&mechanism_, &from.mechanism_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulvaluelen_) -
    reinterpret_cast<char*>(&mechanism_)) + sizeof(ulvaluelen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.PRO_Mechanism)
}

void PRO_Mechanism::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PRO_Mechanism_pkcs11_2eproto.base);
  pparameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulvaluelen_) -
      reinterpret_cast<char*>(&mechanism_)) + sizeof(ulvaluelen_));
}

PRO_Mechanism::~PRO_Mechanism() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.PRO_Mechanism)
  SharedDtor();
}

void PRO_Mechanism::SharedDtor() {
  pparameter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PRO_Mechanism::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PRO_Mechanism& PRO_Mechanism::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PRO_Mechanism_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void PRO_Mechanism::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.PRO_Mechanism)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pparameter_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&mechanism_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulvaluelen_) -
        reinterpret_cast<char*>(&mechanism_)) + sizeof(ulvaluelen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PRO_Mechanism::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PRO_Mechanism*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 mechanism = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_mechanism(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pParameter = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pparameter();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulValueLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulvaluelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PRO_Mechanism::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.PRO_Mechanism)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 mechanism = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_mechanism(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanism_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pParameter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pparameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulValueLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulvaluelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulvaluelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.PRO_Mechanism)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.PRO_Mechanism)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PRO_Mechanism::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.PRO_Mechanism)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 mechanism = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mechanism(), output);
  }

  // optional bytes pParameter = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pparameter(), output);
  }

  // required uint32 ulValueLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulvaluelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.PRO_Mechanism)
}

::google::protobuf::uint8* PRO_Mechanism::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.PRO_Mechanism)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 mechanism = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mechanism(), target);
  }

  // optional bytes pParameter = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pparameter(), target);
  }

  // required uint32 ulValueLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulvaluelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.PRO_Mechanism)
  return target;
}

size_t PRO_Mechanism::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.PRO_Mechanism)
  size_t total_size = 0;

  if (has_mechanism()) {
    // required uint32 mechanism = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanism());
  }

  if (has_ulvaluelen()) {
    // required uint32 ulValueLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulvaluelen());
  }

  return total_size;
}
size_t PRO_Mechanism::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.PRO_Mechanism)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 mechanism = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanism());

    // required uint32 ulValueLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulvaluelen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pParameter = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pparameter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PRO_Mechanism::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.PRO_Mechanism)
  GOOGLE_DCHECK_NE(&from, this);
  const PRO_Mechanism* source =
      ::google::protobuf::DynamicCastToGenerated<PRO_Mechanism>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.PRO_Mechanism)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.PRO_Mechanism)
    MergeFrom(*source);
  }
}

void PRO_Mechanism::MergeFrom(const PRO_Mechanism& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.PRO_Mechanism)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pparameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pparameter_);
    }
    if (cached_has_bits & 0x00000002u) {
      mechanism_ = from.mechanism_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulvaluelen_ = from.ulvaluelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PRO_Mechanism::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.PRO_Mechanism)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRO_Mechanism::CopyFrom(const PRO_Mechanism& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.PRO_Mechanism)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRO_Mechanism::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void PRO_Mechanism::Swap(PRO_Mechanism* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRO_Mechanism::InternalSwap(PRO_Mechanism* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pparameter_.Swap(&other->pparameter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mechanism_, other->mechanism_);
  swap(ulvaluelen_, other->ulvaluelen_);
}

::google::protobuf::Metadata PRO_Mechanism::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PRO_CK_INFO::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_PRO_CK_INFO_default_instance_._instance.get_mutable()->cryptokiversion_ = const_cast< ::com::weston::pkcs11::PRO_Version*>(
      ::com::weston::pkcs11::PRO_Version::internal_default_instance());
  ::com::weston::pkcs11::_PRO_CK_INFO_default_instance_._instance.get_mutable()->libraryversion_ = const_cast< ::com::weston::pkcs11::PRO_Version*>(
      ::com::weston::pkcs11::PRO_Version::internal_default_instance());
}
class PRO_CK_INFO::HasBitSetters {
 public:
  static const ::com::weston::pkcs11::PRO_Version& cryptokiversion(const PRO_CK_INFO* msg);
  static void set_has_cryptokiversion(PRO_CK_INFO* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_manufacturerid(PRO_CK_INFO* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_flags(PRO_CK_INFO* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_librarydescription(PRO_CK_INFO* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Version& libraryversion(const PRO_CK_INFO* msg);
  static void set_has_libraryversion(PRO_CK_INFO* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

const ::com::weston::pkcs11::PRO_Version&
PRO_CK_INFO::HasBitSetters::cryptokiversion(const PRO_CK_INFO* msg) {
  return *msg->cryptokiversion_;
}
const ::com::weston::pkcs11::PRO_Version&
PRO_CK_INFO::HasBitSetters::libraryversion(const PRO_CK_INFO* msg) {
  return *msg->libraryversion_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRO_CK_INFO::kCryptokiVersionFieldNumber;
const int PRO_CK_INFO::kManufacturerIDFieldNumber;
const int PRO_CK_INFO::kFlagsFieldNumber;
const int PRO_CK_INFO::kLibraryDescriptionFieldNumber;
const int PRO_CK_INFO::kLibraryVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRO_CK_INFO::PRO_CK_INFO()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.PRO_CK_INFO)
}
PRO_CK_INFO::PRO_CK_INFO(const PRO_CK_INFO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  manufacturerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_manufacturerid()) {
    manufacturerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturerid_);
  }
  librarydescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_librarydescription()) {
    librarydescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.librarydescription_);
  }
  if (from.has_cryptokiversion()) {
    cryptokiversion_ = new ::com::weston::pkcs11::PRO_Version(*from.cryptokiversion_);
  } else {
    cryptokiversion_ = nullptr;
  }
  if (from.has_libraryversion()) {
    libraryversion_ = new ::com::weston::pkcs11::PRO_Version(*from.libraryversion_);
  } else {
    libraryversion_ = nullptr;
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.PRO_CK_INFO)
}

void PRO_CK_INFO::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PRO_CK_INFO_pkcs11_2eproto.base);
  manufacturerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  librarydescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cryptokiversion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&cryptokiversion_)) + sizeof(flags_));
}

PRO_CK_INFO::~PRO_CK_INFO() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.PRO_CK_INFO)
  SharedDtor();
}

void PRO_CK_INFO::SharedDtor() {
  manufacturerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  librarydescription_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cryptokiversion_;
  if (this != internal_default_instance()) delete libraryversion_;
}

void PRO_CK_INFO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PRO_CK_INFO& PRO_CK_INFO::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PRO_CK_INFO_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void PRO_CK_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.PRO_CK_INFO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      manufacturerid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      librarydescription_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(cryptokiversion_ != nullptr);
      cryptokiversion_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(libraryversion_ != nullptr);
      libraryversion_->Clear();
    }
  }
  flags_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PRO_CK_INFO::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PRO_CK_INFO*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .com.weston.pkcs11.PRO_Version cryptokiVersion = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Version::_InternalParse;
        object = msg->mutable_cryptokiversion();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required bytes manufacturerID = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_manufacturerid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 flags = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required bytes libraryDescription = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_librarydescription();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required .com.weston.pkcs11.PRO_Version libraryVersion = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Version::_InternalParse;
        object = msg->mutable_libraryversion();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PRO_CK_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.PRO_CK_INFO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.weston.pkcs11.PRO_Version cryptokiVersion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cryptokiversion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes manufacturerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_manufacturerid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes libraryDescription = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_librarydescription()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .com.weston.pkcs11.PRO_Version libraryVersion = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_libraryversion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.PRO_CK_INFO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.PRO_CK_INFO)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PRO_CK_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.PRO_CK_INFO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .com.weston.pkcs11.PRO_Version cryptokiVersion = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::cryptokiversion(this), output);
  }

  // required bytes manufacturerID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->manufacturerid(), output);
  }

  // required uint32 flags = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  // required bytes libraryDescription = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->librarydescription(), output);
  }

  // required .com.weston.pkcs11.PRO_Version libraryVersion = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::libraryversion(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.PRO_CK_INFO)
}

::google::protobuf::uint8* PRO_CK_INFO::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.PRO_CK_INFO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .com.weston.pkcs11.PRO_Version cryptokiVersion = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::cryptokiversion(this), target);
  }

  // required bytes manufacturerID = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->manufacturerid(), target);
  }

  // required uint32 flags = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flags(), target);
  }

  // required bytes libraryDescription = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->librarydescription(), target);
  }

  // required .com.weston.pkcs11.PRO_Version libraryVersion = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::libraryversion(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.PRO_CK_INFO)
  return target;
}

size_t PRO_CK_INFO::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.PRO_CK_INFO)
  size_t total_size = 0;

  if (has_manufacturerid()) {
    // required bytes manufacturerID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->manufacturerid());
  }

  if (has_librarydescription()) {
    // required bytes libraryDescription = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->librarydescription());
  }

  if (has_cryptokiversion()) {
    // required .com.weston.pkcs11.PRO_Version cryptokiVersion = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cryptokiversion_);
  }

  if (has_libraryversion()) {
    // required .com.weston.pkcs11.PRO_Version libraryVersion = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *libraryversion_);
  }

  if (has_flags()) {
    // required uint32 flags = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  return total_size;
}
size_t PRO_CK_INFO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.PRO_CK_INFO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bytes manufacturerID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->manufacturerid());

    // required bytes libraryDescription = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->librarydescription());

    // required .com.weston.pkcs11.PRO_Version cryptokiVersion = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cryptokiversion_);

    // required .com.weston.pkcs11.PRO_Version libraryVersion = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *libraryversion_);

    // required uint32 flags = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PRO_CK_INFO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.PRO_CK_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  const PRO_CK_INFO* source =
      ::google::protobuf::DynamicCastToGenerated<PRO_CK_INFO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.PRO_CK_INFO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.PRO_CK_INFO)
    MergeFrom(*source);
  }
}

void PRO_CK_INFO::MergeFrom(const PRO_CK_INFO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.PRO_CK_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      manufacturerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturerid_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      librarydescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.librarydescription_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_cryptokiversion()->::com::weston::pkcs11::PRO_Version::MergeFrom(from.cryptokiversion());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_libraryversion()->::com::weston::pkcs11::PRO_Version::MergeFrom(from.libraryversion());
    }
    if (cached_has_bits & 0x00000010u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PRO_CK_INFO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.PRO_CK_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRO_CK_INFO::CopyFrom(const PRO_CK_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.PRO_CK_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRO_CK_INFO::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_cryptokiversion()) {
    if (!this->cryptokiversion_->IsInitialized()) return false;
  }
  if (has_libraryversion()) {
    if (!this->libraryversion_->IsInitialized()) return false;
  }
  return true;
}

void PRO_CK_INFO::Swap(PRO_CK_INFO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRO_CK_INFO::InternalSwap(PRO_CK_INFO* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  manufacturerid_.Swap(&other->manufacturerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  librarydescription_.Swap(&other->librarydescription_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cryptokiversion_, other->cryptokiversion_);
  swap(libraryversion_, other->libraryversion_);
  swap(flags_, other->flags_);
}

::google::protobuf::Metadata PRO_CK_INFO::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PRO_CK_SLOT_INFO::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_PRO_CK_SLOT_INFO_default_instance_._instance.get_mutable()->hardwareversion_ = const_cast< ::com::weston::pkcs11::PRO_Version*>(
      ::com::weston::pkcs11::PRO_Version::internal_default_instance());
  ::com::weston::pkcs11::_PRO_CK_SLOT_INFO_default_instance_._instance.get_mutable()->firmwareversion_ = const_cast< ::com::weston::pkcs11::PRO_Version*>(
      ::com::weston::pkcs11::PRO_Version::internal_default_instance());
}
class PRO_CK_SLOT_INFO::HasBitSetters {
 public:
  static void set_has_slotdescription(PRO_CK_SLOT_INFO* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_manufacturerid(PRO_CK_SLOT_INFO* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_flags(PRO_CK_SLOT_INFO* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static const ::com::weston::pkcs11::PRO_Version& hardwareversion(const PRO_CK_SLOT_INFO* msg);
  static void set_has_hardwareversion(PRO_CK_SLOT_INFO* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static const ::com::weston::pkcs11::PRO_Version& firmwareversion(const PRO_CK_SLOT_INFO* msg);
  static void set_has_firmwareversion(PRO_CK_SLOT_INFO* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

const ::com::weston::pkcs11::PRO_Version&
PRO_CK_SLOT_INFO::HasBitSetters::hardwareversion(const PRO_CK_SLOT_INFO* msg) {
  return *msg->hardwareversion_;
}
const ::com::weston::pkcs11::PRO_Version&
PRO_CK_SLOT_INFO::HasBitSetters::firmwareversion(const PRO_CK_SLOT_INFO* msg) {
  return *msg->firmwareversion_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRO_CK_SLOT_INFO::kSlotDescriptionFieldNumber;
const int PRO_CK_SLOT_INFO::kManufacturerIDFieldNumber;
const int PRO_CK_SLOT_INFO::kFlagsFieldNumber;
const int PRO_CK_SLOT_INFO::kHardwareVersionFieldNumber;
const int PRO_CK_SLOT_INFO::kFirmwareVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRO_CK_SLOT_INFO::PRO_CK_SLOT_INFO()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.PRO_CK_SLOT_INFO)
}
PRO_CK_SLOT_INFO::PRO_CK_SLOT_INFO(const PRO_CK_SLOT_INFO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slotdescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_slotdescription()) {
    slotdescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slotdescription_);
  }
  manufacturerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_manufacturerid()) {
    manufacturerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturerid_);
  }
  if (from.has_hardwareversion()) {
    hardwareversion_ = new ::com::weston::pkcs11::PRO_Version(*from.hardwareversion_);
  } else {
    hardwareversion_ = nullptr;
  }
  if (from.has_firmwareversion()) {
    firmwareversion_ = new ::com::weston::pkcs11::PRO_Version(*from.firmwareversion_);
  } else {
    firmwareversion_ = nullptr;
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.PRO_CK_SLOT_INFO)
}

void PRO_CK_SLOT_INFO::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PRO_CK_SLOT_INFO_pkcs11_2eproto.base);
  slotdescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hardwareversion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&hardwareversion_)) + sizeof(flags_));
}

PRO_CK_SLOT_INFO::~PRO_CK_SLOT_INFO() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  SharedDtor();
}

void PRO_CK_SLOT_INFO::SharedDtor() {
  slotdescription_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete hardwareversion_;
  if (this != internal_default_instance()) delete firmwareversion_;
}

void PRO_CK_SLOT_INFO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PRO_CK_SLOT_INFO& PRO_CK_SLOT_INFO::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PRO_CK_SLOT_INFO_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void PRO_CK_SLOT_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      slotdescription_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      manufacturerid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(hardwareversion_ != nullptr);
      hardwareversion_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(firmwareversion_ != nullptr);
      firmwareversion_->Clear();
    }
  }
  flags_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PRO_CK_SLOT_INFO::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PRO_CK_SLOT_INFO*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bytes slotDescription = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_slotdescription();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required bytes manufacturerID = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_manufacturerid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 flags = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required .com.weston.pkcs11.PRO_Version hardwareVersion = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Version::_InternalParse;
        object = msg->mutable_hardwareversion();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required .com.weston.pkcs11.PRO_Version firmwareVersion = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Version::_InternalParse;
        object = msg->mutable_firmwareversion();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PRO_CK_SLOT_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes slotDescription = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_slotdescription()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes manufacturerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_manufacturerid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .com.weston.pkcs11.PRO_Version hardwareVersion = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hardwareversion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .com.weston.pkcs11.PRO_Version firmwareVersion = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_firmwareversion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PRO_CK_SLOT_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes slotDescription = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->slotdescription(), output);
  }

  // required bytes manufacturerID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->manufacturerid(), output);
  }

  // required uint32 flags = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  // required .com.weston.pkcs11.PRO_Version hardwareVersion = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::hardwareversion(this), output);
  }

  // required .com.weston.pkcs11.PRO_Version firmwareVersion = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::firmwareversion(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.PRO_CK_SLOT_INFO)
}

::google::protobuf::uint8* PRO_CK_SLOT_INFO::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes slotDescription = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->slotdescription(), target);
  }

  // required bytes manufacturerID = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->manufacturerid(), target);
  }

  // required uint32 flags = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flags(), target);
  }

  // required .com.weston.pkcs11.PRO_Version hardwareVersion = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::hardwareversion(this), target);
  }

  // required .com.weston.pkcs11.PRO_Version firmwareVersion = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::firmwareversion(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  return target;
}

size_t PRO_CK_SLOT_INFO::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  size_t total_size = 0;

  if (has_slotdescription()) {
    // required bytes slotDescription = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->slotdescription());
  }

  if (has_manufacturerid()) {
    // required bytes manufacturerID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->manufacturerid());
  }

  if (has_hardwareversion()) {
    // required .com.weston.pkcs11.PRO_Version hardwareVersion = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hardwareversion_);
  }

  if (has_firmwareversion()) {
    // required .com.weston.pkcs11.PRO_Version firmwareVersion = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *firmwareversion_);
  }

  if (has_flags()) {
    // required uint32 flags = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  return total_size;
}
size_t PRO_CK_SLOT_INFO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required bytes slotDescription = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->slotdescription());

    // required bytes manufacturerID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->manufacturerid());

    // required .com.weston.pkcs11.PRO_Version hardwareVersion = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hardwareversion_);

    // required .com.weston.pkcs11.PRO_Version firmwareVersion = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *firmwareversion_);

    // required uint32 flags = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PRO_CK_SLOT_INFO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  const PRO_CK_SLOT_INFO* source =
      ::google::protobuf::DynamicCastToGenerated<PRO_CK_SLOT_INFO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.PRO_CK_SLOT_INFO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.PRO_CK_SLOT_INFO)
    MergeFrom(*source);
  }
}

void PRO_CK_SLOT_INFO::MergeFrom(const PRO_CK_SLOT_INFO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      slotdescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slotdescription_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      manufacturerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturerid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_hardwareversion()->::com::weston::pkcs11::PRO_Version::MergeFrom(from.hardwareversion());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_firmwareversion()->::com::weston::pkcs11::PRO_Version::MergeFrom(from.firmwareversion());
    }
    if (cached_has_bits & 0x00000010u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PRO_CK_SLOT_INFO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRO_CK_SLOT_INFO::CopyFrom(const PRO_CK_SLOT_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.PRO_CK_SLOT_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRO_CK_SLOT_INFO::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_hardwareversion()) {
    if (!this->hardwareversion_->IsInitialized()) return false;
  }
  if (has_firmwareversion()) {
    if (!this->firmwareversion_->IsInitialized()) return false;
  }
  return true;
}

void PRO_CK_SLOT_INFO::Swap(PRO_CK_SLOT_INFO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRO_CK_SLOT_INFO::InternalSwap(PRO_CK_SLOT_INFO* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  slotdescription_.Swap(&other->slotdescription_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  manufacturerid_.Swap(&other->manufacturerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hardwareversion_, other->hardwareversion_);
  swap(firmwareversion_, other->firmwareversion_);
  swap(flags_, other->flags_);
}

::google::protobuf::Metadata PRO_CK_SLOT_INFO::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PRO_TokenInfo::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_PRO_TokenInfo_default_instance_._instance.get_mutable()->hardwareversion_ = const_cast< ::com::weston::pkcs11::PRO_Version*>(
      ::com::weston::pkcs11::PRO_Version::internal_default_instance());
  ::com::weston::pkcs11::_PRO_TokenInfo_default_instance_._instance.get_mutable()->firmwareversion_ = const_cast< ::com::weston::pkcs11::PRO_Version*>(
      ::com::weston::pkcs11::PRO_Version::internal_default_instance());
}
class PRO_TokenInfo::HasBitSetters {
 public:
  static void set_has_labe(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_manufacturerid(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_model(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_serialnumber(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_flags(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
  static void set_has_ulmaxsessioncount(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000100u;
  }
  static void set_has_ulsessioncount(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000200u;
  }
  static void set_has_ulmaxrwsessioncount(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000400u;
  }
  static void set_has_ulrwsessioncount(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000800u;
  }
  static void set_has_ulmaxpinlen(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00001000u;
  }
  static void set_has_ulminpinlen(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00002000u;
  }
  static void set_has_ultotalpublicmemory(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00004000u;
  }
  static void set_has_ulfreepublicmemory(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00008000u;
  }
  static void set_has_ultotalprivatememory(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00010000u;
  }
  static void set_has_ulfreeprivatememory(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00020000u;
  }
  static const ::com::weston::pkcs11::PRO_Version& hardwareversion(const PRO_TokenInfo* msg);
  static void set_has_hardwareversion(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static const ::com::weston::pkcs11::PRO_Version& firmwareversion(const PRO_TokenInfo* msg);
  static void set_has_firmwareversion(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_utctime(PRO_TokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

const ::com::weston::pkcs11::PRO_Version&
PRO_TokenInfo::HasBitSetters::hardwareversion(const PRO_TokenInfo* msg) {
  return *msg->hardwareversion_;
}
const ::com::weston::pkcs11::PRO_Version&
PRO_TokenInfo::HasBitSetters::firmwareversion(const PRO_TokenInfo* msg) {
  return *msg->firmwareversion_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRO_TokenInfo::kLabeFieldNumber;
const int PRO_TokenInfo::kManufacturerIDFieldNumber;
const int PRO_TokenInfo::kModelFieldNumber;
const int PRO_TokenInfo::kSerialNumberFieldNumber;
const int PRO_TokenInfo::kFlagsFieldNumber;
const int PRO_TokenInfo::kUlMaxSessionCountFieldNumber;
const int PRO_TokenInfo::kUlSessionCountFieldNumber;
const int PRO_TokenInfo::kUlMaxRwSessionCountFieldNumber;
const int PRO_TokenInfo::kUlRwSessionCountFieldNumber;
const int PRO_TokenInfo::kUlMaxPinLenFieldNumber;
const int PRO_TokenInfo::kUlMinPinLenFieldNumber;
const int PRO_TokenInfo::kUlTotalPublicMemoryFieldNumber;
const int PRO_TokenInfo::kUlFreePublicMemoryFieldNumber;
const int PRO_TokenInfo::kUlTotalPrivateMemoryFieldNumber;
const int PRO_TokenInfo::kUlFreePrivateMemoryFieldNumber;
const int PRO_TokenInfo::kHardwareVersionFieldNumber;
const int PRO_TokenInfo::kFirmwareVersionFieldNumber;
const int PRO_TokenInfo::kUtcTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRO_TokenInfo::PRO_TokenInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.PRO_TokenInfo)
}
PRO_TokenInfo::PRO_TokenInfo(const PRO_TokenInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_labe()) {
    labe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.labe_);
  }
  manufacturerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_manufacturerid()) {
    manufacturerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturerid_);
  }
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model()) {
    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialnumber()) {
    serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialnumber_);
  }
  utctime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_utctime()) {
    utctime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.utctime_);
  }
  if (from.has_hardwareversion()) {
    hardwareversion_ = new ::com::weston::pkcs11::PRO_Version(*from.hardwareversion_);
  } else {
    hardwareversion_ = nullptr;
  }
  if (from.has_firmwareversion()) {
    firmwareversion_ = new ::com::weston::pkcs11::PRO_Version(*from.firmwareversion_);
  } else {
    firmwareversion_ = nullptr;
  }
  ::memcpy(&flags_, &from.flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulfreeprivatememory_) -
    reinterpret_cast<char*>(&flags_)) + sizeof(ulfreeprivatememory_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.PRO_TokenInfo)
}

void PRO_TokenInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PRO_TokenInfo_pkcs11_2eproto.base);
  labe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  utctime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hardwareversion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulfreeprivatememory_) -
      reinterpret_cast<char*>(&hardwareversion_)) + sizeof(ulfreeprivatememory_));
}

PRO_TokenInfo::~PRO_TokenInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.PRO_TokenInfo)
  SharedDtor();
}

void PRO_TokenInfo::SharedDtor() {
  labe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialnumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  utctime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete hardwareversion_;
  if (this != internal_default_instance()) delete firmwareversion_;
}

void PRO_TokenInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PRO_TokenInfo& PRO_TokenInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PRO_TokenInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void PRO_TokenInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.PRO_TokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      labe_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      manufacturerid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      model_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      serialnumber_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      utctime_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(hardwareversion_ != nullptr);
      hardwareversion_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(firmwareversion_ != nullptr);
      firmwareversion_->Clear();
    }
  }
  flags_ = 0u;
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&ulmaxsessioncount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulfreepublicmemory_) -
        reinterpret_cast<char*>(&ulmaxsessioncount_)) + sizeof(ulfreepublicmemory_));
  }
  if (cached_has_bits & 0x00030000u) {
    ::memset(&ultotalprivatememory_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulfreeprivatememory_) -
        reinterpret_cast<char*>(&ultotalprivatememory_)) + sizeof(ulfreeprivatememory_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PRO_TokenInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PRO_TokenInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bytes labe = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_labe();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required bytes manufacturerID = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_manufacturerid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required bytes model = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_model();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required bytes serialNumber = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_serialnumber();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 flags = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 ulMaxSessionCount = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_ulmaxsessioncount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 ulSessionCount = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_ulsessioncount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 ulMaxRwSessionCount = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_ulmaxrwsessioncount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 ulRwSessionCount = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_ulrwsessioncount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 ulMaxPinLen = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_ulmaxpinlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 ulMinPinLen = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_ulminpinlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 ulTotalPublicMemory = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        msg->set_ultotalpublicmemory(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 ulFreePublicMemory = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        msg->set_ulfreepublicmemory(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 ulTotalPrivateMemory = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 112) goto handle_unusual;
        msg->set_ultotalprivatememory(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 ulFreePrivateMemory = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 120) goto handle_unusual;
        msg->set_ulfreeprivatememory(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required .com.weston.pkcs11.PRO_Version hardwareVersion = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Version::_InternalParse;
        object = msg->mutable_hardwareversion();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required .com.weston.pkcs11.PRO_Version firmwareVersion = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Version::_InternalParse;
        object = msg->mutable_firmwareversion();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required bytes utcTime = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_utctime();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PRO_TokenInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.PRO_TokenInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes labe = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_labe()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes manufacturerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_manufacturerid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes serialNumber = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialnumber()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 flags = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMaxSessionCount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_ulmaxsessioncount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmaxsessioncount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulSessionCount = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_ulsessioncount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulsessioncount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMaxRwSessionCount = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_ulmaxrwsessioncount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmaxrwsessioncount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulRwSessionCount = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_ulrwsessioncount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulrwsessioncount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMaxPinLen = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {
          HasBitSetters::set_has_ulmaxpinlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmaxpinlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMinPinLen = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {
          HasBitSetters::set_has_ulminpinlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulminpinlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulTotalPublicMemory = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {
          HasBitSetters::set_has_ultotalpublicmemory(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ultotalpublicmemory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulFreePublicMemory = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {
          HasBitSetters::set_has_ulfreepublicmemory(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulfreepublicmemory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulTotalPrivateMemory = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (112 & 0xFF)) {
          HasBitSetters::set_has_ultotalprivatememory(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ultotalprivatememory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulFreePrivateMemory = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (120 & 0xFF)) {
          HasBitSetters::set_has_ulfreeprivatememory(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulfreeprivatememory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .com.weston.pkcs11.PRO_Version hardwareVersion = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hardwareversion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .com.weston.pkcs11.PRO_Version firmwareVersion = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_firmwareversion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes utcTime = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_utctime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.PRO_TokenInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.PRO_TokenInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PRO_TokenInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.PRO_TokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes labe = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->labe(), output);
  }

  // required bytes manufacturerID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->manufacturerid(), output);
  }

  // required bytes model = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->model(), output);
  }

  // required bytes serialNumber = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->serialnumber(), output);
  }

  // required uint32 flags = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->flags(), output);
  }

  // required uint32 ulMaxSessionCount = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ulmaxsessioncount(), output);
  }

  // required uint32 ulSessionCount = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->ulsessioncount(), output);
  }

  // required uint32 ulMaxRwSessionCount = 8;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->ulmaxrwsessioncount(), output);
  }

  // required uint32 ulRwSessionCount = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->ulrwsessioncount(), output);
  }

  // required uint32 ulMaxPinLen = 10;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->ulmaxpinlen(), output);
  }

  // required uint32 ulMinPinLen = 11;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->ulminpinlen(), output);
  }

  // required uint32 ulTotalPublicMemory = 12;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->ultotalpublicmemory(), output);
  }

  // required uint32 ulFreePublicMemory = 13;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->ulfreepublicmemory(), output);
  }

  // required uint32 ulTotalPrivateMemory = 14;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->ultotalprivatememory(), output);
  }

  // required uint32 ulFreePrivateMemory = 15;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->ulfreeprivatememory(), output);
  }

  // required .com.weston.pkcs11.PRO_Version hardwareVersion = 16;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, HasBitSetters::hardwareversion(this), output);
  }

  // required .com.weston.pkcs11.PRO_Version firmwareVersion = 17;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, HasBitSetters::firmwareversion(this), output);
  }

  // required bytes utcTime = 18;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      18, this->utctime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.PRO_TokenInfo)
}

::google::protobuf::uint8* PRO_TokenInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.PRO_TokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes labe = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->labe(), target);
  }

  // required bytes manufacturerID = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->manufacturerid(), target);
  }

  // required bytes model = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->model(), target);
  }

  // required bytes serialNumber = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->serialnumber(), target);
  }

  // required uint32 flags = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->flags(), target);
  }

  // required uint32 ulMaxSessionCount = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ulmaxsessioncount(), target);
  }

  // required uint32 ulSessionCount = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->ulsessioncount(), target);
  }

  // required uint32 ulMaxRwSessionCount = 8;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->ulmaxrwsessioncount(), target);
  }

  // required uint32 ulRwSessionCount = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->ulrwsessioncount(), target);
  }

  // required uint32 ulMaxPinLen = 10;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->ulmaxpinlen(), target);
  }

  // required uint32 ulMinPinLen = 11;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->ulminpinlen(), target);
  }

  // required uint32 ulTotalPublicMemory = 12;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->ultotalpublicmemory(), target);
  }

  // required uint32 ulFreePublicMemory = 13;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->ulfreepublicmemory(), target);
  }

  // required uint32 ulTotalPrivateMemory = 14;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->ultotalprivatememory(), target);
  }

  // required uint32 ulFreePrivateMemory = 15;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->ulfreeprivatememory(), target);
  }

  // required .com.weston.pkcs11.PRO_Version hardwareVersion = 16;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, HasBitSetters::hardwareversion(this), target);
  }

  // required .com.weston.pkcs11.PRO_Version firmwareVersion = 17;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, HasBitSetters::firmwareversion(this), target);
  }

  // required bytes utcTime = 18;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        18, this->utctime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.PRO_TokenInfo)
  return target;
}

size_t PRO_TokenInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.PRO_TokenInfo)
  size_t total_size = 0;

  if (has_labe()) {
    // required bytes labe = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->labe());
  }

  if (has_manufacturerid()) {
    // required bytes manufacturerID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->manufacturerid());
  }

  if (has_model()) {
    // required bytes model = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->model());
  }

  if (has_serialnumber()) {
    // required bytes serialNumber = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->serialnumber());
  }

  if (has_utctime()) {
    // required bytes utcTime = 18;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->utctime());
  }

  if (has_hardwareversion()) {
    // required .com.weston.pkcs11.PRO_Version hardwareVersion = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hardwareversion_);
  }

  if (has_firmwareversion()) {
    // required .com.weston.pkcs11.PRO_Version firmwareVersion = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *firmwareversion_);
  }

  if (has_flags()) {
    // required uint32 flags = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  if (has_ulmaxsessioncount()) {
    // required uint32 ulMaxSessionCount = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmaxsessioncount());
  }

  if (has_ulsessioncount()) {
    // required uint32 ulSessionCount = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulsessioncount());
  }

  if (has_ulmaxrwsessioncount()) {
    // required uint32 ulMaxRwSessionCount = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmaxrwsessioncount());
  }

  if (has_ulrwsessioncount()) {
    // required uint32 ulRwSessionCount = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulrwsessioncount());
  }

  if (has_ulmaxpinlen()) {
    // required uint32 ulMaxPinLen = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmaxpinlen());
  }

  if (has_ulminpinlen()) {
    // required uint32 ulMinPinLen = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulminpinlen());
  }

  if (has_ultotalpublicmemory()) {
    // required uint32 ulTotalPublicMemory = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ultotalpublicmemory());
  }

  if (has_ulfreepublicmemory()) {
    // required uint32 ulFreePublicMemory = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulfreepublicmemory());
  }

  if (has_ultotalprivatememory()) {
    // required uint32 ulTotalPrivateMemory = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ultotalprivatememory());
  }

  if (has_ulfreeprivatememory()) {
    // required uint32 ulFreePrivateMemory = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulfreeprivatememory());
  }

  return total_size;
}
size_t PRO_TokenInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.PRO_TokenInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0003ffff) ^ 0x0003ffff) == 0) {  // All required fields are present.
    // required bytes labe = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->labe());

    // required bytes manufacturerID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->manufacturerid());

    // required bytes model = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->model());

    // required bytes serialNumber = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->serialnumber());

    // required bytes utcTime = 18;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->utctime());

    // required .com.weston.pkcs11.PRO_Version hardwareVersion = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hardwareversion_);

    // required .com.weston.pkcs11.PRO_Version firmwareVersion = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *firmwareversion_);

    // required uint32 flags = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());

    // required uint32 ulMaxSessionCount = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmaxsessioncount());

    // required uint32 ulSessionCount = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulsessioncount());

    // required uint32 ulMaxRwSessionCount = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmaxrwsessioncount());

    // required uint32 ulRwSessionCount = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulrwsessioncount());

    // required uint32 ulMaxPinLen = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmaxpinlen());

    // required uint32 ulMinPinLen = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulminpinlen());

    // required uint32 ulTotalPublicMemory = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ultotalpublicmemory());

    // required uint32 ulFreePublicMemory = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulfreepublicmemory());

    // required uint32 ulTotalPrivateMemory = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ultotalprivatememory());

    // required uint32 ulFreePrivateMemory = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulfreeprivatememory());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PRO_TokenInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.PRO_TokenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PRO_TokenInfo* source =
      ::google::protobuf::DynamicCastToGenerated<PRO_TokenInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.PRO_TokenInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.PRO_TokenInfo)
    MergeFrom(*source);
  }
}

void PRO_TokenInfo::MergeFrom(const PRO_TokenInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.PRO_TokenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      labe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.labe_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      manufacturerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturerid_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialnumber_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      utctime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.utctime_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_hardwareversion()->::com::weston::pkcs11::PRO_Version::MergeFrom(from.hardwareversion());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_firmwareversion()->::com::weston::pkcs11::PRO_Version::MergeFrom(from.firmwareversion());
    }
    if (cached_has_bits & 0x00000080u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      ulmaxsessioncount_ = from.ulmaxsessioncount_;
    }
    if (cached_has_bits & 0x00000200u) {
      ulsessioncount_ = from.ulsessioncount_;
    }
    if (cached_has_bits & 0x00000400u) {
      ulmaxrwsessioncount_ = from.ulmaxrwsessioncount_;
    }
    if (cached_has_bits & 0x00000800u) {
      ulrwsessioncount_ = from.ulrwsessioncount_;
    }
    if (cached_has_bits & 0x00001000u) {
      ulmaxpinlen_ = from.ulmaxpinlen_;
    }
    if (cached_has_bits & 0x00002000u) {
      ulminpinlen_ = from.ulminpinlen_;
    }
    if (cached_has_bits & 0x00004000u) {
      ultotalpublicmemory_ = from.ultotalpublicmemory_;
    }
    if (cached_has_bits & 0x00008000u) {
      ulfreepublicmemory_ = from.ulfreepublicmemory_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00030000u) {
    if (cached_has_bits & 0x00010000u) {
      ultotalprivatememory_ = from.ultotalprivatememory_;
    }
    if (cached_has_bits & 0x00020000u) {
      ulfreeprivatememory_ = from.ulfreeprivatememory_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PRO_TokenInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.PRO_TokenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRO_TokenInfo::CopyFrom(const PRO_TokenInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.PRO_TokenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRO_TokenInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0003ffff) != 0x0003ffff) return false;
  if (has_hardwareversion()) {
    if (!this->hardwareversion_->IsInitialized()) return false;
  }
  if (has_firmwareversion()) {
    if (!this->firmwareversion_->IsInitialized()) return false;
  }
  return true;
}

void PRO_TokenInfo::Swap(PRO_TokenInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRO_TokenInfo::InternalSwap(PRO_TokenInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  labe_.Swap(&other->labe_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  manufacturerid_.Swap(&other->manufacturerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_.Swap(&other->model_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serialnumber_.Swap(&other->serialnumber_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  utctime_.Swap(&other->utctime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hardwareversion_, other->hardwareversion_);
  swap(firmwareversion_, other->firmwareversion_);
  swap(flags_, other->flags_);
  swap(ulmaxsessioncount_, other->ulmaxsessioncount_);
  swap(ulsessioncount_, other->ulsessioncount_);
  swap(ulmaxrwsessioncount_, other->ulmaxrwsessioncount_);
  swap(ulrwsessioncount_, other->ulrwsessioncount_);
  swap(ulmaxpinlen_, other->ulmaxpinlen_);
  swap(ulminpinlen_, other->ulminpinlen_);
  swap(ultotalpublicmemory_, other->ultotalpublicmemory_);
  swap(ulfreepublicmemory_, other->ulfreepublicmemory_);
  swap(ultotalprivatememory_, other->ultotalprivatememory_);
  swap(ulfreeprivatememory_, other->ulfreeprivatememory_);
}

::google::protobuf::Metadata PRO_TokenInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PRO_MechanismInfo::InitAsDefaultInstance() {
}
class PRO_MechanismInfo::HasBitSetters {
 public:
  static void set_has_ulminkeysize(PRO_MechanismInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulmaxkeysize(PRO_MechanismInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_flags(PRO_MechanismInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRO_MechanismInfo::kUlMinKeySizeFieldNumber;
const int PRO_MechanismInfo::kUlMaxKeySizeFieldNumber;
const int PRO_MechanismInfo::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRO_MechanismInfo::PRO_MechanismInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.PRO_MechanismInfo)
}
PRO_MechanismInfo::PRO_MechanismInfo(const PRO_MechanismInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ulminkeysize_, &from.ulminkeysize_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&ulminkeysize_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.PRO_MechanismInfo)
}

void PRO_MechanismInfo::SharedCtor() {
  ::memset(&ulminkeysize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&ulminkeysize_)) + sizeof(flags_));
}

PRO_MechanismInfo::~PRO_MechanismInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.PRO_MechanismInfo)
  SharedDtor();
}

void PRO_MechanismInfo::SharedDtor() {
}

void PRO_MechanismInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PRO_MechanismInfo& PRO_MechanismInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PRO_MechanismInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void PRO_MechanismInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.PRO_MechanismInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&ulminkeysize_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&ulminkeysize_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PRO_MechanismInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PRO_MechanismInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 ulMinKeySize = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_ulminkeysize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 ulMaxKeySize = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_ulmaxkeysize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 flags = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PRO_MechanismInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.PRO_MechanismInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ulMinKeySize = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_ulminkeysize(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulminkeysize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMaxKeySize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_ulmaxkeysize(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmaxkeysize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.PRO_MechanismInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.PRO_MechanismInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PRO_MechanismInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.PRO_MechanismInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 ulMinKeySize = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ulminkeysize(), output);
  }

  // required uint32 ulMaxKeySize = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ulmaxkeysize(), output);
  }

  // required uint32 flags = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.PRO_MechanismInfo)
}

::google::protobuf::uint8* PRO_MechanismInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.PRO_MechanismInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 ulMinKeySize = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ulminkeysize(), target);
  }

  // required uint32 ulMaxKeySize = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ulmaxkeysize(), target);
  }

  // required uint32 flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flags(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.PRO_MechanismInfo)
  return target;
}

size_t PRO_MechanismInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.PRO_MechanismInfo)
  size_t total_size = 0;

  if (has_ulminkeysize()) {
    // required uint32 ulMinKeySize = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulminkeysize());
  }

  if (has_ulmaxkeysize()) {
    // required uint32 ulMaxKeySize = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmaxkeysize());
  }

  if (has_flags()) {
    // required uint32 flags = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  return total_size;
}
size_t PRO_MechanismInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.PRO_MechanismInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 ulMinKeySize = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulminkeysize());

    // required uint32 ulMaxKeySize = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmaxkeysize());

    // required uint32 flags = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PRO_MechanismInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.PRO_MechanismInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PRO_MechanismInfo* source =
      ::google::protobuf::DynamicCastToGenerated<PRO_MechanismInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.PRO_MechanismInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.PRO_MechanismInfo)
    MergeFrom(*source);
  }
}

void PRO_MechanismInfo::MergeFrom(const PRO_MechanismInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.PRO_MechanismInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ulminkeysize_ = from.ulminkeysize_;
    }
    if (cached_has_bits & 0x00000002u) {
      ulmaxkeysize_ = from.ulmaxkeysize_;
    }
    if (cached_has_bits & 0x00000004u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PRO_MechanismInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.PRO_MechanismInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRO_MechanismInfo::CopyFrom(const PRO_MechanismInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.PRO_MechanismInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRO_MechanismInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PRO_MechanismInfo::Swap(PRO_MechanismInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRO_MechanismInfo::InternalSwap(PRO_MechanismInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ulminkeysize_, other->ulminkeysize_);
  swap(ulmaxkeysize_, other->ulmaxkeysize_);
  swap(flags_, other->flags_);
}

::google::protobuf::Metadata PRO_MechanismInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PRO_SessionInfo::InitAsDefaultInstance() {
}
class PRO_SessionInfo::HasBitSetters {
 public:
  static void set_has_slotid(PRO_SessionInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_state(PRO_SessionInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_flags(PRO_SessionInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_uldeviceerror(PRO_SessionInfo* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRO_SessionInfo::kSlotIDFieldNumber;
const int PRO_SessionInfo::kStateFieldNumber;
const int PRO_SessionInfo::kFlagsFieldNumber;
const int PRO_SessionInfo::kUlDeviceErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRO_SessionInfo::PRO_SessionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.PRO_SessionInfo)
}
PRO_SessionInfo::PRO_SessionInfo(const PRO_SessionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slotid_, &from.slotid_,
    static_cast<size_t>(reinterpret_cast<char*>(&uldeviceerror_) -
    reinterpret_cast<char*>(&slotid_)) + sizeof(uldeviceerror_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.PRO_SessionInfo)
}

void PRO_SessionInfo::SharedCtor() {
  ::memset(&slotid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uldeviceerror_) -
      reinterpret_cast<char*>(&slotid_)) + sizeof(uldeviceerror_));
}

PRO_SessionInfo::~PRO_SessionInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.PRO_SessionInfo)
  SharedDtor();
}

void PRO_SessionInfo::SharedDtor() {
}

void PRO_SessionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PRO_SessionInfo& PRO_SessionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PRO_SessionInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void PRO_SessionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.PRO_SessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&slotid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&uldeviceerror_) -
        reinterpret_cast<char*>(&slotid_)) + sizeof(uldeviceerror_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PRO_SessionInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PRO_SessionInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 state = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_state(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 flags = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 ulDeviceError = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_uldeviceerror(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PRO_SessionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.PRO_SessionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_state(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulDeviceError = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_uldeviceerror(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uldeviceerror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.PRO_SessionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.PRO_SessionInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PRO_SessionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.PRO_SessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // required uint32 state = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  // required uint32 flags = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  // required uint32 ulDeviceError = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uldeviceerror(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.PRO_SessionInfo)
}

::google::protobuf::uint8* PRO_SessionInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.PRO_SessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // required uint32 state = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  // required uint32 flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flags(), target);
  }

  // required uint32 ulDeviceError = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uldeviceerror(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.PRO_SessionInfo)
  return target;
}

size_t PRO_SessionInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.PRO_SessionInfo)
  size_t total_size = 0;

  if (has_slotid()) {
    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }

  if (has_state()) {
    // required uint32 state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  if (has_flags()) {
    // required uint32 flags = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  if (has_uldeviceerror()) {
    // required uint32 ulDeviceError = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldeviceerror());
  }

  return total_size;
}
size_t PRO_SessionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.PRO_SessionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());

    // required uint32 state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());

    // required uint32 flags = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());

    // required uint32 ulDeviceError = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldeviceerror());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PRO_SessionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.PRO_SessionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PRO_SessionInfo* source =
      ::google::protobuf::DynamicCastToGenerated<PRO_SessionInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.PRO_SessionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.PRO_SessionInfo)
    MergeFrom(*source);
  }
}

void PRO_SessionInfo::MergeFrom(const PRO_SessionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.PRO_SessionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      slotid_ = from.slotid_;
    }
    if (cached_has_bits & 0x00000002u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000004u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000008u) {
      uldeviceerror_ = from.uldeviceerror_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PRO_SessionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.PRO_SessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRO_SessionInfo::CopyFrom(const PRO_SessionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.PRO_SessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRO_SessionInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void PRO_SessionInfo::Swap(PRO_SessionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRO_SessionInfo::InternalSwap(PRO_SessionInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(slotid_, other->slotid_);
  swap(state_, other->state_);
  swap(flags_, other->flags_);
  swap(uldeviceerror_, other->uldeviceerror_);
}

::google::protobuf::Metadata PRO_SessionInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PRO_ipparam::InitAsDefaultInstance() {
}
class PRO_ipparam::HasBitSetters {
 public:
  static void set_has_ip(PRO_ipparam* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_owayport(PRO_ipparam* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_twayport(PRO_ipparam* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRO_ipparam::kIpFieldNumber;
const int PRO_ipparam::kOWayPortFieldNumber;
const int PRO_ipparam::kTWayPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRO_ipparam::PRO_ipparam()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.PRO_ipparam)
}
PRO_ipparam::PRO_ipparam(const PRO_ipparam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&owayport_, &from.owayport_,
    static_cast<size_t>(reinterpret_cast<char*>(&twayport_) -
    reinterpret_cast<char*>(&owayport_)) + sizeof(twayport_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.PRO_ipparam)
}

void PRO_ipparam::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PRO_ipparam_pkcs11_2eproto.base);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&owayport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&twayport_) -
      reinterpret_cast<char*>(&owayport_)) + sizeof(twayport_));
}

PRO_ipparam::~PRO_ipparam() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.PRO_ipparam)
  SharedDtor();
}

void PRO_ipparam::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PRO_ipparam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PRO_ipparam& PRO_ipparam::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PRO_ipparam_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void PRO_ipparam::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.PRO_ipparam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ip_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&owayport_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&twayport_) -
        reinterpret_cast<char*>(&owayport_)) + sizeof(twayport_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PRO_ipparam::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PRO_ipparam*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required bytes ip = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ip();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 oWayPort = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_owayport(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 tWayPort = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_twayport(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PRO_ipparam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.PRO_ipparam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 oWayPort = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_owayport(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owayport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 tWayPort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_twayport(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &twayport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.PRO_ipparam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.PRO_ipparam)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PRO_ipparam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.PRO_ipparam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ip(), output);
  }

  // required uint32 oWayPort = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owayport(), output);
  }

  // required uint32 tWayPort = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->twayport(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.PRO_ipparam)
}

::google::protobuf::uint8* PRO_ipparam::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.PRO_ipparam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ip(), target);
  }

  // required uint32 oWayPort = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owayport(), target);
  }

  // required uint32 tWayPort = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->twayport(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.PRO_ipparam)
  return target;
}

size_t PRO_ipparam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.PRO_ipparam)
  size_t total_size = 0;

  if (has_ip()) {
    // required bytes ip = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  if (has_owayport()) {
    // required uint32 oWayPort = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->owayport());
  }

  if (has_twayport()) {
    // required uint32 tWayPort = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->twayport());
  }

  return total_size;
}
size_t PRO_ipparam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.PRO_ipparam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes ip = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());

    // required uint32 oWayPort = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->owayport());

    // required uint32 tWayPort = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->twayport());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PRO_ipparam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.PRO_ipparam)
  GOOGLE_DCHECK_NE(&from, this);
  const PRO_ipparam* source =
      ::google::protobuf::DynamicCastToGenerated<PRO_ipparam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.PRO_ipparam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.PRO_ipparam)
    MergeFrom(*source);
  }
}

void PRO_ipparam::MergeFrom(const PRO_ipparam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.PRO_ipparam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      owayport_ = from.owayport_;
    }
    if (cached_has_bits & 0x00000004u) {
      twayport_ = from.twayport_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PRO_ipparam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.PRO_ipparam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRO_ipparam::CopyFrom(const PRO_ipparam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.PRO_ipparam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRO_ipparam::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void PRO_ipparam::Swap(PRO_ipparam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRO_ipparam::InternalSwap(PRO_ipparam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(owayport_, other->owayport_);
  swap(twayport_, other->twayport_);
}

::google::protobuf::Metadata PRO_ipparam::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Initialize::InitAsDefaultInstance() {
}
class Req_C_Initialize::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Initialize::Req_C_Initialize()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Initialize)
}
Req_C_Initialize::Req_C_Initialize(const Req_C_Initialize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Initialize)
}

void Req_C_Initialize::SharedCtor() {
}

Req_C_Initialize::~Req_C_Initialize() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Initialize)
  SharedDtor();
}

void Req_C_Initialize::SharedDtor() {
}

void Req_C_Initialize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Initialize& Req_C_Initialize::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Initialize_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Initialize::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Initialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Initialize::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Initialize*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Initialize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Initialize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Initialize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Initialize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Initialize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Initialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Initialize)
}

::google::protobuf::uint8* Req_C_Initialize::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Initialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Initialize)
  return target;
}

size_t Req_C_Initialize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Initialize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Initialize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Initialize)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Initialize* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Initialize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Initialize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Initialize)
    MergeFrom(*source);
  }
}

void Req_C_Initialize::MergeFrom(const Req_C_Initialize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Initialize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Req_C_Initialize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Initialize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Initialize::CopyFrom(const Req_C_Initialize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Initialize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Initialize::IsInitialized() const {
  return true;
}

void Req_C_Initialize::Swap(Req_C_Initialize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Initialize::InternalSwap(Req_C_Initialize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Req_C_Initialize::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Initialize::InitAsDefaultInstance() {
}
class Rsp_C_Initialize::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Initialize::Rsp_C_Initialize()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Initialize)
}
Rsp_C_Initialize::Rsp_C_Initialize(const Rsp_C_Initialize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Initialize)
}

void Rsp_C_Initialize::SharedCtor() {
}

Rsp_C_Initialize::~Rsp_C_Initialize() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Initialize)
  SharedDtor();
}

void Rsp_C_Initialize::SharedDtor() {
}

void Rsp_C_Initialize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Initialize& Rsp_C_Initialize::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Initialize_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Initialize::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Initialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Initialize::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Initialize*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Initialize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Initialize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Initialize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Initialize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Initialize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Initialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Initialize)
}

::google::protobuf::uint8* Rsp_C_Initialize::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Initialize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Initialize)
  return target;
}

size_t Rsp_C_Initialize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Initialize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Initialize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Initialize)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Initialize* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Initialize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Initialize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Initialize)
    MergeFrom(*source);
  }
}

void Rsp_C_Initialize::MergeFrom(const Rsp_C_Initialize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Initialize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Initialize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Initialize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Initialize::CopyFrom(const Rsp_C_Initialize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Initialize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Initialize::IsInitialized() const {
  return true;
}

void Rsp_C_Initialize::Swap(Rsp_C_Initialize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Initialize::InternalSwap(Rsp_C_Initialize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Initialize::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Finalize::InitAsDefaultInstance() {
}
class Req_C_Finalize::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Finalize::Req_C_Finalize()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Finalize)
}
Req_C_Finalize::Req_C_Finalize(const Req_C_Finalize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Finalize)
}

void Req_C_Finalize::SharedCtor() {
}

Req_C_Finalize::~Req_C_Finalize() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Finalize)
  SharedDtor();
}

void Req_C_Finalize::SharedDtor() {
}

void Req_C_Finalize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Finalize& Req_C_Finalize::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Finalize_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Finalize::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Finalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Finalize::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Finalize*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Finalize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Finalize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Finalize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Finalize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Finalize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Finalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Finalize)
}

::google::protobuf::uint8* Req_C_Finalize::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Finalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Finalize)
  return target;
}

size_t Req_C_Finalize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Finalize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Finalize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Finalize)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Finalize* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Finalize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Finalize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Finalize)
    MergeFrom(*source);
  }
}

void Req_C_Finalize::MergeFrom(const Req_C_Finalize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Finalize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Req_C_Finalize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Finalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Finalize::CopyFrom(const Req_C_Finalize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Finalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Finalize::IsInitialized() const {
  return true;
}

void Req_C_Finalize::Swap(Req_C_Finalize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Finalize::InternalSwap(Req_C_Finalize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Req_C_Finalize::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Finalize::InitAsDefaultInstance() {
}
class Rsp_C_Finalize::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Finalize::Rsp_C_Finalize()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Finalize)
}
Rsp_C_Finalize::Rsp_C_Finalize(const Rsp_C_Finalize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Finalize)
}

void Rsp_C_Finalize::SharedCtor() {
}

Rsp_C_Finalize::~Rsp_C_Finalize() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Finalize)
  SharedDtor();
}

void Rsp_C_Finalize::SharedDtor() {
}

void Rsp_C_Finalize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Finalize& Rsp_C_Finalize::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Finalize_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Finalize::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Finalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Finalize::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Finalize*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Finalize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Finalize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Finalize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Finalize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Finalize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Finalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Finalize)
}

::google::protobuf::uint8* Rsp_C_Finalize::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Finalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Finalize)
  return target;
}

size_t Rsp_C_Finalize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Finalize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Finalize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Finalize)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Finalize* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Finalize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Finalize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Finalize)
    MergeFrom(*source);
  }
}

void Rsp_C_Finalize::MergeFrom(const Rsp_C_Finalize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Finalize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Finalize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Finalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Finalize::CopyFrom(const Rsp_C_Finalize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Finalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Finalize::IsInitialized() const {
  return true;
}

void Rsp_C_Finalize::Swap(Rsp_C_Finalize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Finalize::InternalSwap(Rsp_C_Finalize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Finalize::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GetInfo::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_GetInfo_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::com::weston::pkcs11::PRO_CK_INFO*>(
      ::com::weston::pkcs11::PRO_CK_INFO::internal_default_instance());
}
class Req_C_GetInfo::HasBitSetters {
 public:
  static const ::com::weston::pkcs11::PRO_CK_INFO& pinfo(const Req_C_GetInfo* msg);
  static void set_has_pinfo(Req_C_GetInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::weston::pkcs11::PRO_CK_INFO&
Req_C_GetInfo::HasBitSetters::pinfo(const Req_C_GetInfo* msg) {
  return *msg->pinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GetInfo::kPInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GetInfo::Req_C_GetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GetInfo)
}
Req_C_GetInfo::Req_C_GetInfo(const Req_C_GetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::com::weston::pkcs11::PRO_CK_INFO(*from.pinfo_);
  } else {
    pinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GetInfo)
}

void Req_C_GetInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_GetInfo_pkcs11_2eproto.base);
  pinfo_ = nullptr;
}

Req_C_GetInfo::~Req_C_GetInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GetInfo)
  SharedDtor();
}

void Req_C_GetInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void Req_C_GetInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GetInfo& Req_C_GetInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GetInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != nullptr);
    pinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GetInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GetInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .com.weston.pkcs11.PRO_CK_INFO pInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_CK_INFO::_InternalParse;
        object = msg->mutable_pinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GetInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.weston.pkcs11.PRO_CK_INFO pInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GetInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.weston.pkcs11.PRO_CK_INFO pInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GetInfo)
}

::google::protobuf::uint8* Req_C_GetInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.weston.pkcs11.PRO_CK_INFO pInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GetInfo)
  return target;
}

size_t Req_C_GetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GetInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_CK_INFO pInfo = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GetInfo* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GetInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GetInfo)
    MergeFrom(*source);
  }
}

void Req_C_GetInfo::MergeFrom(const Req_C_GetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pinfo()) {
    mutable_pinfo()->::com::weston::pkcs11::PRO_CK_INFO::MergeFrom(from.pinfo());
  }
}

void Req_C_GetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GetInfo::CopyFrom(const Req_C_GetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GetInfo::IsInitialized() const {
  if (has_pinfo()) {
    if (!this->pinfo_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_GetInfo::Swap(Req_C_GetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GetInfo::InternalSwap(Req_C_GetInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pinfo_, other->pinfo_);
}

::google::protobuf::Metadata Req_C_GetInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GetInfo::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Rsp_C_GetInfo_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::com::weston::pkcs11::PRO_CK_INFO*>(
      ::com::weston::pkcs11::PRO_CK_INFO::internal_default_instance());
}
class Rsp_C_GetInfo::HasBitSetters {
 public:
  static const ::com::weston::pkcs11::PRO_CK_INFO& pinfo(const Rsp_C_GetInfo* msg);
  static void set_has_pinfo(Rsp_C_GetInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::weston::pkcs11::PRO_CK_INFO&
Rsp_C_GetInfo::HasBitSetters::pinfo(const Rsp_C_GetInfo* msg) {
  return *msg->pinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GetInfo::kPInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GetInfo::Rsp_C_GetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GetInfo)
}
Rsp_C_GetInfo::Rsp_C_GetInfo(const Rsp_C_GetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::com::weston::pkcs11::PRO_CK_INFO(*from.pinfo_);
  } else {
    pinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GetInfo)
}

void Rsp_C_GetInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_GetInfo_pkcs11_2eproto.base);
  pinfo_ = nullptr;
}

Rsp_C_GetInfo::~Rsp_C_GetInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GetInfo)
  SharedDtor();
}

void Rsp_C_GetInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void Rsp_C_GetInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GetInfo& Rsp_C_GetInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GetInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != nullptr);
    pinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GetInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GetInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .com.weston.pkcs11.PRO_CK_INFO pInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_CK_INFO::_InternalParse;
        object = msg->mutable_pinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GetInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.weston.pkcs11.PRO_CK_INFO pInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GetInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.weston.pkcs11.PRO_CK_INFO pInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GetInfo)
}

::google::protobuf::uint8* Rsp_C_GetInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.weston.pkcs11.PRO_CK_INFO pInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GetInfo)
  return target;
}

size_t Rsp_C_GetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GetInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_CK_INFO pInfo = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GetInfo* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GetInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GetInfo)
    MergeFrom(*source);
  }
}

void Rsp_C_GetInfo::MergeFrom(const Rsp_C_GetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pinfo()) {
    mutable_pinfo()->::com::weston::pkcs11::PRO_CK_INFO::MergeFrom(from.pinfo());
  }
}

void Rsp_C_GetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GetInfo::CopyFrom(const Rsp_C_GetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GetInfo::IsInitialized() const {
  if (has_pinfo()) {
    if (!this->pinfo_->IsInitialized()) return false;
  }
  return true;
}

void Rsp_C_GetInfo::Swap(Rsp_C_GetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GetInfo::InternalSwap(Rsp_C_GetInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pinfo_, other->pinfo_);
}

::google::protobuf::Metadata Rsp_C_GetInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GetFunctionList::InitAsDefaultInstance() {
}
class Req_C_GetFunctionList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GetFunctionList::Req_C_GetFunctionList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GetFunctionList)
}
Req_C_GetFunctionList::Req_C_GetFunctionList(const Req_C_GetFunctionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GetFunctionList)
}

void Req_C_GetFunctionList::SharedCtor() {
}

Req_C_GetFunctionList::~Req_C_GetFunctionList() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GetFunctionList)
  SharedDtor();
}

void Req_C_GetFunctionList::SharedDtor() {
}

void Req_C_GetFunctionList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GetFunctionList& Req_C_GetFunctionList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GetFunctionList_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GetFunctionList::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GetFunctionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GetFunctionList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GetFunctionList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GetFunctionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GetFunctionList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GetFunctionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GetFunctionList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GetFunctionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GetFunctionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GetFunctionList)
}

::google::protobuf::uint8* Req_C_GetFunctionList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GetFunctionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GetFunctionList)
  return target;
}

size_t Req_C_GetFunctionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GetFunctionList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GetFunctionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GetFunctionList)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GetFunctionList* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GetFunctionList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GetFunctionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GetFunctionList)
    MergeFrom(*source);
  }
}

void Req_C_GetFunctionList::MergeFrom(const Req_C_GetFunctionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GetFunctionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Req_C_GetFunctionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GetFunctionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GetFunctionList::CopyFrom(const Req_C_GetFunctionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GetFunctionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GetFunctionList::IsInitialized() const {
  return true;
}

void Req_C_GetFunctionList::Swap(Req_C_GetFunctionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GetFunctionList::InternalSwap(Req_C_GetFunctionList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Req_C_GetFunctionList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GetFunctionList::InitAsDefaultInstance() {
}
class Rsp_C_GetFunctionList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GetFunctionList::Rsp_C_GetFunctionList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GetFunctionList)
}
Rsp_C_GetFunctionList::Rsp_C_GetFunctionList(const Rsp_C_GetFunctionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GetFunctionList)
}

void Rsp_C_GetFunctionList::SharedCtor() {
}

Rsp_C_GetFunctionList::~Rsp_C_GetFunctionList() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GetFunctionList)
  SharedDtor();
}

void Rsp_C_GetFunctionList::SharedDtor() {
}

void Rsp_C_GetFunctionList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GetFunctionList& Rsp_C_GetFunctionList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GetFunctionList_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GetFunctionList::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GetFunctionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GetFunctionList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GetFunctionList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GetFunctionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GetFunctionList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GetFunctionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GetFunctionList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GetFunctionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GetFunctionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GetFunctionList)
}

::google::protobuf::uint8* Rsp_C_GetFunctionList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GetFunctionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GetFunctionList)
  return target;
}

size_t Rsp_C_GetFunctionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GetFunctionList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GetFunctionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GetFunctionList)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GetFunctionList* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GetFunctionList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GetFunctionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GetFunctionList)
    MergeFrom(*source);
  }
}

void Rsp_C_GetFunctionList::MergeFrom(const Rsp_C_GetFunctionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GetFunctionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_GetFunctionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GetFunctionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GetFunctionList::CopyFrom(const Rsp_C_GetFunctionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GetFunctionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GetFunctionList::IsInitialized() const {
  return true;
}

void Rsp_C_GetFunctionList::Swap(Rsp_C_GetFunctionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GetFunctionList::InternalSwap(Rsp_C_GetFunctionList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_GetFunctionList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GetSlotList::InitAsDefaultInstance() {
}
class Req_C_GetSlotList::HasBitSetters {
 public:
  static void set_has_tokenprespent(Req_C_GetSlotList* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulcount(Req_C_GetSlotList* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GetSlotList::kTokenPrespentFieldNumber;
const int Req_C_GetSlotList::kPSlotListFieldNumber;
const int Req_C_GetSlotList::kPulCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GetSlotList::Req_C_GetSlotList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GetSlotList)
}
Req_C_GetSlotList::Req_C_GetSlotList(const Req_C_GetSlotList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      pslotlist_(from.pslotlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tokenprespent_, &from.tokenprespent_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulcount_) -
    reinterpret_cast<char*>(&tokenprespent_)) + sizeof(pulcount_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GetSlotList)
}

void Req_C_GetSlotList::SharedCtor() {
  ::memset(&tokenprespent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulcount_) -
      reinterpret_cast<char*>(&tokenprespent_)) + sizeof(pulcount_));
}

Req_C_GetSlotList::~Req_C_GetSlotList() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GetSlotList)
  SharedDtor();
}

void Req_C_GetSlotList::SharedDtor() {
}

void Req_C_GetSlotList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GetSlotList& Req_C_GetSlotList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GetSlotList_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GetSlotList::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GetSlotList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pslotlist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&tokenprespent_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulcount_) -
        reinterpret_cast<char*>(&tokenprespent_)) + sizeof(pulcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GetSlotList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GetSlotList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 tokenPrespent = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_tokenprespent(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 pSlotList = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_pslotlist(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_pslotlist();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 pulCount = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_pulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GetSlotList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GetSlotList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tokenPrespent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_tokenprespent(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tokenprespent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 pSlotList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_pslotlist())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pslotlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_pulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GetSlotList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GetSlotList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GetSlotList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GetSlotList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 tokenPrespent = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tokenprespent(), output);
  }

  // repeated uint32 pSlotList = 2;
  for (int i = 0, n = this->pslotlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->pslotlist(i), output);
  }

  // optional uint32 pulCount = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GetSlotList)
}

::google::protobuf::uint8* Req_C_GetSlotList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GetSlotList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 tokenPrespent = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tokenprespent(), target);
  }

  // repeated uint32 pSlotList = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->pslotlist_, target);

  // optional uint32 pulCount = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GetSlotList)
  return target;
}

size_t Req_C_GetSlotList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GetSlotList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 tokenPrespent = 1;
  if (has_tokenprespent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tokenprespent());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 pSlotList = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->pslotlist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->pslotlist_size());
    total_size += data_size;
  }

  // optional uint32 pulCount = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GetSlotList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GetSlotList)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GetSlotList* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GetSlotList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GetSlotList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GetSlotList)
    MergeFrom(*source);
  }
}

void Req_C_GetSlotList::MergeFrom(const Req_C_GetSlotList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GetSlotList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pslotlist_.MergeFrom(from.pslotlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      tokenprespent_ = from.tokenprespent_;
    }
    if (cached_has_bits & 0x00000002u) {
      pulcount_ = from.pulcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_GetSlotList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GetSlotList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GetSlotList::CopyFrom(const Req_C_GetSlotList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GetSlotList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GetSlotList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_GetSlotList::Swap(Req_C_GetSlotList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GetSlotList::InternalSwap(Req_C_GetSlotList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pslotlist_.InternalSwap(&other->pslotlist_);
  swap(tokenprespent_, other->tokenprespent_);
  swap(pulcount_, other->pulcount_);
}

::google::protobuf::Metadata Req_C_GetSlotList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GetSlotList::InitAsDefaultInstance() {
}
class Rsp_C_GetSlotList::HasBitSetters {
 public:
  static void set_has_pulcount(Rsp_C_GetSlotList* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GetSlotList::kPSlotListFieldNumber;
const int Rsp_C_GetSlotList::kPulCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GetSlotList::Rsp_C_GetSlotList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GetSlotList)
}
Rsp_C_GetSlotList::Rsp_C_GetSlotList(const Rsp_C_GetSlotList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      pslotlist_(from.pslotlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pulcount_ = from.pulcount_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GetSlotList)
}

void Rsp_C_GetSlotList::SharedCtor() {
  pulcount_ = 0u;
}

Rsp_C_GetSlotList::~Rsp_C_GetSlotList() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GetSlotList)
  SharedDtor();
}

void Rsp_C_GetSlotList::SharedDtor() {
}

void Rsp_C_GetSlotList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GetSlotList& Rsp_C_GetSlotList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GetSlotList_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GetSlotList::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GetSlotList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pslotlist_.Clear();
  pulcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GetSlotList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GetSlotList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 pSlotList = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_pslotlist(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_pslotlist();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 pulCount = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GetSlotList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GetSlotList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 pSlotList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_pslotlist())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pslotlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GetSlotList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GetSlotList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GetSlotList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GetSlotList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 pSlotList = 1;
  for (int i = 0, n = this->pslotlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->pslotlist(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 pulCount = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GetSlotList)
}

::google::protobuf::uint8* Rsp_C_GetSlotList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GetSlotList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 pSlotList = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->pslotlist_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 pulCount = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GetSlotList)
  return target;
}

size_t Rsp_C_GetSlotList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GetSlotList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 pSlotList = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->pslotlist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->pslotlist_size());
    total_size += data_size;
  }

  // optional uint32 pulCount = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GetSlotList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GetSlotList)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GetSlotList* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GetSlotList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GetSlotList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GetSlotList)
    MergeFrom(*source);
  }
}

void Rsp_C_GetSlotList::MergeFrom(const Rsp_C_GetSlotList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GetSlotList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pslotlist_.MergeFrom(from.pslotlist_);
  if (from.has_pulcount()) {
    set_pulcount(from.pulcount());
  }
}

void Rsp_C_GetSlotList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GetSlotList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GetSlotList::CopyFrom(const Rsp_C_GetSlotList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GetSlotList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GetSlotList::IsInitialized() const {
  return true;
}

void Rsp_C_GetSlotList::Swap(Rsp_C_GetSlotList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GetSlotList::InternalSwap(Rsp_C_GetSlotList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pslotlist_.InternalSwap(&other->pslotlist_);
  swap(pulcount_, other->pulcount_);
}

::google::protobuf::Metadata Rsp_C_GetSlotList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GetSlotInfo::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_GetSlotInfo_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::com::weston::pkcs11::PRO_CK_SLOT_INFO*>(
      ::com::weston::pkcs11::PRO_CK_SLOT_INFO::internal_default_instance());
}
class Req_C_GetSlotInfo::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_GetSlotInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_CK_SLOT_INFO& pinfo(const Req_C_GetSlotInfo* msg);
  static void set_has_pinfo(Req_C_GetSlotInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::weston::pkcs11::PRO_CK_SLOT_INFO&
Req_C_GetSlotInfo::HasBitSetters::pinfo(const Req_C_GetSlotInfo* msg) {
  return *msg->pinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GetSlotInfo::kSlotIDFieldNumber;
const int Req_C_GetSlotInfo::kPInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GetSlotInfo::Req_C_GetSlotInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GetSlotInfo)
}
Req_C_GetSlotInfo::Req_C_GetSlotInfo(const Req_C_GetSlotInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::com::weston::pkcs11::PRO_CK_SLOT_INFO(*from.pinfo_);
  } else {
    pinfo_ = nullptr;
  }
  slotid_ = from.slotid_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GetSlotInfo)
}

void Req_C_GetSlotInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_GetSlotInfo_pkcs11_2eproto.base);
  ::memset(&pinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slotid_) -
      reinterpret_cast<char*>(&pinfo_)) + sizeof(slotid_));
}

Req_C_GetSlotInfo::~Req_C_GetSlotInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GetSlotInfo)
  SharedDtor();
}

void Req_C_GetSlotInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void Req_C_GetSlotInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GetSlotInfo& Req_C_GetSlotInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GetSlotInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GetSlotInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GetSlotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != nullptr);
    pinfo_->Clear();
  }
  slotid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GetSlotInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GetSlotInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_CK_SLOT_INFO pInfo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_CK_SLOT_INFO::_InternalParse;
        object = msg->mutable_pinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GetSlotInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GetSlotInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_CK_SLOT_INFO pInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GetSlotInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GetSlotInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GetSlotInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GetSlotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // optional .com.weston.pkcs11.PRO_CK_SLOT_INFO pInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GetSlotInfo)
}

::google::protobuf::uint8* Req_C_GetSlotInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GetSlotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // optional .com.weston.pkcs11.PRO_CK_SLOT_INFO pInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GetSlotInfo)
  return target;
}

size_t Req_C_GetSlotInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GetSlotInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 slotID = 1;
  if (has_slotid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_CK_SLOT_INFO pInfo = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GetSlotInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GetSlotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GetSlotInfo* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GetSlotInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GetSlotInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GetSlotInfo)
    MergeFrom(*source);
  }
}

void Req_C_GetSlotInfo::MergeFrom(const Req_C_GetSlotInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GetSlotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pinfo()->::com::weston::pkcs11::PRO_CK_SLOT_INFO::MergeFrom(from.pinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      slotid_ = from.slotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_GetSlotInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GetSlotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GetSlotInfo::CopyFrom(const Req_C_GetSlotInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GetSlotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GetSlotInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_pinfo()) {
    if (!this->pinfo_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_GetSlotInfo::Swap(Req_C_GetSlotInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GetSlotInfo::InternalSwap(Req_C_GetSlotInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pinfo_, other->pinfo_);
  swap(slotid_, other->slotid_);
}

::google::protobuf::Metadata Req_C_GetSlotInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GetSlotInfo::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Rsp_C_GetSlotInfo_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::com::weston::pkcs11::PRO_CK_SLOT_INFO*>(
      ::com::weston::pkcs11::PRO_CK_SLOT_INFO::internal_default_instance());
}
class Rsp_C_GetSlotInfo::HasBitSetters {
 public:
  static const ::com::weston::pkcs11::PRO_CK_SLOT_INFO& pinfo(const Rsp_C_GetSlotInfo* msg);
  static void set_has_pinfo(Rsp_C_GetSlotInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::weston::pkcs11::PRO_CK_SLOT_INFO&
Rsp_C_GetSlotInfo::HasBitSetters::pinfo(const Rsp_C_GetSlotInfo* msg) {
  return *msg->pinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GetSlotInfo::kPInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GetSlotInfo::Rsp_C_GetSlotInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GetSlotInfo)
}
Rsp_C_GetSlotInfo::Rsp_C_GetSlotInfo(const Rsp_C_GetSlotInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::com::weston::pkcs11::PRO_CK_SLOT_INFO(*from.pinfo_);
  } else {
    pinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GetSlotInfo)
}

void Rsp_C_GetSlotInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_GetSlotInfo_pkcs11_2eproto.base);
  pinfo_ = nullptr;
}

Rsp_C_GetSlotInfo::~Rsp_C_GetSlotInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  SharedDtor();
}

void Rsp_C_GetSlotInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void Rsp_C_GetSlotInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GetSlotInfo& Rsp_C_GetSlotInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GetSlotInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GetSlotInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != nullptr);
    pinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GetSlotInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GetSlotInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .com.weston.pkcs11.PRO_CK_SLOT_INFO pInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_CK_SLOT_INFO::_InternalParse;
        object = msg->mutable_pinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GetSlotInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.weston.pkcs11.PRO_CK_SLOT_INFO pInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GetSlotInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.weston.pkcs11.PRO_CK_SLOT_INFO pInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GetSlotInfo)
}

::google::protobuf::uint8* Rsp_C_GetSlotInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.weston.pkcs11.PRO_CK_SLOT_INFO pInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  return target;
}

size_t Rsp_C_GetSlotInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_CK_SLOT_INFO pInfo = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GetSlotInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GetSlotInfo* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GetSlotInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GetSlotInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GetSlotInfo)
    MergeFrom(*source);
  }
}

void Rsp_C_GetSlotInfo::MergeFrom(const Rsp_C_GetSlotInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pinfo()) {
    mutable_pinfo()->::com::weston::pkcs11::PRO_CK_SLOT_INFO::MergeFrom(from.pinfo());
  }
}

void Rsp_C_GetSlotInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GetSlotInfo::CopyFrom(const Rsp_C_GetSlotInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GetSlotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GetSlotInfo::IsInitialized() const {
  if (has_pinfo()) {
    if (!this->pinfo_->IsInitialized()) return false;
  }
  return true;
}

void Rsp_C_GetSlotInfo::Swap(Rsp_C_GetSlotInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GetSlotInfo::InternalSwap(Rsp_C_GetSlotInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pinfo_, other->pinfo_);
}

::google::protobuf::Metadata Rsp_C_GetSlotInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GetTokenInfo::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_GetTokenInfo_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::com::weston::pkcs11::PRO_TokenInfo*>(
      ::com::weston::pkcs11::PRO_TokenInfo::internal_default_instance());
}
class Req_C_GetTokenInfo::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_GetTokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_TokenInfo& pinfo(const Req_C_GetTokenInfo* msg);
  static void set_has_pinfo(Req_C_GetTokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::weston::pkcs11::PRO_TokenInfo&
Req_C_GetTokenInfo::HasBitSetters::pinfo(const Req_C_GetTokenInfo* msg) {
  return *msg->pinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GetTokenInfo::kSlotIDFieldNumber;
const int Req_C_GetTokenInfo::kPInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GetTokenInfo::Req_C_GetTokenInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GetTokenInfo)
}
Req_C_GetTokenInfo::Req_C_GetTokenInfo(const Req_C_GetTokenInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::com::weston::pkcs11::PRO_TokenInfo(*from.pinfo_);
  } else {
    pinfo_ = nullptr;
  }
  slotid_ = from.slotid_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GetTokenInfo)
}

void Req_C_GetTokenInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_GetTokenInfo_pkcs11_2eproto.base);
  ::memset(&pinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slotid_) -
      reinterpret_cast<char*>(&pinfo_)) + sizeof(slotid_));
}

Req_C_GetTokenInfo::~Req_C_GetTokenInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GetTokenInfo)
  SharedDtor();
}

void Req_C_GetTokenInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void Req_C_GetTokenInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GetTokenInfo& Req_C_GetTokenInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GetTokenInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GetTokenInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GetTokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != nullptr);
    pinfo_->Clear();
  }
  slotid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GetTokenInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GetTokenInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_TokenInfo pInfo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_TokenInfo::_InternalParse;
        object = msg->mutable_pinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GetTokenInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GetTokenInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_TokenInfo pInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GetTokenInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GetTokenInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GetTokenInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GetTokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // optional .com.weston.pkcs11.PRO_TokenInfo pInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GetTokenInfo)
}

::google::protobuf::uint8* Req_C_GetTokenInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GetTokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // optional .com.weston.pkcs11.PRO_TokenInfo pInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GetTokenInfo)
  return target;
}

size_t Req_C_GetTokenInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GetTokenInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 slotID = 1;
  if (has_slotid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_TokenInfo pInfo = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GetTokenInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GetTokenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GetTokenInfo* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GetTokenInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GetTokenInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GetTokenInfo)
    MergeFrom(*source);
  }
}

void Req_C_GetTokenInfo::MergeFrom(const Req_C_GetTokenInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GetTokenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pinfo()->::com::weston::pkcs11::PRO_TokenInfo::MergeFrom(from.pinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      slotid_ = from.slotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_GetTokenInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GetTokenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GetTokenInfo::CopyFrom(const Req_C_GetTokenInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GetTokenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GetTokenInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_pinfo()) {
    if (!this->pinfo_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_GetTokenInfo::Swap(Req_C_GetTokenInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GetTokenInfo::InternalSwap(Req_C_GetTokenInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pinfo_, other->pinfo_);
  swap(slotid_, other->slotid_);
}

::google::protobuf::Metadata Req_C_GetTokenInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GetTokenInfo::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Rsp_C_GetTokenInfo_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::com::weston::pkcs11::PRO_TokenInfo*>(
      ::com::weston::pkcs11::PRO_TokenInfo::internal_default_instance());
}
class Rsp_C_GetTokenInfo::HasBitSetters {
 public:
  static const ::com::weston::pkcs11::PRO_TokenInfo& pinfo(const Rsp_C_GetTokenInfo* msg);
  static void set_has_pinfo(Rsp_C_GetTokenInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::weston::pkcs11::PRO_TokenInfo&
Rsp_C_GetTokenInfo::HasBitSetters::pinfo(const Rsp_C_GetTokenInfo* msg) {
  return *msg->pinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GetTokenInfo::kPInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GetTokenInfo::Rsp_C_GetTokenInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GetTokenInfo)
}
Rsp_C_GetTokenInfo::Rsp_C_GetTokenInfo(const Rsp_C_GetTokenInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::com::weston::pkcs11::PRO_TokenInfo(*from.pinfo_);
  } else {
    pinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GetTokenInfo)
}

void Rsp_C_GetTokenInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_GetTokenInfo_pkcs11_2eproto.base);
  pinfo_ = nullptr;
}

Rsp_C_GetTokenInfo::~Rsp_C_GetTokenInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  SharedDtor();
}

void Rsp_C_GetTokenInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void Rsp_C_GetTokenInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GetTokenInfo& Rsp_C_GetTokenInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GetTokenInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GetTokenInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != nullptr);
    pinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GetTokenInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GetTokenInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .com.weston.pkcs11.PRO_TokenInfo pInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_TokenInfo::_InternalParse;
        object = msg->mutable_pinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GetTokenInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.weston.pkcs11.PRO_TokenInfo pInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GetTokenInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.weston.pkcs11.PRO_TokenInfo pInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GetTokenInfo)
}

::google::protobuf::uint8* Rsp_C_GetTokenInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.weston.pkcs11.PRO_TokenInfo pInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  return target;
}

size_t Rsp_C_GetTokenInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_TokenInfo pInfo = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GetTokenInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GetTokenInfo* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GetTokenInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GetTokenInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GetTokenInfo)
    MergeFrom(*source);
  }
}

void Rsp_C_GetTokenInfo::MergeFrom(const Rsp_C_GetTokenInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pinfo()) {
    mutable_pinfo()->::com::weston::pkcs11::PRO_TokenInfo::MergeFrom(from.pinfo());
  }
}

void Rsp_C_GetTokenInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GetTokenInfo::CopyFrom(const Rsp_C_GetTokenInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GetTokenInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GetTokenInfo::IsInitialized() const {
  if (has_pinfo()) {
    if (!this->pinfo_->IsInitialized()) return false;
  }
  return true;
}

void Rsp_C_GetTokenInfo::Swap(Rsp_C_GetTokenInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GetTokenInfo::InternalSwap(Rsp_C_GetTokenInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pinfo_, other->pinfo_);
}

::google::protobuf::Metadata Rsp_C_GetTokenInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GetMechanismList::InitAsDefaultInstance() {
}
class Req_C_GetMechanismList::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_GetMechanismList* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulcount(Req_C_GetMechanismList* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GetMechanismList::kSlotIDFieldNumber;
const int Req_C_GetMechanismList::kPMechanismListFieldNumber;
const int Req_C_GetMechanismList::kPulCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GetMechanismList::Req_C_GetMechanismList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GetMechanismList)
}
Req_C_GetMechanismList::Req_C_GetMechanismList(const Req_C_GetMechanismList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      pmechanismlist_(from.pmechanismlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slotid_, &from.slotid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulcount_) -
    reinterpret_cast<char*>(&slotid_)) + sizeof(pulcount_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GetMechanismList)
}

void Req_C_GetMechanismList::SharedCtor() {
  ::memset(&slotid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulcount_) -
      reinterpret_cast<char*>(&slotid_)) + sizeof(pulcount_));
}

Req_C_GetMechanismList::~Req_C_GetMechanismList() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GetMechanismList)
  SharedDtor();
}

void Req_C_GetMechanismList::SharedDtor() {
}

void Req_C_GetMechanismList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GetMechanismList& Req_C_GetMechanismList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GetMechanismList_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GetMechanismList::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GetMechanismList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pmechanismlist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&slotid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulcount_) -
        reinterpret_cast<char*>(&slotid_)) + sizeof(pulcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GetMechanismList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GetMechanismList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 pMechanismList = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_pmechanismlist(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_pmechanismlist();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 pulCount = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_pulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GetMechanismList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GetMechanismList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 pMechanismList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_pmechanismlist())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pmechanismlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_pulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GetMechanismList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GetMechanismList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GetMechanismList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GetMechanismList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // repeated uint32 pMechanismList = 2;
  for (int i = 0, n = this->pmechanismlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->pmechanismlist(i), output);
  }

  // optional uint32 pulCount = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GetMechanismList)
}

::google::protobuf::uint8* Req_C_GetMechanismList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GetMechanismList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // repeated uint32 pMechanismList = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->pmechanismlist_, target);

  // optional uint32 pulCount = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GetMechanismList)
  return target;
}

size_t Req_C_GetMechanismList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GetMechanismList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 slotID = 1;
  if (has_slotid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 pMechanismList = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->pmechanismlist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->pmechanismlist_size());
    total_size += data_size;
  }

  // optional uint32 pulCount = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GetMechanismList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GetMechanismList)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GetMechanismList* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GetMechanismList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GetMechanismList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GetMechanismList)
    MergeFrom(*source);
  }
}

void Req_C_GetMechanismList::MergeFrom(const Req_C_GetMechanismList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GetMechanismList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pmechanismlist_.MergeFrom(from.pmechanismlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      slotid_ = from.slotid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pulcount_ = from.pulcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_GetMechanismList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GetMechanismList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GetMechanismList::CopyFrom(const Req_C_GetMechanismList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GetMechanismList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GetMechanismList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_GetMechanismList::Swap(Req_C_GetMechanismList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GetMechanismList::InternalSwap(Req_C_GetMechanismList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pmechanismlist_.InternalSwap(&other->pmechanismlist_);
  swap(slotid_, other->slotid_);
  swap(pulcount_, other->pulcount_);
}

::google::protobuf::Metadata Req_C_GetMechanismList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GetMechanismList::InitAsDefaultInstance() {
}
class Rsp_C_GetMechanismList::HasBitSetters {
 public:
  static void set_has_pulcount(Rsp_C_GetMechanismList* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GetMechanismList::kPMechanismListFieldNumber;
const int Rsp_C_GetMechanismList::kPulCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GetMechanismList::Rsp_C_GetMechanismList()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GetMechanismList)
}
Rsp_C_GetMechanismList::Rsp_C_GetMechanismList(const Rsp_C_GetMechanismList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      pmechanismlist_(from.pmechanismlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pulcount_ = from.pulcount_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GetMechanismList)
}

void Rsp_C_GetMechanismList::SharedCtor() {
  pulcount_ = 0u;
}

Rsp_C_GetMechanismList::~Rsp_C_GetMechanismList() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GetMechanismList)
  SharedDtor();
}

void Rsp_C_GetMechanismList::SharedDtor() {
}

void Rsp_C_GetMechanismList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GetMechanismList& Rsp_C_GetMechanismList::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GetMechanismList_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GetMechanismList::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GetMechanismList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pmechanismlist_.Clear();
  pulcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GetMechanismList::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GetMechanismList*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 pMechanismList = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_pmechanismlist(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_pmechanismlist();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 pulCount = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GetMechanismList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GetMechanismList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 pMechanismList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_pmechanismlist())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_pmechanismlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GetMechanismList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GetMechanismList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GetMechanismList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GetMechanismList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 pMechanismList = 1;
  for (int i = 0, n = this->pmechanismlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->pmechanismlist(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 pulCount = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GetMechanismList)
}

::google::protobuf::uint8* Rsp_C_GetMechanismList::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GetMechanismList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 pMechanismList = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->pmechanismlist_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 pulCount = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GetMechanismList)
  return target;
}

size_t Rsp_C_GetMechanismList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GetMechanismList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 pMechanismList = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->pmechanismlist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->pmechanismlist_size());
    total_size += data_size;
  }

  // optional uint32 pulCount = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GetMechanismList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GetMechanismList)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GetMechanismList* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GetMechanismList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GetMechanismList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GetMechanismList)
    MergeFrom(*source);
  }
}

void Rsp_C_GetMechanismList::MergeFrom(const Rsp_C_GetMechanismList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GetMechanismList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pmechanismlist_.MergeFrom(from.pmechanismlist_);
  if (from.has_pulcount()) {
    set_pulcount(from.pulcount());
  }
}

void Rsp_C_GetMechanismList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GetMechanismList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GetMechanismList::CopyFrom(const Rsp_C_GetMechanismList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GetMechanismList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GetMechanismList::IsInitialized() const {
  return true;
}

void Rsp_C_GetMechanismList::Swap(Rsp_C_GetMechanismList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GetMechanismList::InternalSwap(Rsp_C_GetMechanismList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pmechanismlist_.InternalSwap(&other->pmechanismlist_);
  swap(pulcount_, other->pulcount_);
}

::google::protobuf::Metadata Rsp_C_GetMechanismList::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GetMechanismInfo::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_GetMechanismInfo_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::com::weston::pkcs11::PRO_MechanismInfo*>(
      ::com::weston::pkcs11::PRO_MechanismInfo::internal_default_instance());
}
class Req_C_GetMechanismInfo::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_GetMechanismInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_type(Req_C_GetMechanismInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static const ::com::weston::pkcs11::PRO_MechanismInfo& pinfo(const Req_C_GetMechanismInfo* msg);
  static void set_has_pinfo(Req_C_GetMechanismInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::weston::pkcs11::PRO_MechanismInfo&
Req_C_GetMechanismInfo::HasBitSetters::pinfo(const Req_C_GetMechanismInfo* msg) {
  return *msg->pinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GetMechanismInfo::kSlotIDFieldNumber;
const int Req_C_GetMechanismInfo::kTypeFieldNumber;
const int Req_C_GetMechanismInfo::kPInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GetMechanismInfo::Req_C_GetMechanismInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GetMechanismInfo)
}
Req_C_GetMechanismInfo::Req_C_GetMechanismInfo(const Req_C_GetMechanismInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::com::weston::pkcs11::PRO_MechanismInfo(*from.pinfo_);
  } else {
    pinfo_ = nullptr;
  }
  ::memcpy(&slotid_, &from.slotid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&slotid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GetMechanismInfo)
}

void Req_C_GetMechanismInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_GetMechanismInfo_pkcs11_2eproto.base);
  ::memset(&pinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&pinfo_)) + sizeof(type_));
}

Req_C_GetMechanismInfo::~Req_C_GetMechanismInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GetMechanismInfo)
  SharedDtor();
}

void Req_C_GetMechanismInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void Req_C_GetMechanismInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GetMechanismInfo& Req_C_GetMechanismInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GetMechanismInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GetMechanismInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GetMechanismInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != nullptr);
    pinfo_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&slotid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&slotid_)) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GetMechanismInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GetMechanismInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_MechanismInfo pInfo = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_MechanismInfo::_InternalParse;
        object = msg->mutable_pinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GetMechanismInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GetMechanismInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_type(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_MechanismInfo pInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GetMechanismInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GetMechanismInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GetMechanismInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GetMechanismInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // required uint32 type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // optional .com.weston.pkcs11.PRO_MechanismInfo pInfo = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::pinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GetMechanismInfo)
}

::google::protobuf::uint8* Req_C_GetMechanismInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GetMechanismInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // required uint32 type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // optional .com.weston.pkcs11.PRO_MechanismInfo pInfo = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::pinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GetMechanismInfo)
  return target;
}

size_t Req_C_GetMechanismInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_GetMechanismInfo)
  size_t total_size = 0;

  if (has_slotid()) {
    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }

  if (has_type()) {
    // required uint32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  return total_size;
}
size_t Req_C_GetMechanismInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GetMechanismInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());

    // required uint32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_MechanismInfo pInfo = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GetMechanismInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GetMechanismInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GetMechanismInfo* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GetMechanismInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GetMechanismInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GetMechanismInfo)
    MergeFrom(*source);
  }
}

void Req_C_GetMechanismInfo::MergeFrom(const Req_C_GetMechanismInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GetMechanismInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pinfo()->::com::weston::pkcs11::PRO_MechanismInfo::MergeFrom(from.pinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      slotid_ = from.slotid_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_GetMechanismInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GetMechanismInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GetMechanismInfo::CopyFrom(const Req_C_GetMechanismInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GetMechanismInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GetMechanismInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_pinfo()) {
    if (!this->pinfo_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_GetMechanismInfo::Swap(Req_C_GetMechanismInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GetMechanismInfo::InternalSwap(Req_C_GetMechanismInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pinfo_, other->pinfo_);
  swap(slotid_, other->slotid_);
  swap(type_, other->type_);
}

::google::protobuf::Metadata Req_C_GetMechanismInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GetMechanismInfo::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Rsp_C_GetMechanismInfo_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::com::weston::pkcs11::PRO_MechanismInfo*>(
      ::com::weston::pkcs11::PRO_MechanismInfo::internal_default_instance());
}
class Rsp_C_GetMechanismInfo::HasBitSetters {
 public:
  static const ::com::weston::pkcs11::PRO_MechanismInfo& pinfo(const Rsp_C_GetMechanismInfo* msg);
  static void set_has_pinfo(Rsp_C_GetMechanismInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::weston::pkcs11::PRO_MechanismInfo&
Rsp_C_GetMechanismInfo::HasBitSetters::pinfo(const Rsp_C_GetMechanismInfo* msg) {
  return *msg->pinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GetMechanismInfo::kPInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GetMechanismInfo::Rsp_C_GetMechanismInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
}
Rsp_C_GetMechanismInfo::Rsp_C_GetMechanismInfo(const Rsp_C_GetMechanismInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::com::weston::pkcs11::PRO_MechanismInfo(*from.pinfo_);
  } else {
    pinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
}

void Rsp_C_GetMechanismInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_GetMechanismInfo_pkcs11_2eproto.base);
  pinfo_ = nullptr;
}

Rsp_C_GetMechanismInfo::~Rsp_C_GetMechanismInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  SharedDtor();
}

void Rsp_C_GetMechanismInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void Rsp_C_GetMechanismInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GetMechanismInfo& Rsp_C_GetMechanismInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GetMechanismInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GetMechanismInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != nullptr);
    pinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GetMechanismInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GetMechanismInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .com.weston.pkcs11.PRO_MechanismInfo pInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_MechanismInfo::_InternalParse;
        object = msg->mutable_pinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GetMechanismInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.weston.pkcs11.PRO_MechanismInfo pInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GetMechanismInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.weston.pkcs11.PRO_MechanismInfo pInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
}

::google::protobuf::uint8* Rsp_C_GetMechanismInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.weston.pkcs11.PRO_MechanismInfo pInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  return target;
}

size_t Rsp_C_GetMechanismInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_MechanismInfo pInfo = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GetMechanismInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GetMechanismInfo* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GetMechanismInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
    MergeFrom(*source);
  }
}

void Rsp_C_GetMechanismInfo::MergeFrom(const Rsp_C_GetMechanismInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pinfo()) {
    mutable_pinfo()->::com::weston::pkcs11::PRO_MechanismInfo::MergeFrom(from.pinfo());
  }
}

void Rsp_C_GetMechanismInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GetMechanismInfo::CopyFrom(const Rsp_C_GetMechanismInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GetMechanismInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GetMechanismInfo::IsInitialized() const {
  if (has_pinfo()) {
    if (!this->pinfo_->IsInitialized()) return false;
  }
  return true;
}

void Rsp_C_GetMechanismInfo::Swap(Rsp_C_GetMechanismInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GetMechanismInfo::InternalSwap(Rsp_C_GetMechanismInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pinfo_, other->pinfo_);
}

::google::protobuf::Metadata Rsp_C_GetMechanismInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_InitToken::InitAsDefaultInstance() {
}
class Req_C_InitToken::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_InitToken* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_ppin(Req_C_InitToken* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulpinlen(Req_C_InitToken* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_plabel(Req_C_InitToken* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_InitToken::kSlotIDFieldNumber;
const int Req_C_InitToken::kPPinFieldNumber;
const int Req_C_InitToken::kUlPinLenFieldNumber;
const int Req_C_InitToken::kPLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_InitToken::Req_C_InitToken()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_InitToken)
}
Req_C_InitToken::Req_C_InitToken(const Req_C_InitToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppin()) {
    ppin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppin_);
  }
  plabel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plabel()) {
    plabel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plabel_);
  }
  ::memcpy(&slotid_, &from.slotid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulpinlen_) -
    reinterpret_cast<char*>(&slotid_)) + sizeof(ulpinlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_InitToken)
}

void Req_C_InitToken::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_InitToken_pkcs11_2eproto.base);
  ppin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plabel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&slotid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulpinlen_) -
      reinterpret_cast<char*>(&slotid_)) + sizeof(ulpinlen_));
}

Req_C_InitToken::~Req_C_InitToken() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_InitToken)
  SharedDtor();
}

void Req_C_InitToken::SharedDtor() {
  ppin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plabel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_InitToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_InitToken& Req_C_InitToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_InitToken_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_InitToken::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_InitToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ppin_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      plabel_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&slotid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulpinlen_) -
        reinterpret_cast<char*>(&slotid_)) + sizeof(ulpinlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_InitToken::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_InitToken*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPin = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppin();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulPinLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulpinlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pLabel = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plabel();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_InitToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_InitToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulPinLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulpinlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulpinlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pLabel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plabel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_InitToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_InitToken)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_InitToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_InitToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // optional bytes pPin = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ppin(), output);
  }

  // required uint32 ulPinLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulpinlen(), output);
  }

  // optional bytes pLabel = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->plabel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_InitToken)
}

::google::protobuf::uint8* Req_C_InitToken::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_InitToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // optional bytes pPin = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ppin(), target);
  }

  // required uint32 ulPinLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulpinlen(), target);
  }

  // optional bytes pLabel = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->plabel(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_InitToken)
  return target;
}

size_t Req_C_InitToken::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_InitToken)
  size_t total_size = 0;

  if (has_slotid()) {
    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }

  if (has_ulpinlen()) {
    // required uint32 ulPinLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpinlen());
  }

  return total_size;
}
size_t Req_C_InitToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_InitToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());

    // required uint32 ulPinLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpinlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pPin = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppin());
    }

    // optional bytes pLabel = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->plabel());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_InitToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_InitToken)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_InitToken* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_InitToken>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_InitToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_InitToken)
    MergeFrom(*source);
  }
}

void Req_C_InitToken::MergeFrom(const Req_C_InitToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_InitToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppin_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      plabel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plabel_);
    }
    if (cached_has_bits & 0x00000004u) {
      slotid_ = from.slotid_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulpinlen_ = from.ulpinlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_InitToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_InitToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_InitToken::CopyFrom(const Req_C_InitToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_InitToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_InitToken::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_InitToken::Swap(Req_C_InitToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_InitToken::InternalSwap(Req_C_InitToken* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppin_.Swap(&other->ppin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plabel_.Swap(&other->plabel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(slotid_, other->slotid_);
  swap(ulpinlen_, other->ulpinlen_);
}

::google::protobuf::Metadata Req_C_InitToken::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_InitToken::InitAsDefaultInstance() {
}
class Rsp_C_InitToken::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_InitToken::Rsp_C_InitToken()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_InitToken)
}
Rsp_C_InitToken::Rsp_C_InitToken(const Rsp_C_InitToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_InitToken)
}

void Rsp_C_InitToken::SharedCtor() {
}

Rsp_C_InitToken::~Rsp_C_InitToken() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_InitToken)
  SharedDtor();
}

void Rsp_C_InitToken::SharedDtor() {
}

void Rsp_C_InitToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_InitToken& Rsp_C_InitToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_InitToken_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_InitToken::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_InitToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_InitToken::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_InitToken*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_InitToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_InitToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_InitToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_InitToken)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_InitToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_InitToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_InitToken)
}

::google::protobuf::uint8* Rsp_C_InitToken::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_InitToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_InitToken)
  return target;
}

size_t Rsp_C_InitToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_InitToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_InitToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_InitToken)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_InitToken* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_InitToken>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_InitToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_InitToken)
    MergeFrom(*source);
  }
}

void Rsp_C_InitToken::MergeFrom(const Rsp_C_InitToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_InitToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_InitToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_InitToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_InitToken::CopyFrom(const Rsp_C_InitToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_InitToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_InitToken::IsInitialized() const {
  return true;
}

void Rsp_C_InitToken::Swap(Rsp_C_InitToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_InitToken::InternalSwap(Rsp_C_InitToken* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_InitToken::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_InitPIN::InitAsDefaultInstance() {
}
class Req_C_InitPIN::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_InitPIN* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ppin(Req_C_InitPIN* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulpinlen(Req_C_InitPIN* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_InitPIN::kHSessionFieldNumber;
const int Req_C_InitPIN::kPPinFieldNumber;
const int Req_C_InitPIN::kUlPinLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_InitPIN::Req_C_InitPIN()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_InitPIN)
}
Req_C_InitPIN::Req_C_InitPIN(const Req_C_InitPIN& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppin()) {
    ppin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppin_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulpinlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulpinlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_InitPIN)
}

void Req_C_InitPIN::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_InitPIN_pkcs11_2eproto.base);
  ppin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulpinlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulpinlen_));
}

Req_C_InitPIN::~Req_C_InitPIN() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_InitPIN)
  SharedDtor();
}

void Req_C_InitPIN::SharedDtor() {
  ppin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_InitPIN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_InitPIN& Req_C_InitPIN::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_InitPIN_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_InitPIN::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_InitPIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ppin_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulpinlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulpinlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_InitPIN::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_InitPIN*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPin = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppin();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulPinLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulpinlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_InitPIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_InitPIN)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulPinLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulpinlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulpinlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_InitPIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_InitPIN)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_InitPIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_InitPIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pPin = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ppin(), output);
  }

  // required uint32 ulPinLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulpinlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_InitPIN)
}

::google::protobuf::uint8* Req_C_InitPIN::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_InitPIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pPin = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ppin(), target);
  }

  // required uint32 ulPinLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulpinlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_InitPIN)
  return target;
}

size_t Req_C_InitPIN::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_InitPIN)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulpinlen()) {
    // required uint32 ulPinLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpinlen());
  }

  return total_size;
}
size_t Req_C_InitPIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_InitPIN)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulPinLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpinlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pPin = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ppin());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_InitPIN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_InitPIN)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_InitPIN* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_InitPIN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_InitPIN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_InitPIN)
    MergeFrom(*source);
  }
}

void Req_C_InitPIN::MergeFrom(const Req_C_InitPIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_InitPIN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppin_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulpinlen_ = from.ulpinlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_InitPIN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_InitPIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_InitPIN::CopyFrom(const Req_C_InitPIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_InitPIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_InitPIN::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void Req_C_InitPIN::Swap(Req_C_InitPIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_InitPIN::InternalSwap(Req_C_InitPIN* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppin_.Swap(&other->ppin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulpinlen_, other->ulpinlen_);
}

::google::protobuf::Metadata Req_C_InitPIN::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_InitPIN::InitAsDefaultInstance() {
}
class Rsp_C_InitPIN::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_InitPIN::Rsp_C_InitPIN()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_InitPIN)
}
Rsp_C_InitPIN::Rsp_C_InitPIN(const Rsp_C_InitPIN& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_InitPIN)
}

void Rsp_C_InitPIN::SharedCtor() {
}

Rsp_C_InitPIN::~Rsp_C_InitPIN() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_InitPIN)
  SharedDtor();
}

void Rsp_C_InitPIN::SharedDtor() {
}

void Rsp_C_InitPIN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_InitPIN& Rsp_C_InitPIN::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_InitPIN_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_InitPIN::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_InitPIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_InitPIN::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_InitPIN*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_InitPIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_InitPIN)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_InitPIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_InitPIN)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_InitPIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_InitPIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_InitPIN)
}

::google::protobuf::uint8* Rsp_C_InitPIN::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_InitPIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_InitPIN)
  return target;
}

size_t Rsp_C_InitPIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_InitPIN)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_InitPIN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_InitPIN)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_InitPIN* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_InitPIN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_InitPIN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_InitPIN)
    MergeFrom(*source);
  }
}

void Rsp_C_InitPIN::MergeFrom(const Rsp_C_InitPIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_InitPIN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_InitPIN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_InitPIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_InitPIN::CopyFrom(const Rsp_C_InitPIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_InitPIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_InitPIN::IsInitialized() const {
  return true;
}

void Rsp_C_InitPIN::Swap(Rsp_C_InitPIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_InitPIN::InternalSwap(Rsp_C_InitPIN* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_InitPIN::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_SetPIN::InitAsDefaultInstance() {
}
class Req_C_SetPIN::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_SetPIN* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_poldpin(Req_C_SetPIN* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_uloldlen(Req_C_SetPIN* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pnewpin(Req_C_SetPIN* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ulnewlen(Req_C_SetPIN* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_SetPIN::kHSessionFieldNumber;
const int Req_C_SetPIN::kPOldPinFieldNumber;
const int Req_C_SetPIN::kUlOldLenFieldNumber;
const int Req_C_SetPIN::kPNewPinFieldNumber;
const int Req_C_SetPIN::kUlNewLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_SetPIN::Req_C_SetPIN()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_SetPIN)
}
Req_C_SetPIN::Req_C_SetPIN(const Req_C_SetPIN& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  poldpin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_poldpin()) {
    poldpin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poldpin_);
  }
  pnewpin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pnewpin()) {
    pnewpin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pnewpin_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulnewlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulnewlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_SetPIN)
}

void Req_C_SetPIN::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_SetPIN_pkcs11_2eproto.base);
  poldpin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pnewpin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulnewlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulnewlen_));
}

Req_C_SetPIN::~Req_C_SetPIN() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_SetPIN)
  SharedDtor();
}

void Req_C_SetPIN::SharedDtor() {
  poldpin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pnewpin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_SetPIN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_SetPIN& Req_C_SetPIN::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_SetPIN_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_SetPIN::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_SetPIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      poldpin_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pnewpin_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulnewlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulnewlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_SetPIN::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_SetPIN*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pOldPin = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_poldpin();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulOldLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_uloldlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pNewPin = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pnewpin();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulNewLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ulnewlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_SetPIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_SetPIN)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pOldPin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_poldpin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulOldLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_uloldlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uloldlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pNewPin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pnewpin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulNewLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ulnewlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulnewlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_SetPIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_SetPIN)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_SetPIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_SetPIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pOldPin = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->poldpin(), output);
  }

  // required uint32 ulOldLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uloldlen(), output);
  }

  // optional bytes pNewPin = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pnewpin(), output);
  }

  // required uint32 ulNewLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ulnewlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_SetPIN)
}

::google::protobuf::uint8* Req_C_SetPIN::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_SetPIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pOldPin = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->poldpin(), target);
  }

  // required uint32 ulOldLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uloldlen(), target);
  }

  // optional bytes pNewPin = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pnewpin(), target);
  }

  // required uint32 ulNewLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ulnewlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_SetPIN)
  return target;
}

size_t Req_C_SetPIN::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_SetPIN)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_uloldlen()) {
    // required uint32 ulOldLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uloldlen());
  }

  if (has_ulnewlen()) {
    // required uint32 ulNewLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulnewlen());
  }

  return total_size;
}
size_t Req_C_SetPIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_SetPIN)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001c) ^ 0x0000001c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulOldLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uloldlen());

    // required uint32 ulNewLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulnewlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pOldPin = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->poldpin());
    }

    // optional bytes pNewPin = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pnewpin());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_SetPIN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_SetPIN)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_SetPIN* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_SetPIN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_SetPIN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_SetPIN)
    MergeFrom(*source);
  }
}

void Req_C_SetPIN::MergeFrom(const Req_C_SetPIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_SetPIN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      poldpin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poldpin_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pnewpin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pnewpin_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      uloldlen_ = from.uloldlen_;
    }
    if (cached_has_bits & 0x00000010u) {
      ulnewlen_ = from.ulnewlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_SetPIN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_SetPIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_SetPIN::CopyFrom(const Req_C_SetPIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_SetPIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_SetPIN::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;
  return true;
}

void Req_C_SetPIN::Swap(Req_C_SetPIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_SetPIN::InternalSwap(Req_C_SetPIN* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  poldpin_.Swap(&other->poldpin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pnewpin_.Swap(&other->pnewpin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(uloldlen_, other->uloldlen_);
  swap(ulnewlen_, other->ulnewlen_);
}

::google::protobuf::Metadata Req_C_SetPIN::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_SetPIN::InitAsDefaultInstance() {
}
class Rsp_C_SetPIN::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_SetPIN::Rsp_C_SetPIN()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_SetPIN)
}
Rsp_C_SetPIN::Rsp_C_SetPIN(const Rsp_C_SetPIN& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_SetPIN)
}

void Rsp_C_SetPIN::SharedCtor() {
}

Rsp_C_SetPIN::~Rsp_C_SetPIN() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_SetPIN)
  SharedDtor();
}

void Rsp_C_SetPIN::SharedDtor() {
}

void Rsp_C_SetPIN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_SetPIN& Rsp_C_SetPIN::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_SetPIN_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_SetPIN::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_SetPIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_SetPIN::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_SetPIN*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_SetPIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_SetPIN)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_SetPIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_SetPIN)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_SetPIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_SetPIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_SetPIN)
}

::google::protobuf::uint8* Rsp_C_SetPIN::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_SetPIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_SetPIN)
  return target;
}

size_t Rsp_C_SetPIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_SetPIN)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_SetPIN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_SetPIN)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_SetPIN* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_SetPIN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_SetPIN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_SetPIN)
    MergeFrom(*source);
  }
}

void Rsp_C_SetPIN::MergeFrom(const Rsp_C_SetPIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_SetPIN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_SetPIN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_SetPIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_SetPIN::CopyFrom(const Rsp_C_SetPIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_SetPIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_SetPIN::IsInitialized() const {
  return true;
}

void Rsp_C_SetPIN::Swap(Rsp_C_SetPIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_SetPIN::InternalSwap(Rsp_C_SetPIN* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_SetPIN::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_OpenSession::InitAsDefaultInstance() {
}
class Req_C_OpenSession::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_OpenSession* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_flags(Req_C_OpenSession* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_phsession(Req_C_OpenSession* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_OpenSession::kSlotIDFieldNumber;
const int Req_C_OpenSession::kFlagsFieldNumber;
const int Req_C_OpenSession::kPhSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_OpenSession::Req_C_OpenSession()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_OpenSession)
}
Req_C_OpenSession::Req_C_OpenSession(const Req_C_OpenSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slotid_, &from.slotid_,
    static_cast<size_t>(reinterpret_cast<char*>(&phsession_) -
    reinterpret_cast<char*>(&slotid_)) + sizeof(phsession_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_OpenSession)
}

void Req_C_OpenSession::SharedCtor() {
  ::memset(&slotid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phsession_) -
      reinterpret_cast<char*>(&slotid_)) + sizeof(phsession_));
}

Req_C_OpenSession::~Req_C_OpenSession() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_OpenSession)
  SharedDtor();
}

void Req_C_OpenSession::SharedDtor() {
}

void Req_C_OpenSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_OpenSession& Req_C_OpenSession::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_OpenSession_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_OpenSession::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_OpenSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&slotid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&phsession_) -
        reinterpret_cast<char*>(&slotid_)) + sizeof(phsession_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_OpenSession::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_OpenSession*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 flags = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 phSession = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_phsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_OpenSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_OpenSession)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 flags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 phSession = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_phsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_OpenSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_OpenSession)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_OpenSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_OpenSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // required uint32 flags = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->flags(), output);
  }

  // optional uint32 phSession = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->phsession(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_OpenSession)
}

::google::protobuf::uint8* Req_C_OpenSession::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_OpenSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // required uint32 flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->flags(), target);
  }

  // optional uint32 phSession = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->phsession(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_OpenSession)
  return target;
}

size_t Req_C_OpenSession::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_OpenSession)
  size_t total_size = 0;

  if (has_slotid()) {
    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }

  if (has_flags()) {
    // required uint32 flags = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  return total_size;
}
size_t Req_C_OpenSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_OpenSession)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());

    // required uint32 flags = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 phSession = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phsession());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_OpenSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_OpenSession)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_OpenSession* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_OpenSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_OpenSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_OpenSession)
    MergeFrom(*source);
  }
}

void Req_C_OpenSession::MergeFrom(const Req_C_OpenSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_OpenSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      slotid_ = from.slotid_;
    }
    if (cached_has_bits & 0x00000002u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000004u) {
      phsession_ = from.phsession_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_OpenSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_OpenSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_OpenSession::CopyFrom(const Req_C_OpenSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_OpenSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_OpenSession::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Req_C_OpenSession::Swap(Req_C_OpenSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_OpenSession::InternalSwap(Req_C_OpenSession* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(slotid_, other->slotid_);
  swap(flags_, other->flags_);
  swap(phsession_, other->phsession_);
}

::google::protobuf::Metadata Req_C_OpenSession::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_OpenSession::InitAsDefaultInstance() {
}
class Rsp_C_OpenSession::HasBitSetters {
 public:
  static void set_has_phsession(Rsp_C_OpenSession* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_OpenSession::kPhSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_OpenSession::Rsp_C_OpenSession()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_OpenSession)
}
Rsp_C_OpenSession::Rsp_C_OpenSession(const Rsp_C_OpenSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phsession_ = from.phsession_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_OpenSession)
}

void Rsp_C_OpenSession::SharedCtor() {
  phsession_ = 0u;
}

Rsp_C_OpenSession::~Rsp_C_OpenSession() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_OpenSession)
  SharedDtor();
}

void Rsp_C_OpenSession::SharedDtor() {
}

void Rsp_C_OpenSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_OpenSession& Rsp_C_OpenSession::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_OpenSession_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_OpenSession::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_OpenSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phsession_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_OpenSession::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_OpenSession*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 phSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_phsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_OpenSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_OpenSession)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 phSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_phsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_OpenSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_OpenSession)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_OpenSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_OpenSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->phsession(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_OpenSession)
}

::google::protobuf::uint8* Rsp_C_OpenSession::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_OpenSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->phsession(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_OpenSession)
  return target;
}

size_t Rsp_C_OpenSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_OpenSession)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 phSession = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phsession());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_OpenSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_OpenSession)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_OpenSession* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_OpenSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_OpenSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_OpenSession)
    MergeFrom(*source);
  }
}

void Rsp_C_OpenSession::MergeFrom(const Rsp_C_OpenSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_OpenSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_phsession()) {
    set_phsession(from.phsession());
  }
}

void Rsp_C_OpenSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_OpenSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_OpenSession::CopyFrom(const Rsp_C_OpenSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_OpenSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_OpenSession::IsInitialized() const {
  return true;
}

void Rsp_C_OpenSession::Swap(Rsp_C_OpenSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_OpenSession::InternalSwap(Rsp_C_OpenSession* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(phsession_, other->phsession_);
}

::google::protobuf::Metadata Rsp_C_OpenSession::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_CloseSession::InitAsDefaultInstance() {
}
class Req_C_CloseSession::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_CloseSession* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_CloseSession::kHSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_CloseSession::Req_C_CloseSession()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_CloseSession)
}
Req_C_CloseSession::Req_C_CloseSession(const Req_C_CloseSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hsession_ = from.hsession_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_CloseSession)
}

void Req_C_CloseSession::SharedCtor() {
  hsession_ = 0u;
}

Req_C_CloseSession::~Req_C_CloseSession() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_CloseSession)
  SharedDtor();
}

void Req_C_CloseSession::SharedDtor() {
}

void Req_C_CloseSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_CloseSession& Req_C_CloseSession::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_CloseSession_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_CloseSession::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_CloseSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hsession_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_CloseSession::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_CloseSession*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_CloseSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_CloseSession)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_CloseSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_CloseSession)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_CloseSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_CloseSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_CloseSession)
}

::google::protobuf::uint8* Req_C_CloseSession::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_CloseSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_CloseSession)
  return target;
}

size_t Req_C_CloseSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_CloseSession)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_CloseSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_CloseSession)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_CloseSession* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_CloseSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_CloseSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_CloseSession)
    MergeFrom(*source);
  }
}

void Req_C_CloseSession::MergeFrom(const Req_C_CloseSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_CloseSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hsession()) {
    set_hsession(from.hsession());
  }
}

void Req_C_CloseSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_CloseSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_CloseSession::CopyFrom(const Req_C_CloseSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_CloseSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_CloseSession::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_CloseSession::Swap(Req_C_CloseSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_CloseSession::InternalSwap(Req_C_CloseSession* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(hsession_, other->hsession_);
}

::google::protobuf::Metadata Req_C_CloseSession::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_CloseSession::InitAsDefaultInstance() {
}
class Rsp_C_CloseSession::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_CloseSession::Rsp_C_CloseSession()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_CloseSession)
}
Rsp_C_CloseSession::Rsp_C_CloseSession(const Rsp_C_CloseSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_CloseSession)
}

void Rsp_C_CloseSession::SharedCtor() {
}

Rsp_C_CloseSession::~Rsp_C_CloseSession() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_CloseSession)
  SharedDtor();
}

void Rsp_C_CloseSession::SharedDtor() {
}

void Rsp_C_CloseSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_CloseSession& Rsp_C_CloseSession::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_CloseSession_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_CloseSession::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_CloseSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_CloseSession::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_CloseSession*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_CloseSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_CloseSession)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_CloseSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_CloseSession)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_CloseSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_CloseSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_CloseSession)
}

::google::protobuf::uint8* Rsp_C_CloseSession::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_CloseSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_CloseSession)
  return target;
}

size_t Rsp_C_CloseSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_CloseSession)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_CloseSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_CloseSession)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_CloseSession* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_CloseSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_CloseSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_CloseSession)
    MergeFrom(*source);
  }
}

void Rsp_C_CloseSession::MergeFrom(const Rsp_C_CloseSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_CloseSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_CloseSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_CloseSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_CloseSession::CopyFrom(const Rsp_C_CloseSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_CloseSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_CloseSession::IsInitialized() const {
  return true;
}

void Rsp_C_CloseSession::Swap(Rsp_C_CloseSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_CloseSession::InternalSwap(Rsp_C_CloseSession* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_CloseSession::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_CloseAllSessions::InitAsDefaultInstance() {
}
class Req_C_CloseAllSessions::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_CloseAllSessions* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_CloseAllSessions::kSlotIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_CloseAllSessions::Req_C_CloseAllSessions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_CloseAllSessions)
}
Req_C_CloseAllSessions::Req_C_CloseAllSessions(const Req_C_CloseAllSessions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slotid_ = from.slotid_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_CloseAllSessions)
}

void Req_C_CloseAllSessions::SharedCtor() {
  slotid_ = 0u;
}

Req_C_CloseAllSessions::~Req_C_CloseAllSessions() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_CloseAllSessions)
  SharedDtor();
}

void Req_C_CloseAllSessions::SharedDtor() {
}

void Req_C_CloseAllSessions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_CloseAllSessions& Req_C_CloseAllSessions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_CloseAllSessions_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_CloseAllSessions::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_CloseAllSessions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slotid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_CloseAllSessions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_CloseAllSessions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_CloseAllSessions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_CloseAllSessions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_CloseAllSessions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_CloseAllSessions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_CloseAllSessions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_CloseAllSessions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_CloseAllSessions)
}

::google::protobuf::uint8* Req_C_CloseAllSessions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_CloseAllSessions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_CloseAllSessions)
  return target;
}

size_t Req_C_CloseAllSessions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_CloseAllSessions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 slotID = 1;
  if (has_slotid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_CloseAllSessions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_CloseAllSessions)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_CloseAllSessions* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_CloseAllSessions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_CloseAllSessions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_CloseAllSessions)
    MergeFrom(*source);
  }
}

void Req_C_CloseAllSessions::MergeFrom(const Req_C_CloseAllSessions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_CloseAllSessions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slotid()) {
    set_slotid(from.slotid());
  }
}

void Req_C_CloseAllSessions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_CloseAllSessions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_CloseAllSessions::CopyFrom(const Req_C_CloseAllSessions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_CloseAllSessions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_CloseAllSessions::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_CloseAllSessions::Swap(Req_C_CloseAllSessions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_CloseAllSessions::InternalSwap(Req_C_CloseAllSessions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(slotid_, other->slotid_);
}

::google::protobuf::Metadata Req_C_CloseAllSessions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_CloseAllSessions::InitAsDefaultInstance() {
}
class Rsp_C_CloseAllSessions::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_CloseAllSessions::Rsp_C_CloseAllSessions()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_CloseAllSessions)
}
Rsp_C_CloseAllSessions::Rsp_C_CloseAllSessions(const Rsp_C_CloseAllSessions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_CloseAllSessions)
}

void Rsp_C_CloseAllSessions::SharedCtor() {
}

Rsp_C_CloseAllSessions::~Rsp_C_CloseAllSessions() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  SharedDtor();
}

void Rsp_C_CloseAllSessions::SharedDtor() {
}

void Rsp_C_CloseAllSessions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_CloseAllSessions& Rsp_C_CloseAllSessions::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_CloseAllSessions_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_CloseAllSessions::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_CloseAllSessions::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_CloseAllSessions*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_CloseAllSessions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_CloseAllSessions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_CloseAllSessions)
}

::google::protobuf::uint8* Rsp_C_CloseAllSessions::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  return target;
}

size_t Rsp_C_CloseAllSessions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_CloseAllSessions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_CloseAllSessions* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_CloseAllSessions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_CloseAllSessions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_CloseAllSessions)
    MergeFrom(*source);
  }
}

void Rsp_C_CloseAllSessions::MergeFrom(const Rsp_C_CloseAllSessions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_CloseAllSessions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_CloseAllSessions::CopyFrom(const Rsp_C_CloseAllSessions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_CloseAllSessions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_CloseAllSessions::IsInitialized() const {
  return true;
}

void Rsp_C_CloseAllSessions::Swap(Rsp_C_CloseAllSessions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_CloseAllSessions::InternalSwap(Rsp_C_CloseAllSessions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_CloseAllSessions::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GetSessionInfo::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_GetSessionInfo_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::com::weston::pkcs11::PRO_SessionInfo*>(
      ::com::weston::pkcs11::PRO_SessionInfo::internal_default_instance());
}
class Req_C_GetSessionInfo::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_GetSessionInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_SessionInfo& pinfo(const Req_C_GetSessionInfo* msg);
  static void set_has_pinfo(Req_C_GetSessionInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::weston::pkcs11::PRO_SessionInfo&
Req_C_GetSessionInfo::HasBitSetters::pinfo(const Req_C_GetSessionInfo* msg) {
  return *msg->pinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GetSessionInfo::kHSessionFieldNumber;
const int Req_C_GetSessionInfo::kPInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GetSessionInfo::Req_C_GetSessionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GetSessionInfo)
}
Req_C_GetSessionInfo::Req_C_GetSessionInfo(const Req_C_GetSessionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::com::weston::pkcs11::PRO_SessionInfo(*from.pinfo_);
  } else {
    pinfo_ = nullptr;
  }
  hsession_ = from.hsession_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GetSessionInfo)
}

void Req_C_GetSessionInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_GetSessionInfo_pkcs11_2eproto.base);
  ::memset(&pinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hsession_) -
      reinterpret_cast<char*>(&pinfo_)) + sizeof(hsession_));
}

Req_C_GetSessionInfo::~Req_C_GetSessionInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GetSessionInfo)
  SharedDtor();
}

void Req_C_GetSessionInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void Req_C_GetSessionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GetSessionInfo& Req_C_GetSessionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GetSessionInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GetSessionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GetSessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != nullptr);
    pinfo_->Clear();
  }
  hsession_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GetSessionInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GetSessionInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_SessionInfo pInfo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_SessionInfo::_InternalParse;
        object = msg->mutable_pinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GetSessionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GetSessionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_SessionInfo pInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GetSessionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GetSessionInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GetSessionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GetSessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_SessionInfo pInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GetSessionInfo)
}

::google::protobuf::uint8* Req_C_GetSessionInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GetSessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_SessionInfo pInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GetSessionInfo)
  return target;
}

size_t Req_C_GetSessionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GetSessionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_SessionInfo pInfo = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GetSessionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GetSessionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GetSessionInfo* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GetSessionInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GetSessionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GetSessionInfo)
    MergeFrom(*source);
  }
}

void Req_C_GetSessionInfo::MergeFrom(const Req_C_GetSessionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GetSessionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pinfo()->::com::weston::pkcs11::PRO_SessionInfo::MergeFrom(from.pinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_GetSessionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GetSessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GetSessionInfo::CopyFrom(const Req_C_GetSessionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GetSessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GetSessionInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_pinfo()) {
    if (!this->pinfo_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_GetSessionInfo::Swap(Req_C_GetSessionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GetSessionInfo::InternalSwap(Req_C_GetSessionInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pinfo_, other->pinfo_);
  swap(hsession_, other->hsession_);
}

::google::protobuf::Metadata Req_C_GetSessionInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GetSessionInfo::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Rsp_C_GetSessionInfo_default_instance_._instance.get_mutable()->pinfo_ = const_cast< ::com::weston::pkcs11::PRO_SessionInfo*>(
      ::com::weston::pkcs11::PRO_SessionInfo::internal_default_instance());
}
class Rsp_C_GetSessionInfo::HasBitSetters {
 public:
  static const ::com::weston::pkcs11::PRO_SessionInfo& pinfo(const Rsp_C_GetSessionInfo* msg);
  static void set_has_pinfo(Rsp_C_GetSessionInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::weston::pkcs11::PRO_SessionInfo&
Rsp_C_GetSessionInfo::HasBitSetters::pinfo(const Rsp_C_GetSessionInfo* msg) {
  return *msg->pinfo_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GetSessionInfo::kPInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GetSessionInfo::Rsp_C_GetSessionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GetSessionInfo)
}
Rsp_C_GetSessionInfo::Rsp_C_GetSessionInfo(const Rsp_C_GetSessionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pinfo()) {
    pinfo_ = new ::com::weston::pkcs11::PRO_SessionInfo(*from.pinfo_);
  } else {
    pinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GetSessionInfo)
}

void Rsp_C_GetSessionInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_GetSessionInfo_pkcs11_2eproto.base);
  pinfo_ = nullptr;
}

Rsp_C_GetSessionInfo::~Rsp_C_GetSessionInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  SharedDtor();
}

void Rsp_C_GetSessionInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pinfo_;
}

void Rsp_C_GetSessionInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GetSessionInfo& Rsp_C_GetSessionInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GetSessionInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GetSessionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pinfo_ != nullptr);
    pinfo_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GetSessionInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GetSessionInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional .com.weston.pkcs11.PRO_SessionInfo pInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_SessionInfo::_InternalParse;
        object = msg->mutable_pinfo();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GetSessionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.weston.pkcs11.PRO_SessionInfo pInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GetSessionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.weston.pkcs11.PRO_SessionInfo pInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pinfo(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GetSessionInfo)
}

::google::protobuf::uint8* Rsp_C_GetSessionInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.weston.pkcs11.PRO_SessionInfo pInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pinfo(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  return target;
}

size_t Rsp_C_GetSessionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_SessionInfo pInfo = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GetSessionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GetSessionInfo* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GetSessionInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GetSessionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GetSessionInfo)
    MergeFrom(*source);
  }
}

void Rsp_C_GetSessionInfo::MergeFrom(const Rsp_C_GetSessionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pinfo()) {
    mutable_pinfo()->::com::weston::pkcs11::PRO_SessionInfo::MergeFrom(from.pinfo());
  }
}

void Rsp_C_GetSessionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GetSessionInfo::CopyFrom(const Rsp_C_GetSessionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GetSessionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GetSessionInfo::IsInitialized() const {
  if (has_pinfo()) {
    if (!this->pinfo_->IsInitialized()) return false;
  }
  return true;
}

void Rsp_C_GetSessionInfo::Swap(Rsp_C_GetSessionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GetSessionInfo::InternalSwap(Rsp_C_GetSessionInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pinfo_, other->pinfo_);
}

::google::protobuf::Metadata Rsp_C_GetSessionInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GetOperationState::InitAsDefaultInstance() {
}
class Req_C_GetOperationState::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_GetOperationState* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_poperationstate(Req_C_GetOperationState* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_puloperationstatelen(Req_C_GetOperationState* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GetOperationState::kHSessionFieldNumber;
const int Req_C_GetOperationState::kPOperationStateFieldNumber;
const int Req_C_GetOperationState::kPulOperationStateLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GetOperationState::Req_C_GetOperationState()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GetOperationState)
}
Req_C_GetOperationState::Req_C_GetOperationState(const Req_C_GetOperationState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  poperationstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_poperationstate()) {
    poperationstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poperationstate_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&puloperationstatelen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(puloperationstatelen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GetOperationState)
}

void Req_C_GetOperationState::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_GetOperationState_pkcs11_2eproto.base);
  poperationstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&puloperationstatelen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(puloperationstatelen_));
}

Req_C_GetOperationState::~Req_C_GetOperationState() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GetOperationState)
  SharedDtor();
}

void Req_C_GetOperationState::SharedDtor() {
  poperationstate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_GetOperationState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GetOperationState& Req_C_GetOperationState::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GetOperationState_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GetOperationState::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GetOperationState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    poperationstate_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&puloperationstatelen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(puloperationstatelen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GetOperationState::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GetOperationState*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pOperationState = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_poperationstate();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulOperationStateLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_puloperationstatelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GetOperationState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GetOperationState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pOperationState = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_poperationstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulOperationStateLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_puloperationstatelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puloperationstatelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GetOperationState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GetOperationState)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GetOperationState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GetOperationState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pOperationState = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->poperationstate(), output);
  }

  // optional uint32 pulOperationStateLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->puloperationstatelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GetOperationState)
}

::google::protobuf::uint8* Req_C_GetOperationState::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GetOperationState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pOperationState = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->poperationstate(), target);
  }

  // optional uint32 pulOperationStateLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->puloperationstatelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GetOperationState)
  return target;
}

size_t Req_C_GetOperationState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GetOperationState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pOperationState = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->poperationstate());
  }

  // optional uint32 pulOperationStateLen = 3;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->puloperationstatelen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GetOperationState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GetOperationState)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GetOperationState* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GetOperationState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GetOperationState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GetOperationState)
    MergeFrom(*source);
  }
}

void Req_C_GetOperationState::MergeFrom(const Req_C_GetOperationState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GetOperationState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      poperationstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poperationstate_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      puloperationstatelen_ = from.puloperationstatelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_GetOperationState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GetOperationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GetOperationState::CopyFrom(const Req_C_GetOperationState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GetOperationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GetOperationState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Req_C_GetOperationState::Swap(Req_C_GetOperationState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GetOperationState::InternalSwap(Req_C_GetOperationState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  poperationstate_.Swap(&other->poperationstate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(puloperationstatelen_, other->puloperationstatelen_);
}

::google::protobuf::Metadata Req_C_GetOperationState::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GetOperationState::InitAsDefaultInstance() {
}
class Rsp_C_GetOperationState::HasBitSetters {
 public:
  static void set_has_poperationstate(Rsp_C_GetOperationState* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_puloperationstatelen(Rsp_C_GetOperationState* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GetOperationState::kPOperationStateFieldNumber;
const int Rsp_C_GetOperationState::kPulOperationStateLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GetOperationState::Rsp_C_GetOperationState()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GetOperationState)
}
Rsp_C_GetOperationState::Rsp_C_GetOperationState(const Rsp_C_GetOperationState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  poperationstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_poperationstate()) {
    poperationstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poperationstate_);
  }
  puloperationstatelen_ = from.puloperationstatelen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GetOperationState)
}

void Rsp_C_GetOperationState::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_GetOperationState_pkcs11_2eproto.base);
  poperationstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  puloperationstatelen_ = 0u;
}

Rsp_C_GetOperationState::~Rsp_C_GetOperationState() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GetOperationState)
  SharedDtor();
}

void Rsp_C_GetOperationState::SharedDtor() {
  poperationstate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_GetOperationState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GetOperationState& Rsp_C_GetOperationState::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GetOperationState_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GetOperationState::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GetOperationState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    poperationstate_.ClearNonDefaultToEmptyNoArena();
  }
  puloperationstatelen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GetOperationState::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GetOperationState*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pOperationState = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_poperationstate();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulOperationStateLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_puloperationstatelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GetOperationState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GetOperationState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pOperationState = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_poperationstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulOperationStateLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_puloperationstatelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puloperationstatelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GetOperationState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GetOperationState)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GetOperationState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GetOperationState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pOperationState = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->poperationstate(), output);
  }

  // optional uint32 pulOperationStateLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->puloperationstatelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GetOperationState)
}

::google::protobuf::uint8* Rsp_C_GetOperationState::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GetOperationState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pOperationState = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->poperationstate(), target);
  }

  // optional uint32 pulOperationStateLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->puloperationstatelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GetOperationState)
  return target;
}

size_t Rsp_C_GetOperationState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GetOperationState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pOperationState = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->poperationstate());
    }

    // optional uint32 pulOperationStateLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->puloperationstatelen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GetOperationState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GetOperationState)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GetOperationState* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GetOperationState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GetOperationState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GetOperationState)
    MergeFrom(*source);
  }
}

void Rsp_C_GetOperationState::MergeFrom(const Rsp_C_GetOperationState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GetOperationState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      poperationstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poperationstate_);
    }
    if (cached_has_bits & 0x00000002u) {
      puloperationstatelen_ = from.puloperationstatelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_GetOperationState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GetOperationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GetOperationState::CopyFrom(const Rsp_C_GetOperationState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GetOperationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GetOperationState::IsInitialized() const {
  return true;
}

void Rsp_C_GetOperationState::Swap(Rsp_C_GetOperationState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GetOperationState::InternalSwap(Rsp_C_GetOperationState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  poperationstate_.Swap(&other->poperationstate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(puloperationstatelen_, other->puloperationstatelen_);
}

::google::protobuf::Metadata Rsp_C_GetOperationState::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_SetOperationState::InitAsDefaultInstance() {
}
class Req_C_SetOperationState::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_SetOperationState* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_poperationstate(Req_C_SetOperationState* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_uloperationstatelen(Req_C_SetOperationState* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_hencryptionkey(Req_C_SetOperationState* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_hauthenticationkey(Req_C_SetOperationState* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_SetOperationState::kHSessionFieldNumber;
const int Req_C_SetOperationState::kPOperationStateFieldNumber;
const int Req_C_SetOperationState::kUlOperationStateLenFieldNumber;
const int Req_C_SetOperationState::kHEncryptionKeyFieldNumber;
const int Req_C_SetOperationState::kHAuthenticationKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_SetOperationState::Req_C_SetOperationState()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_SetOperationState)
}
Req_C_SetOperationState::Req_C_SetOperationState(const Req_C_SetOperationState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  poperationstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_poperationstate()) {
    poperationstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poperationstate_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&hauthenticationkey_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(hauthenticationkey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_SetOperationState)
}

void Req_C_SetOperationState::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_SetOperationState_pkcs11_2eproto.base);
  poperationstate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hauthenticationkey_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(hauthenticationkey_));
}

Req_C_SetOperationState::~Req_C_SetOperationState() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_SetOperationState)
  SharedDtor();
}

void Req_C_SetOperationState::SharedDtor() {
  poperationstate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_SetOperationState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_SetOperationState& Req_C_SetOperationState::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_SetOperationState_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_SetOperationState::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_SetOperationState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    poperationstate_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hauthenticationkey_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(hauthenticationkey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_SetOperationState::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_SetOperationState*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pOperationState = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_poperationstate();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulOperationStateLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_uloperationstatelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 hEncryptionKey = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_hencryptionkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 hAuthenticationKey = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_hauthenticationkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_SetOperationState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_SetOperationState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pOperationState = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_poperationstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulOperationStateLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_uloperationstatelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uloperationstatelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hEncryptionKey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_hencryptionkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hencryptionkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hAuthenticationKey = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_hauthenticationkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hauthenticationkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_SetOperationState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_SetOperationState)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_SetOperationState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_SetOperationState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pOperationState = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->poperationstate(), output);
  }

  // required uint32 ulOperationStateLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uloperationstatelen(), output);
  }

  // required uint32 hEncryptionKey = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->hencryptionkey(), output);
  }

  // required uint32 hAuthenticationKey = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hauthenticationkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_SetOperationState)
}

::google::protobuf::uint8* Req_C_SetOperationState::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_SetOperationState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pOperationState = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->poperationstate(), target);
  }

  // required uint32 ulOperationStateLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uloperationstatelen(), target);
  }

  // required uint32 hEncryptionKey = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->hencryptionkey(), target);
  }

  // required uint32 hAuthenticationKey = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hauthenticationkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_SetOperationState)
  return target;
}

size_t Req_C_SetOperationState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_SetOperationState)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_uloperationstatelen()) {
    // required uint32 ulOperationStateLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uloperationstatelen());
  }

  if (has_hencryptionkey()) {
    // required uint32 hEncryptionKey = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hencryptionkey());
  }

  if (has_hauthenticationkey()) {
    // required uint32 hAuthenticationKey = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hauthenticationkey());
  }

  return total_size;
}
size_t Req_C_SetOperationState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_SetOperationState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001e) ^ 0x0000001e) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulOperationStateLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uloperationstatelen());

    // required uint32 hEncryptionKey = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hencryptionkey());

    // required uint32 hAuthenticationKey = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hauthenticationkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pOperationState = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->poperationstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_SetOperationState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_SetOperationState)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_SetOperationState* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_SetOperationState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_SetOperationState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_SetOperationState)
    MergeFrom(*source);
  }
}

void Req_C_SetOperationState::MergeFrom(const Req_C_SetOperationState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_SetOperationState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      poperationstate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poperationstate_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      uloperationstatelen_ = from.uloperationstatelen_;
    }
    if (cached_has_bits & 0x00000008u) {
      hencryptionkey_ = from.hencryptionkey_;
    }
    if (cached_has_bits & 0x00000010u) {
      hauthenticationkey_ = from.hauthenticationkey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_SetOperationState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_SetOperationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_SetOperationState::CopyFrom(const Req_C_SetOperationState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_SetOperationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_SetOperationState::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;
  return true;
}

void Req_C_SetOperationState::Swap(Req_C_SetOperationState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_SetOperationState::InternalSwap(Req_C_SetOperationState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  poperationstate_.Swap(&other->poperationstate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(uloperationstatelen_, other->uloperationstatelen_);
  swap(hencryptionkey_, other->hencryptionkey_);
  swap(hauthenticationkey_, other->hauthenticationkey_);
}

::google::protobuf::Metadata Req_C_SetOperationState::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_SetOperationState::InitAsDefaultInstance() {
}
class Rsp_C_SetOperationState::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_SetOperationState::Rsp_C_SetOperationState()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_SetOperationState)
}
Rsp_C_SetOperationState::Rsp_C_SetOperationState(const Rsp_C_SetOperationState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_SetOperationState)
}

void Rsp_C_SetOperationState::SharedCtor() {
}

Rsp_C_SetOperationState::~Rsp_C_SetOperationState() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_SetOperationState)
  SharedDtor();
}

void Rsp_C_SetOperationState::SharedDtor() {
}

void Rsp_C_SetOperationState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_SetOperationState& Rsp_C_SetOperationState::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_SetOperationState_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_SetOperationState::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_SetOperationState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_SetOperationState::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_SetOperationState*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_SetOperationState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_SetOperationState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_SetOperationState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_SetOperationState)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_SetOperationState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_SetOperationState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_SetOperationState)
}

::google::protobuf::uint8* Rsp_C_SetOperationState::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_SetOperationState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_SetOperationState)
  return target;
}

size_t Rsp_C_SetOperationState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_SetOperationState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_SetOperationState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_SetOperationState)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_SetOperationState* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_SetOperationState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_SetOperationState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_SetOperationState)
    MergeFrom(*source);
  }
}

void Rsp_C_SetOperationState::MergeFrom(const Rsp_C_SetOperationState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_SetOperationState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_SetOperationState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_SetOperationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_SetOperationState::CopyFrom(const Rsp_C_SetOperationState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_SetOperationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_SetOperationState::IsInitialized() const {
  return true;
}

void Rsp_C_SetOperationState::Swap(Rsp_C_SetOperationState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_SetOperationState::InternalSwap(Rsp_C_SetOperationState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_SetOperationState::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Login::InitAsDefaultInstance() {
}
class Req_C_Login::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Login* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_usertype(Req_C_Login* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_ppin(Req_C_Login* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulpinlen(Req_C_Login* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Login::kHSessionFieldNumber;
const int Req_C_Login::kUserTypeFieldNumber;
const int Req_C_Login::kPPinFieldNumber;
const int Req_C_Login::kUlPinLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Login::Req_C_Login()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Login)
}
Req_C_Login::Req_C_Login(const Req_C_Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppin()) {
    ppin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppin_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulpinlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulpinlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Login)
}

void Req_C_Login::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Login_pkcs11_2eproto.base);
  ppin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulpinlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulpinlen_));
}

Req_C_Login::~Req_C_Login() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Login)
  SharedDtor();
}

void Req_C_Login::SharedDtor() {
  ppin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Login& Req_C_Login::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Login_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Login::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ppin_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulpinlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulpinlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Login::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Login*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 userType = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_usertype(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPin = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppin();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulPinLen = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_ulpinlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 userType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_usertype(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usertype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulPinLen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_ulpinlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulpinlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Login)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // required uint32 userType = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->usertype(), output);
  }

  // optional bytes pPin = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ppin(), output);
  }

  // required uint32 ulPinLen = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ulpinlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Login)
}

::google::protobuf::uint8* Req_C_Login::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // required uint32 userType = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->usertype(), target);
  }

  // optional bytes pPin = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ppin(), target);
  }

  // required uint32 ulPinLen = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ulpinlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Login)
  return target;
}

size_t Req_C_Login::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Login)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_usertype()) {
    // required uint32 userType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usertype());
  }

  if (has_ulpinlen()) {
    // required uint32 ulPinLen = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpinlen());
  }

  return total_size;
}
size_t Req_C_Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 userType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usertype());

    // required uint32 ulPinLen = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpinlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pPin = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ppin());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Login)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Login* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Login>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Login)
    MergeFrom(*source);
  }
}

void Req_C_Login::MergeFrom(const Req_C_Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppin_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      usertype_ = from.usertype_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulpinlen_ = from.ulpinlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Login::CopyFrom(const Req_C_Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Login::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  return true;
}

void Req_C_Login::Swap(Req_C_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Login::InternalSwap(Req_C_Login* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppin_.Swap(&other->ppin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(usertype_, other->usertype_);
  swap(ulpinlen_, other->ulpinlen_);
}

::google::protobuf::Metadata Req_C_Login::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Login::InitAsDefaultInstance() {
}
class Rsp_C_Login::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Login::Rsp_C_Login()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Login)
}
Rsp_C_Login::Rsp_C_Login(const Rsp_C_Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Login)
}

void Rsp_C_Login::SharedCtor() {
}

Rsp_C_Login::~Rsp_C_Login() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Login)
  SharedDtor();
}

void Rsp_C_Login::SharedDtor() {
}

void Rsp_C_Login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Login& Rsp_C_Login::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Login_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Login::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Login::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Login*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Login)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Login)
}

::google::protobuf::uint8* Rsp_C_Login::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Login)
  return target;
}

size_t Rsp_C_Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Login)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Login* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Login>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Login)
    MergeFrom(*source);
  }
}

void Rsp_C_Login::MergeFrom(const Rsp_C_Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Login::CopyFrom(const Rsp_C_Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Login::IsInitialized() const {
  return true;
}

void Rsp_C_Login::Swap(Rsp_C_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Login::InternalSwap(Rsp_C_Login* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Login::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Logout::InitAsDefaultInstance() {
}
class Req_C_Logout::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Logout* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Logout::kHSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Logout::Req_C_Logout()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Logout)
}
Req_C_Logout::Req_C_Logout(const Req_C_Logout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hsession_ = from.hsession_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Logout)
}

void Req_C_Logout::SharedCtor() {
  hsession_ = 0u;
}

Req_C_Logout::~Req_C_Logout() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Logout)
  SharedDtor();
}

void Req_C_Logout::SharedDtor() {
}

void Req_C_Logout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Logout& Req_C_Logout::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Logout_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Logout::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Logout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hsession_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Logout::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Logout*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Logout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Logout)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Logout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Logout)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Logout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Logout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Logout)
}

::google::protobuf::uint8* Req_C_Logout::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Logout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Logout)
  return target;
}

size_t Req_C_Logout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Logout)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Logout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Logout)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Logout* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Logout>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Logout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Logout)
    MergeFrom(*source);
  }
}

void Req_C_Logout::MergeFrom(const Req_C_Logout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Logout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hsession()) {
    set_hsession(from.hsession());
  }
}

void Req_C_Logout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Logout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Logout::CopyFrom(const Req_C_Logout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Logout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Logout::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_Logout::Swap(Req_C_Logout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Logout::InternalSwap(Req_C_Logout* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(hsession_, other->hsession_);
}

::google::protobuf::Metadata Req_C_Logout::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Logout::InitAsDefaultInstance() {
}
class Rsp_C_Logout::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Logout::Rsp_C_Logout()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Logout)
}
Rsp_C_Logout::Rsp_C_Logout(const Rsp_C_Logout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Logout)
}

void Rsp_C_Logout::SharedCtor() {
}

Rsp_C_Logout::~Rsp_C_Logout() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Logout)
  SharedDtor();
}

void Rsp_C_Logout::SharedDtor() {
}

void Rsp_C_Logout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Logout& Rsp_C_Logout::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Logout_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Logout::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Logout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Logout::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Logout*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Logout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Logout)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Logout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Logout)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Logout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Logout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Logout)
}

::google::protobuf::uint8* Rsp_C_Logout::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Logout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Logout)
  return target;
}

size_t Rsp_C_Logout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Logout)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Logout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Logout)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Logout* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Logout>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Logout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Logout)
    MergeFrom(*source);
  }
}

void Rsp_C_Logout::MergeFrom(const Rsp_C_Logout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Logout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Logout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Logout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Logout::CopyFrom(const Rsp_C_Logout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Logout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Logout::IsInitialized() const {
  return true;
}

void Rsp_C_Logout::Swap(Rsp_C_Logout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Logout::InternalSwap(Rsp_C_Logout* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Logout::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_CreateObject::InitAsDefaultInstance() {
}
class Req_C_CreateObject::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_CreateObject* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulcount(Req_C_CreateObject* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_phobject(Req_C_CreateObject* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_CreateObject::kHSessionFieldNumber;
const int Req_C_CreateObject::kPTemplateFieldNumber;
const int Req_C_CreateObject::kUlCountFieldNumber;
const int Req_C_CreateObject::kPhObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_CreateObject::Req_C_CreateObject()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_CreateObject)
}
Req_C_CreateObject::Req_C_CreateObject(const Req_C_CreateObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ptemplate_(from.ptemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&phobject_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(phobject_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_CreateObject)
}

void Req_C_CreateObject::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_CreateObject_pkcs11_2eproto.base);
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phobject_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(phobject_));
}

Req_C_CreateObject::~Req_C_CreateObject() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_CreateObject)
  SharedDtor();
}

void Req_C_CreateObject::SharedDtor() {
}

void Req_C_CreateObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_CreateObject& Req_C_CreateObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_CreateObject_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_CreateObject::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_CreateObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptemplate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&phobject_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(phobject_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_CreateObject::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_CreateObject*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ptemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // required uint32 ulCount = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 phObject = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_phobject(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_CreateObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_CreateObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ptemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 phObject = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_phobject(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phobject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_CreateObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_CreateObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_CreateObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_CreateObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->ptemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulCount = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulcount(), output);
  }

  // optional uint32 phObject = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->phobject(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_CreateObject)
}

::google::protobuf::uint8* Req_C_CreateObject::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_CreateObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ptemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulCount = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulcount(), target);
  }

  // optional uint32 phObject = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->phobject(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_CreateObject)
  return target;
}

size_t Req_C_CreateObject::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_CreateObject)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulcount()) {
    // required uint32 ulCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulcount());
  }

  return total_size;
}
size_t Req_C_CreateObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_CreateObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ptemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ptemplate(static_cast<int>(i)));
    }
  }

  // optional uint32 phObject = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phobject());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_CreateObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_CreateObject)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_CreateObject* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_CreateObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_CreateObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_CreateObject)
    MergeFrom(*source);
  }
}

void Req_C_CreateObject::MergeFrom(const Req_C_CreateObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_CreateObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ptemplate_.MergeFrom(from.ptemplate_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000002u) {
      ulcount_ = from.ulcount_;
    }
    if (cached_has_bits & 0x00000004u) {
      phobject_ = from.phobject_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_CreateObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_CreateObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_CreateObject::CopyFrom(const Req_C_CreateObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_CreateObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_CreateObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ptemplate())) return false;
  return true;
}

void Req_C_CreateObject::Swap(Req_C_CreateObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_CreateObject::InternalSwap(Req_C_CreateObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ptemplate_)->InternalSwap(CastToBase(&other->ptemplate_));
  swap(hsession_, other->hsession_);
  swap(ulcount_, other->ulcount_);
  swap(phobject_, other->phobject_);
}

::google::protobuf::Metadata Req_C_CreateObject::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_CreateObject::InitAsDefaultInstance() {
}
class Rsp_C_CreateObject::HasBitSetters {
 public:
  static void set_has_phobject(Rsp_C_CreateObject* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_CreateObject::kPhObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_CreateObject::Rsp_C_CreateObject()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_CreateObject)
}
Rsp_C_CreateObject::Rsp_C_CreateObject(const Rsp_C_CreateObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phobject_ = from.phobject_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_CreateObject)
}

void Rsp_C_CreateObject::SharedCtor() {
  phobject_ = 0u;
}

Rsp_C_CreateObject::~Rsp_C_CreateObject() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_CreateObject)
  SharedDtor();
}

void Rsp_C_CreateObject::SharedDtor() {
}

void Rsp_C_CreateObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_CreateObject& Rsp_C_CreateObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_CreateObject_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_CreateObject::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_CreateObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phobject_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_CreateObject::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_CreateObject*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 phObject = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_phobject(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_CreateObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_CreateObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 phObject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_phobject(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phobject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_CreateObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_CreateObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_CreateObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_CreateObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phObject = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->phobject(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_CreateObject)
}

::google::protobuf::uint8* Rsp_C_CreateObject::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_CreateObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phObject = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->phobject(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_CreateObject)
  return target;
}

size_t Rsp_C_CreateObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_CreateObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 phObject = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phobject());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_CreateObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_CreateObject)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_CreateObject* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_CreateObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_CreateObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_CreateObject)
    MergeFrom(*source);
  }
}

void Rsp_C_CreateObject::MergeFrom(const Rsp_C_CreateObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_CreateObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_phobject()) {
    set_phobject(from.phobject());
  }
}

void Rsp_C_CreateObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_CreateObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_CreateObject::CopyFrom(const Rsp_C_CreateObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_CreateObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_CreateObject::IsInitialized() const {
  return true;
}

void Rsp_C_CreateObject::Swap(Rsp_C_CreateObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_CreateObject::InternalSwap(Rsp_C_CreateObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(phobject_, other->phobject_);
}

::google::protobuf::Metadata Rsp_C_CreateObject::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_CopyObject::InitAsDefaultInstance() {
}
class Req_C_CopyObject::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_CopyObject* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hobject(Req_C_CopyObject* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ulcount(Req_C_CopyObject* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_phnewobject(Req_C_CopyObject* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_CopyObject::kHSessionFieldNumber;
const int Req_C_CopyObject::kHObjectFieldNumber;
const int Req_C_CopyObject::kPTemplateFieldNumber;
const int Req_C_CopyObject::kUlCountFieldNumber;
const int Req_C_CopyObject::kPhNewObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_CopyObject::Req_C_CopyObject()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_CopyObject)
}
Req_C_CopyObject::Req_C_CopyObject(const Req_C_CopyObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ptemplate_(from.ptemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&phnewobject_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(phnewobject_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_CopyObject)
}

void Req_C_CopyObject::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_CopyObject_pkcs11_2eproto.base);
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phnewobject_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(phnewobject_));
}

Req_C_CopyObject::~Req_C_CopyObject() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_CopyObject)
  SharedDtor();
}

void Req_C_CopyObject::SharedDtor() {
}

void Req_C_CopyObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_CopyObject& Req_C_CopyObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_CopyObject_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_CopyObject::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_CopyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptemplate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&phnewobject_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(phnewobject_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_CopyObject::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_CopyObject*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 hObject = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_hobject(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ptemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // required uint32 ulCount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_ulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 phNewObject = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_phnewobject(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_CopyObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_CopyObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hObject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_hobject(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hobject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ptemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_ulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 phNewObject = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_phnewobject(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phnewobject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_CopyObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_CopyObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_CopyObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_CopyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // required uint32 hObject = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hobject(), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->ptemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulCount = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ulcount(), output);
  }

  // optional uint32 phNewObject = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->phnewobject(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_CopyObject)
}

::google::protobuf::uint8* Req_C_CopyObject::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_CopyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // required uint32 hObject = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hobject(), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->ptemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulCount = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ulcount(), target);
  }

  // optional uint32 phNewObject = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->phnewobject(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_CopyObject)
  return target;
}

size_t Req_C_CopyObject::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_CopyObject)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hobject()) {
    // required uint32 hObject = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hobject());
  }

  if (has_ulcount()) {
    // required uint32 ulCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulcount());
  }

  return total_size;
}
size_t Req_C_CopyObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_CopyObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hObject = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hobject());

    // required uint32 ulCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->ptemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ptemplate(static_cast<int>(i)));
    }
  }

  // optional uint32 phNewObject = 5;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phnewobject());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_CopyObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_CopyObject)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_CopyObject* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_CopyObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_CopyObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_CopyObject)
    MergeFrom(*source);
  }
}

void Req_C_CopyObject::MergeFrom(const Req_C_CopyObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_CopyObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ptemplate_.MergeFrom(from.ptemplate_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000002u) {
      hobject_ = from.hobject_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulcount_ = from.ulcount_;
    }
    if (cached_has_bits & 0x00000008u) {
      phnewobject_ = from.phnewobject_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_CopyObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_CopyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_CopyObject::CopyFrom(const Req_C_CopyObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_CopyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_CopyObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ptemplate())) return false;
  return true;
}

void Req_C_CopyObject::Swap(Req_C_CopyObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_CopyObject::InternalSwap(Req_C_CopyObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ptemplate_)->InternalSwap(CastToBase(&other->ptemplate_));
  swap(hsession_, other->hsession_);
  swap(hobject_, other->hobject_);
  swap(ulcount_, other->ulcount_);
  swap(phnewobject_, other->phnewobject_);
}

::google::protobuf::Metadata Req_C_CopyObject::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_CopyObject::InitAsDefaultInstance() {
}
class Rsp_C_CopyObject::HasBitSetters {
 public:
  static void set_has_phnewobject(Rsp_C_CopyObject* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_CopyObject::kPhNewObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_CopyObject::Rsp_C_CopyObject()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_CopyObject)
}
Rsp_C_CopyObject::Rsp_C_CopyObject(const Rsp_C_CopyObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phnewobject_ = from.phnewobject_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_CopyObject)
}

void Rsp_C_CopyObject::SharedCtor() {
  phnewobject_ = 0u;
}

Rsp_C_CopyObject::~Rsp_C_CopyObject() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_CopyObject)
  SharedDtor();
}

void Rsp_C_CopyObject::SharedDtor() {
}

void Rsp_C_CopyObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_CopyObject& Rsp_C_CopyObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_CopyObject_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_CopyObject::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_CopyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phnewobject_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_CopyObject::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_CopyObject*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 phNewObject = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_phnewobject(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_CopyObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_CopyObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 phNewObject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_phnewobject(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phnewobject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_CopyObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_CopyObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_CopyObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_CopyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phNewObject = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->phnewobject(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_CopyObject)
}

::google::protobuf::uint8* Rsp_C_CopyObject::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_CopyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phNewObject = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->phnewobject(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_CopyObject)
  return target;
}

size_t Rsp_C_CopyObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_CopyObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 phNewObject = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phnewobject());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_CopyObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_CopyObject)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_CopyObject* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_CopyObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_CopyObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_CopyObject)
    MergeFrom(*source);
  }
}

void Rsp_C_CopyObject::MergeFrom(const Rsp_C_CopyObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_CopyObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_phnewobject()) {
    set_phnewobject(from.phnewobject());
  }
}

void Rsp_C_CopyObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_CopyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_CopyObject::CopyFrom(const Rsp_C_CopyObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_CopyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_CopyObject::IsInitialized() const {
  return true;
}

void Rsp_C_CopyObject::Swap(Rsp_C_CopyObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_CopyObject::InternalSwap(Rsp_C_CopyObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(phnewobject_, other->phnewobject_);
}

::google::protobuf::Metadata Rsp_C_CopyObject::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_DestroyObject::InitAsDefaultInstance() {
}
class Req_C_DestroyObject::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_DestroyObject* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hobject(Req_C_DestroyObject* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_DestroyObject::kHSessionFieldNumber;
const int Req_C_DestroyObject::kHObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_DestroyObject::Req_C_DestroyObject()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_DestroyObject)
}
Req_C_DestroyObject::Req_C_DestroyObject(const Req_C_DestroyObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&hobject_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(hobject_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_DestroyObject)
}

void Req_C_DestroyObject::SharedCtor() {
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hobject_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(hobject_));
}

Req_C_DestroyObject::~Req_C_DestroyObject() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_DestroyObject)
  SharedDtor();
}

void Req_C_DestroyObject::SharedDtor() {
}

void Req_C_DestroyObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_DestroyObject& Req_C_DestroyObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_DestroyObject_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_DestroyObject::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_DestroyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hobject_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(hobject_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_DestroyObject::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_DestroyObject*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 hObject = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_hobject(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_DestroyObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_DestroyObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hObject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_hobject(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hobject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_DestroyObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_DestroyObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_DestroyObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_DestroyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // required uint32 hObject = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hobject(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_DestroyObject)
}

::google::protobuf::uint8* Req_C_DestroyObject::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_DestroyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // required uint32 hObject = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hobject(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_DestroyObject)
  return target;
}

size_t Req_C_DestroyObject::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_DestroyObject)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hobject()) {
    // required uint32 hObject = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hobject());
  }

  return total_size;
}
size_t Req_C_DestroyObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_DestroyObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hObject = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hobject());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_DestroyObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_DestroyObject)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_DestroyObject* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_DestroyObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_DestroyObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_DestroyObject)
    MergeFrom(*source);
  }
}

void Req_C_DestroyObject::MergeFrom(const Req_C_DestroyObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_DestroyObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000002u) {
      hobject_ = from.hobject_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_DestroyObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_DestroyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_DestroyObject::CopyFrom(const Req_C_DestroyObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_DestroyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_DestroyObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Req_C_DestroyObject::Swap(Req_C_DestroyObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_DestroyObject::InternalSwap(Req_C_DestroyObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(hsession_, other->hsession_);
  swap(hobject_, other->hobject_);
}

::google::protobuf::Metadata Req_C_DestroyObject::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_DestroyObject::InitAsDefaultInstance() {
}
class Rsp_C_DestroyObject::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_DestroyObject::Rsp_C_DestroyObject()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_DestroyObject)
}
Rsp_C_DestroyObject::Rsp_C_DestroyObject(const Rsp_C_DestroyObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_DestroyObject)
}

void Rsp_C_DestroyObject::SharedCtor() {
}

Rsp_C_DestroyObject::~Rsp_C_DestroyObject() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_DestroyObject)
  SharedDtor();
}

void Rsp_C_DestroyObject::SharedDtor() {
}

void Rsp_C_DestroyObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_DestroyObject& Rsp_C_DestroyObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_DestroyObject_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_DestroyObject::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_DestroyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_DestroyObject::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_DestroyObject*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_DestroyObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_DestroyObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_DestroyObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_DestroyObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_DestroyObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_DestroyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_DestroyObject)
}

::google::protobuf::uint8* Rsp_C_DestroyObject::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_DestroyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_DestroyObject)
  return target;
}

size_t Rsp_C_DestroyObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_DestroyObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_DestroyObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_DestroyObject)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_DestroyObject* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_DestroyObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_DestroyObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_DestroyObject)
    MergeFrom(*source);
  }
}

void Rsp_C_DestroyObject::MergeFrom(const Rsp_C_DestroyObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_DestroyObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_DestroyObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_DestroyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_DestroyObject::CopyFrom(const Rsp_C_DestroyObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_DestroyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_DestroyObject::IsInitialized() const {
  return true;
}

void Rsp_C_DestroyObject::Swap(Rsp_C_DestroyObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_DestroyObject::InternalSwap(Rsp_C_DestroyObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_DestroyObject::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GetObjectSize::InitAsDefaultInstance() {
}
class Req_C_GetObjectSize::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_GetObjectSize* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hobject(Req_C_GetObjectSize* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pulsize(Req_C_GetObjectSize* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GetObjectSize::kHSessionFieldNumber;
const int Req_C_GetObjectSize::kHObjectFieldNumber;
const int Req_C_GetObjectSize::kPulSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GetObjectSize::Req_C_GetObjectSize()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GetObjectSize)
}
Req_C_GetObjectSize::Req_C_GetObjectSize(const Req_C_GetObjectSize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulsize_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulsize_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GetObjectSize)
}

void Req_C_GetObjectSize::SharedCtor() {
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulsize_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulsize_));
}

Req_C_GetObjectSize::~Req_C_GetObjectSize() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GetObjectSize)
  SharedDtor();
}

void Req_C_GetObjectSize::SharedDtor() {
}

void Req_C_GetObjectSize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GetObjectSize& Req_C_GetObjectSize::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GetObjectSize_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GetObjectSize::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GetObjectSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulsize_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulsize_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GetObjectSize::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GetObjectSize*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 hObject = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_hobject(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 pulSize = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_pulsize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GetObjectSize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GetObjectSize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hObject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_hobject(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hobject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_pulsize(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GetObjectSize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GetObjectSize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GetObjectSize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GetObjectSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // required uint32 hObject = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hobject(), output);
  }

  // optional uint32 pulSize = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pulsize(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GetObjectSize)
}

::google::protobuf::uint8* Req_C_GetObjectSize::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GetObjectSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // required uint32 hObject = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hobject(), target);
  }

  // optional uint32 pulSize = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pulsize(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GetObjectSize)
  return target;
}

size_t Req_C_GetObjectSize::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_GetObjectSize)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hobject()) {
    // required uint32 hObject = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hobject());
  }

  return total_size;
}
size_t Req_C_GetObjectSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GetObjectSize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hObject = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hobject());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 pulSize = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GetObjectSize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GetObjectSize)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GetObjectSize* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GetObjectSize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GetObjectSize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GetObjectSize)
    MergeFrom(*source);
  }
}

void Req_C_GetObjectSize::MergeFrom(const Req_C_GetObjectSize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GetObjectSize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000002u) {
      hobject_ = from.hobject_;
    }
    if (cached_has_bits & 0x00000004u) {
      pulsize_ = from.pulsize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_GetObjectSize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GetObjectSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GetObjectSize::CopyFrom(const Req_C_GetObjectSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GetObjectSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GetObjectSize::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Req_C_GetObjectSize::Swap(Req_C_GetObjectSize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GetObjectSize::InternalSwap(Req_C_GetObjectSize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(hsession_, other->hsession_);
  swap(hobject_, other->hobject_);
  swap(pulsize_, other->pulsize_);
}

::google::protobuf::Metadata Req_C_GetObjectSize::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GetObjectSize::InitAsDefaultInstance() {
}
class Rsp_C_GetObjectSize::HasBitSetters {
 public:
  static void set_has_pulsize(Rsp_C_GetObjectSize* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GetObjectSize::kPulSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GetObjectSize::Rsp_C_GetObjectSize()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GetObjectSize)
}
Rsp_C_GetObjectSize::Rsp_C_GetObjectSize(const Rsp_C_GetObjectSize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pulsize_ = from.pulsize_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GetObjectSize)
}

void Rsp_C_GetObjectSize::SharedCtor() {
  pulsize_ = 0u;
}

Rsp_C_GetObjectSize::~Rsp_C_GetObjectSize() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GetObjectSize)
  SharedDtor();
}

void Rsp_C_GetObjectSize::SharedDtor() {
}

void Rsp_C_GetObjectSize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GetObjectSize& Rsp_C_GetObjectSize::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GetObjectSize_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GetObjectSize::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GetObjectSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pulsize_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GetObjectSize::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GetObjectSize*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 pulSize = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_pulsize(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GetObjectSize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GetObjectSize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pulSize = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_pulsize(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GetObjectSize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GetObjectSize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GetObjectSize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GetObjectSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pulSize = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pulsize(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GetObjectSize)
}

::google::protobuf::uint8* Rsp_C_GetObjectSize::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GetObjectSize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pulSize = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pulsize(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GetObjectSize)
  return target;
}

size_t Rsp_C_GetObjectSize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GetObjectSize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 pulSize = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GetObjectSize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GetObjectSize)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GetObjectSize* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GetObjectSize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GetObjectSize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GetObjectSize)
    MergeFrom(*source);
  }
}

void Rsp_C_GetObjectSize::MergeFrom(const Rsp_C_GetObjectSize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GetObjectSize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pulsize()) {
    set_pulsize(from.pulsize());
  }
}

void Rsp_C_GetObjectSize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GetObjectSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GetObjectSize::CopyFrom(const Rsp_C_GetObjectSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GetObjectSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GetObjectSize::IsInitialized() const {
  return true;
}

void Rsp_C_GetObjectSize::Swap(Rsp_C_GetObjectSize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GetObjectSize::InternalSwap(Rsp_C_GetObjectSize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pulsize_, other->pulsize_);
}

::google::protobuf::Metadata Rsp_C_GetObjectSize::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GetAttributeValue::InitAsDefaultInstance() {
}
class Req_C_GetAttributeValue::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_GetAttributeValue* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hobject(Req_C_GetAttributeValue* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ulcount(Req_C_GetAttributeValue* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GetAttributeValue::kHSessionFieldNumber;
const int Req_C_GetAttributeValue::kHObjectFieldNumber;
const int Req_C_GetAttributeValue::kPTemplateFieldNumber;
const int Req_C_GetAttributeValue::kUlCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GetAttributeValue::Req_C_GetAttributeValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GetAttributeValue)
}
Req_C_GetAttributeValue::Req_C_GetAttributeValue(const Req_C_GetAttributeValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ptemplate_(from.ptemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulcount_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulcount_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GetAttributeValue)
}

void Req_C_GetAttributeValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_GetAttributeValue_pkcs11_2eproto.base);
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulcount_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulcount_));
}

Req_C_GetAttributeValue::~Req_C_GetAttributeValue() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GetAttributeValue)
  SharedDtor();
}

void Req_C_GetAttributeValue::SharedDtor() {
}

void Req_C_GetAttributeValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GetAttributeValue& Req_C_GetAttributeValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GetAttributeValue_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GetAttributeValue::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GetAttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptemplate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulcount_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GetAttributeValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GetAttributeValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 hObject = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_hobject(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ptemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // required uint32 ulCount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_ulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GetAttributeValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GetAttributeValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hObject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_hobject(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hobject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ptemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_ulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GetAttributeValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GetAttributeValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GetAttributeValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GetAttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // required uint32 hObject = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hobject(), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->ptemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulCount = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GetAttributeValue)
}

::google::protobuf::uint8* Req_C_GetAttributeValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GetAttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // required uint32 hObject = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hobject(), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->ptemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulCount = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GetAttributeValue)
  return target;
}

size_t Req_C_GetAttributeValue::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_GetAttributeValue)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hobject()) {
    // required uint32 hObject = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hobject());
  }

  if (has_ulcount()) {
    // required uint32 ulCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulcount());
  }

  return total_size;
}
size_t Req_C_GetAttributeValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GetAttributeValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hObject = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hobject());

    // required uint32 ulCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->ptemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ptemplate(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GetAttributeValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GetAttributeValue)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GetAttributeValue* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GetAttributeValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GetAttributeValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GetAttributeValue)
    MergeFrom(*source);
  }
}

void Req_C_GetAttributeValue::MergeFrom(const Req_C_GetAttributeValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GetAttributeValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ptemplate_.MergeFrom(from.ptemplate_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000002u) {
      hobject_ = from.hobject_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulcount_ = from.ulcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_GetAttributeValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GetAttributeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GetAttributeValue::CopyFrom(const Req_C_GetAttributeValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GetAttributeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GetAttributeValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ptemplate())) return false;
  return true;
}

void Req_C_GetAttributeValue::Swap(Req_C_GetAttributeValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GetAttributeValue::InternalSwap(Req_C_GetAttributeValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ptemplate_)->InternalSwap(CastToBase(&other->ptemplate_));
  swap(hsession_, other->hsession_);
  swap(hobject_, other->hobject_);
  swap(ulcount_, other->ulcount_);
}

::google::protobuf::Metadata Req_C_GetAttributeValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GetAttributeValue::InitAsDefaultInstance() {
}
class Rsp_C_GetAttributeValue::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GetAttributeValue::kPTemplateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GetAttributeValue::Rsp_C_GetAttributeValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GetAttributeValue)
}
Rsp_C_GetAttributeValue::Rsp_C_GetAttributeValue(const Rsp_C_GetAttributeValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ptemplate_(from.ptemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GetAttributeValue)
}

void Rsp_C_GetAttributeValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_GetAttributeValue_pkcs11_2eproto.base);
}

Rsp_C_GetAttributeValue::~Rsp_C_GetAttributeValue() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  SharedDtor();
}

void Rsp_C_GetAttributeValue::SharedDtor() {
}

void Rsp_C_GetAttributeValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GetAttributeValue& Rsp_C_GetAttributeValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GetAttributeValue_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GetAttributeValue::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptemplate_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GetAttributeValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GetAttributeValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ptemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GetAttributeValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ptemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GetAttributeValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->ptemplate(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GetAttributeValue)
}

::google::protobuf::uint8* Rsp_C_GetAttributeValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->ptemplate(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  return target;
}

size_t Rsp_C_GetAttributeValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->ptemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ptemplate(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GetAttributeValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GetAttributeValue* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GetAttributeValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GetAttributeValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GetAttributeValue)
    MergeFrom(*source);
  }
}

void Rsp_C_GetAttributeValue::MergeFrom(const Rsp_C_GetAttributeValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ptemplate_.MergeFrom(from.ptemplate_);
}

void Rsp_C_GetAttributeValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GetAttributeValue::CopyFrom(const Rsp_C_GetAttributeValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GetAttributeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GetAttributeValue::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->ptemplate())) return false;
  return true;
}

void Rsp_C_GetAttributeValue::Swap(Rsp_C_GetAttributeValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GetAttributeValue::InternalSwap(Rsp_C_GetAttributeValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ptemplate_)->InternalSwap(CastToBase(&other->ptemplate_));
}

::google::protobuf::Metadata Rsp_C_GetAttributeValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_SetAttributeValue::InitAsDefaultInstance() {
}
class Req_C_SetAttributeValue::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_SetAttributeValue* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hobject(Req_C_SetAttributeValue* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ulcount(Req_C_SetAttributeValue* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_SetAttributeValue::kHSessionFieldNumber;
const int Req_C_SetAttributeValue::kHObjectFieldNumber;
const int Req_C_SetAttributeValue::kPTemplateFieldNumber;
const int Req_C_SetAttributeValue::kUlCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_SetAttributeValue::Req_C_SetAttributeValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_SetAttributeValue)
}
Req_C_SetAttributeValue::Req_C_SetAttributeValue(const Req_C_SetAttributeValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ptemplate_(from.ptemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulcount_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulcount_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_SetAttributeValue)
}

void Req_C_SetAttributeValue::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_SetAttributeValue_pkcs11_2eproto.base);
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulcount_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulcount_));
}

Req_C_SetAttributeValue::~Req_C_SetAttributeValue() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_SetAttributeValue)
  SharedDtor();
}

void Req_C_SetAttributeValue::SharedDtor() {
}

void Req_C_SetAttributeValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_SetAttributeValue& Req_C_SetAttributeValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_SetAttributeValue_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_SetAttributeValue::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_SetAttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptemplate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulcount_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_SetAttributeValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_SetAttributeValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 hObject = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_hobject(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ptemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // required uint32 ulCount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_ulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_SetAttributeValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_SetAttributeValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hObject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_hobject(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hobject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ptemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_ulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_SetAttributeValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_SetAttributeValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_SetAttributeValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_SetAttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // required uint32 hObject = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hobject(), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->ptemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulCount = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_SetAttributeValue)
}

::google::protobuf::uint8* Req_C_SetAttributeValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_SetAttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // required uint32 hObject = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hobject(), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->ptemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulCount = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_SetAttributeValue)
  return target;
}

size_t Req_C_SetAttributeValue::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_SetAttributeValue)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hobject()) {
    // required uint32 hObject = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hobject());
  }

  if (has_ulcount()) {
    // required uint32 ulCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulcount());
  }

  return total_size;
}
size_t Req_C_SetAttributeValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_SetAttributeValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hObject = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hobject());

    // required uint32 ulCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->ptemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ptemplate(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_SetAttributeValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_SetAttributeValue)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_SetAttributeValue* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_SetAttributeValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_SetAttributeValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_SetAttributeValue)
    MergeFrom(*source);
  }
}

void Req_C_SetAttributeValue::MergeFrom(const Req_C_SetAttributeValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_SetAttributeValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ptemplate_.MergeFrom(from.ptemplate_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000002u) {
      hobject_ = from.hobject_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulcount_ = from.ulcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_SetAttributeValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_SetAttributeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_SetAttributeValue::CopyFrom(const Req_C_SetAttributeValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_SetAttributeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_SetAttributeValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ptemplate())) return false;
  return true;
}

void Req_C_SetAttributeValue::Swap(Req_C_SetAttributeValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_SetAttributeValue::InternalSwap(Req_C_SetAttributeValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ptemplate_)->InternalSwap(CastToBase(&other->ptemplate_));
  swap(hsession_, other->hsession_);
  swap(hobject_, other->hobject_);
  swap(ulcount_, other->ulcount_);
}

::google::protobuf::Metadata Req_C_SetAttributeValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_SetAttributeValue::InitAsDefaultInstance() {
}
class Rsp_C_SetAttributeValue::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_SetAttributeValue::Rsp_C_SetAttributeValue()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_SetAttributeValue)
}
Rsp_C_SetAttributeValue::Rsp_C_SetAttributeValue(const Rsp_C_SetAttributeValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_SetAttributeValue)
}

void Rsp_C_SetAttributeValue::SharedCtor() {
}

Rsp_C_SetAttributeValue::~Rsp_C_SetAttributeValue() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  SharedDtor();
}

void Rsp_C_SetAttributeValue::SharedDtor() {
}

void Rsp_C_SetAttributeValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_SetAttributeValue& Rsp_C_SetAttributeValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_SetAttributeValue_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_SetAttributeValue::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_SetAttributeValue::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_SetAttributeValue*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_SetAttributeValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_SetAttributeValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_SetAttributeValue)
}

::google::protobuf::uint8* Rsp_C_SetAttributeValue::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  return target;
}

size_t Rsp_C_SetAttributeValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_SetAttributeValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_SetAttributeValue* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_SetAttributeValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_SetAttributeValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_SetAttributeValue)
    MergeFrom(*source);
  }
}

void Rsp_C_SetAttributeValue::MergeFrom(const Rsp_C_SetAttributeValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_SetAttributeValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_SetAttributeValue::CopyFrom(const Rsp_C_SetAttributeValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_SetAttributeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_SetAttributeValue::IsInitialized() const {
  return true;
}

void Rsp_C_SetAttributeValue::Swap(Rsp_C_SetAttributeValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_SetAttributeValue::InternalSwap(Rsp_C_SetAttributeValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_SetAttributeValue::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_FindObjectsInit::InitAsDefaultInstance() {
}
class Req_C_FindObjectsInit::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_FindObjectsInit* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulcount(Req_C_FindObjectsInit* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_FindObjectsInit::kHSessionFieldNumber;
const int Req_C_FindObjectsInit::kPTemplateFieldNumber;
const int Req_C_FindObjectsInit::kUlCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_FindObjectsInit::Req_C_FindObjectsInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_FindObjectsInit)
}
Req_C_FindObjectsInit::Req_C_FindObjectsInit(const Req_C_FindObjectsInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ptemplate_(from.ptemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulcount_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulcount_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_FindObjectsInit)
}

void Req_C_FindObjectsInit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_FindObjectsInit_pkcs11_2eproto.base);
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulcount_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulcount_));
}

Req_C_FindObjectsInit::~Req_C_FindObjectsInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_FindObjectsInit)
  SharedDtor();
}

void Req_C_FindObjectsInit::SharedDtor() {
}

void Req_C_FindObjectsInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_FindObjectsInit& Req_C_FindObjectsInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_FindObjectsInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_FindObjectsInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_FindObjectsInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptemplate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulcount_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_FindObjectsInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_FindObjectsInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ptemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // required uint32 ulCount = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_FindObjectsInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_FindObjectsInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ptemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_FindObjectsInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_FindObjectsInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_FindObjectsInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_FindObjectsInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->ptemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulCount = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_FindObjectsInit)
}

::google::protobuf::uint8* Req_C_FindObjectsInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_FindObjectsInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ptemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulCount = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_FindObjectsInit)
  return target;
}

size_t Req_C_FindObjectsInit::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_FindObjectsInit)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulcount()) {
    // required uint32 ulCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulcount());
  }

  return total_size;
}
size_t Req_C_FindObjectsInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_FindObjectsInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ptemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ptemplate(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_FindObjectsInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_FindObjectsInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_FindObjectsInit* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_FindObjectsInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_FindObjectsInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_FindObjectsInit)
    MergeFrom(*source);
  }
}

void Req_C_FindObjectsInit::MergeFrom(const Req_C_FindObjectsInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_FindObjectsInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ptemplate_.MergeFrom(from.ptemplate_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000002u) {
      ulcount_ = from.ulcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_FindObjectsInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_FindObjectsInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_FindObjectsInit::CopyFrom(const Req_C_FindObjectsInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_FindObjectsInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_FindObjectsInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ptemplate())) return false;
  return true;
}

void Req_C_FindObjectsInit::Swap(Req_C_FindObjectsInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_FindObjectsInit::InternalSwap(Req_C_FindObjectsInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ptemplate_)->InternalSwap(CastToBase(&other->ptemplate_));
  swap(hsession_, other->hsession_);
  swap(ulcount_, other->ulcount_);
}

::google::protobuf::Metadata Req_C_FindObjectsInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_FindObjectsInit::InitAsDefaultInstance() {
}
class Rsp_C_FindObjectsInit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_FindObjectsInit::Rsp_C_FindObjectsInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_FindObjectsInit)
}
Rsp_C_FindObjectsInit::Rsp_C_FindObjectsInit(const Rsp_C_FindObjectsInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_FindObjectsInit)
}

void Rsp_C_FindObjectsInit::SharedCtor() {
}

Rsp_C_FindObjectsInit::~Rsp_C_FindObjectsInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  SharedDtor();
}

void Rsp_C_FindObjectsInit::SharedDtor() {
}

void Rsp_C_FindObjectsInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_FindObjectsInit& Rsp_C_FindObjectsInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_FindObjectsInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_FindObjectsInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_FindObjectsInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_FindObjectsInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_FindObjectsInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_FindObjectsInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_FindObjectsInit)
}

::google::protobuf::uint8* Rsp_C_FindObjectsInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  return target;
}

size_t Rsp_C_FindObjectsInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_FindObjectsInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_FindObjectsInit* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_FindObjectsInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_FindObjectsInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_FindObjectsInit)
    MergeFrom(*source);
  }
}

void Rsp_C_FindObjectsInit::MergeFrom(const Rsp_C_FindObjectsInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_FindObjectsInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_FindObjectsInit::CopyFrom(const Rsp_C_FindObjectsInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_FindObjectsInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_FindObjectsInit::IsInitialized() const {
  return true;
}

void Rsp_C_FindObjectsInit::Swap(Rsp_C_FindObjectsInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_FindObjectsInit::InternalSwap(Rsp_C_FindObjectsInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_FindObjectsInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_FindObjects::InitAsDefaultInstance() {
}
class Req_C_FindObjects::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_FindObjects* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulmaxobjectcount(Req_C_FindObjects* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pulobjectcount(Req_C_FindObjects* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_FindObjects::kHSessionFieldNumber;
const int Req_C_FindObjects::kPhObjectFieldNumber;
const int Req_C_FindObjects::kUlMaxObjectCountFieldNumber;
const int Req_C_FindObjects::kPulObjectCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_FindObjects::Req_C_FindObjects()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_FindObjects)
}
Req_C_FindObjects::Req_C_FindObjects(const Req_C_FindObjects& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      phobject_(from.phobject_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulobjectcount_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulobjectcount_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_FindObjects)
}

void Req_C_FindObjects::SharedCtor() {
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulobjectcount_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulobjectcount_));
}

Req_C_FindObjects::~Req_C_FindObjects() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_FindObjects)
  SharedDtor();
}

void Req_C_FindObjects::SharedDtor() {
}

void Req_C_FindObjects::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_FindObjects& Req_C_FindObjects::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_FindObjects_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_FindObjects::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_FindObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phobject_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulobjectcount_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulobjectcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_FindObjects::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_FindObjects*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated uint32 phObject = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 16) {
          do {
            msg->add_phobject(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_phobject();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // required uint32 ulMaxObjectCount = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulmaxobjectcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 pulObjectCount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_pulobjectcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_FindObjects::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_FindObjects)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 phObject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_phobject())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_phobject())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMaxObjectCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulmaxobjectcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmaxobjectcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulObjectCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_pulobjectcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulobjectcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_FindObjects)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_FindObjects)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_FindObjects::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_FindObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // repeated uint32 phObject = 2;
  for (int i = 0, n = this->phobject_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->phobject(i), output);
  }

  // required uint32 ulMaxObjectCount = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulmaxobjectcount(), output);
  }

  // optional uint32 pulObjectCount = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pulobjectcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_FindObjects)
}

::google::protobuf::uint8* Req_C_FindObjects::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_FindObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // repeated uint32 phObject = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->phobject_, target);

  // required uint32 ulMaxObjectCount = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulmaxobjectcount(), target);
  }

  // optional uint32 pulObjectCount = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pulobjectcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_FindObjects)
  return target;
}

size_t Req_C_FindObjects::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_FindObjects)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulmaxobjectcount()) {
    // required uint32 ulMaxObjectCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmaxobjectcount());
  }

  return total_size;
}
size_t Req_C_FindObjects::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_FindObjects)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulMaxObjectCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmaxobjectcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 phObject = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->phobject_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->phobject_size());
    total_size += data_size;
  }

  // optional uint32 pulObjectCount = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulobjectcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_FindObjects::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_FindObjects)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_FindObjects* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_FindObjects>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_FindObjects)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_FindObjects)
    MergeFrom(*source);
  }
}

void Req_C_FindObjects::MergeFrom(const Req_C_FindObjects& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_FindObjects)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  phobject_.MergeFrom(from.phobject_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000002u) {
      ulmaxobjectcount_ = from.ulmaxobjectcount_;
    }
    if (cached_has_bits & 0x00000004u) {
      pulobjectcount_ = from.pulobjectcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_FindObjects::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_FindObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_FindObjects::CopyFrom(const Req_C_FindObjects& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_FindObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_FindObjects::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Req_C_FindObjects::Swap(Req_C_FindObjects* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_FindObjects::InternalSwap(Req_C_FindObjects* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  phobject_.InternalSwap(&other->phobject_);
  swap(hsession_, other->hsession_);
  swap(ulmaxobjectcount_, other->ulmaxobjectcount_);
  swap(pulobjectcount_, other->pulobjectcount_);
}

::google::protobuf::Metadata Req_C_FindObjects::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_FindObjects::InitAsDefaultInstance() {
}
class Rsp_C_FindObjects::HasBitSetters {
 public:
  static void set_has_pulobjectcount(Rsp_C_FindObjects* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_FindObjects::kPhObjectFieldNumber;
const int Rsp_C_FindObjects::kPulObjectCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_FindObjects::Rsp_C_FindObjects()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_FindObjects)
}
Rsp_C_FindObjects::Rsp_C_FindObjects(const Rsp_C_FindObjects& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      phobject_(from.phobject_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pulobjectcount_ = from.pulobjectcount_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_FindObjects)
}

void Rsp_C_FindObjects::SharedCtor() {
  pulobjectcount_ = 0u;
}

Rsp_C_FindObjects::~Rsp_C_FindObjects() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_FindObjects)
  SharedDtor();
}

void Rsp_C_FindObjects::SharedDtor() {
}

void Rsp_C_FindObjects::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_FindObjects& Rsp_C_FindObjects::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_FindObjects_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_FindObjects::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_FindObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phobject_.Clear();
  pulobjectcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_FindObjects::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_FindObjects*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 phObject = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 8) {
          do {
            msg->add_phobject(::google::protobuf::internal::ReadVarint(&ptr));
            GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
            if (ptr >= end) break;
          } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
        object = msg->mutable_phobject();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        if (size) ptr = parser_till_end(ptr, newend, object, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
        break;
      }
      // optional uint32 pulObjectCount = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulobjectcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_FindObjects::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_FindObjects)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 phObject = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_phobject())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_phobject())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulObjectCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulobjectcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulobjectcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_FindObjects)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_FindObjects)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_FindObjects::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_FindObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 phObject = 1;
  for (int i = 0, n = this->phobject_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->phobject(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 pulObjectCount = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulobjectcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_FindObjects)
}

::google::protobuf::uint8* Rsp_C_FindObjects::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_FindObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 phObject = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->phobject_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 pulObjectCount = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulobjectcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_FindObjects)
  return target;
}

size_t Rsp_C_FindObjects::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_FindObjects)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 phObject = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->phobject_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->phobject_size());
    total_size += data_size;
  }

  // optional uint32 pulObjectCount = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulobjectcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_FindObjects::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_FindObjects)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_FindObjects* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_FindObjects>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_FindObjects)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_FindObjects)
    MergeFrom(*source);
  }
}

void Rsp_C_FindObjects::MergeFrom(const Rsp_C_FindObjects& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_FindObjects)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  phobject_.MergeFrom(from.phobject_);
  if (from.has_pulobjectcount()) {
    set_pulobjectcount(from.pulobjectcount());
  }
}

void Rsp_C_FindObjects::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_FindObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_FindObjects::CopyFrom(const Rsp_C_FindObjects& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_FindObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_FindObjects::IsInitialized() const {
  return true;
}

void Rsp_C_FindObjects::Swap(Rsp_C_FindObjects* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_FindObjects::InternalSwap(Rsp_C_FindObjects* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  phobject_.InternalSwap(&other->phobject_);
  swap(pulobjectcount_, other->pulobjectcount_);
}

::google::protobuf::Metadata Rsp_C_FindObjects::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_FindObjectsFinal::InitAsDefaultInstance() {
}
class Req_C_FindObjectsFinal::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_FindObjectsFinal* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_FindObjectsFinal::kHSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_FindObjectsFinal::Req_C_FindObjectsFinal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_FindObjectsFinal)
}
Req_C_FindObjectsFinal::Req_C_FindObjectsFinal(const Req_C_FindObjectsFinal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hsession_ = from.hsession_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_FindObjectsFinal)
}

void Req_C_FindObjectsFinal::SharedCtor() {
  hsession_ = 0u;
}

Req_C_FindObjectsFinal::~Req_C_FindObjectsFinal() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_FindObjectsFinal)
  SharedDtor();
}

void Req_C_FindObjectsFinal::SharedDtor() {
}

void Req_C_FindObjectsFinal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_FindObjectsFinal& Req_C_FindObjectsFinal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_FindObjectsFinal_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_FindObjectsFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_FindObjectsFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hsession_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_FindObjectsFinal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_FindObjectsFinal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_FindObjectsFinal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_FindObjectsFinal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_FindObjectsFinal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_FindObjectsFinal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_FindObjectsFinal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_FindObjectsFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_FindObjectsFinal)
}

::google::protobuf::uint8* Req_C_FindObjectsFinal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_FindObjectsFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_FindObjectsFinal)
  return target;
}

size_t Req_C_FindObjectsFinal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_FindObjectsFinal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_FindObjectsFinal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_FindObjectsFinal)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_FindObjectsFinal* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_FindObjectsFinal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_FindObjectsFinal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_FindObjectsFinal)
    MergeFrom(*source);
  }
}

void Req_C_FindObjectsFinal::MergeFrom(const Req_C_FindObjectsFinal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_FindObjectsFinal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hsession()) {
    set_hsession(from.hsession());
  }
}

void Req_C_FindObjectsFinal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_FindObjectsFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_FindObjectsFinal::CopyFrom(const Req_C_FindObjectsFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_FindObjectsFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_FindObjectsFinal::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_FindObjectsFinal::Swap(Req_C_FindObjectsFinal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_FindObjectsFinal::InternalSwap(Req_C_FindObjectsFinal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(hsession_, other->hsession_);
}

::google::protobuf::Metadata Req_C_FindObjectsFinal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_FindObjectsFinal::InitAsDefaultInstance() {
}
class Rsp_C_FindObjectsFinal::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_FindObjectsFinal::Rsp_C_FindObjectsFinal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
}
Rsp_C_FindObjectsFinal::Rsp_C_FindObjectsFinal(const Rsp_C_FindObjectsFinal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
}

void Rsp_C_FindObjectsFinal::SharedCtor() {
}

Rsp_C_FindObjectsFinal::~Rsp_C_FindObjectsFinal() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  SharedDtor();
}

void Rsp_C_FindObjectsFinal::SharedDtor() {
}

void Rsp_C_FindObjectsFinal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_FindObjectsFinal& Rsp_C_FindObjectsFinal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_FindObjectsFinal_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_FindObjectsFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_FindObjectsFinal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_FindObjectsFinal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_FindObjectsFinal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_FindObjectsFinal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
}

::google::protobuf::uint8* Rsp_C_FindObjectsFinal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  return target;
}

size_t Rsp_C_FindObjectsFinal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_FindObjectsFinal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_FindObjectsFinal* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_FindObjectsFinal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
    MergeFrom(*source);
  }
}

void Rsp_C_FindObjectsFinal::MergeFrom(const Rsp_C_FindObjectsFinal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_FindObjectsFinal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_FindObjectsFinal::CopyFrom(const Rsp_C_FindObjectsFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_FindObjectsFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_FindObjectsFinal::IsInitialized() const {
  return true;
}

void Rsp_C_FindObjectsFinal::Swap(Rsp_C_FindObjectsFinal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_FindObjectsFinal::InternalSwap(Rsp_C_FindObjectsFinal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_FindObjectsFinal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_EncryptInit::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_EncryptInit_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_EncryptInit::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_EncryptInit* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_EncryptInit* msg);
  static void set_has_pmechanism(Req_C_EncryptInit* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hkey(Req_C_EncryptInit* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_EncryptInit::HasBitSetters::pmechanism(const Req_C_EncryptInit* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_EncryptInit::kHSessionFieldNumber;
const int Req_C_EncryptInit::kPMechanismFieldNumber;
const int Req_C_EncryptInit::kHKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_EncryptInit::Req_C_EncryptInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_EncryptInit)
}
Req_C_EncryptInit::Req_C_EncryptInit(const Req_C_EncryptInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&hkey_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_EncryptInit)
}

void Req_C_EncryptInit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_EncryptInit_pkcs11_2eproto.base);
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hkey_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(hkey_));
}

Req_C_EncryptInit::~Req_C_EncryptInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_EncryptInit)
  SharedDtor();
}

void Req_C_EncryptInit::SharedDtor() {
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_EncryptInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_EncryptInit& Req_C_EncryptInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_EncryptInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_EncryptInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_EncryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pmechanism_ != nullptr);
    pmechanism_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hkey_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_EncryptInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_EncryptInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint32 hKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_hkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_EncryptInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_EncryptInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_hkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_EncryptInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_EncryptInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_EncryptInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_EncryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_EncryptInit)
}

::google::protobuf::uint8* Req_C_EncryptInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_EncryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_EncryptInit)
  return target;
}

size_t Req_C_EncryptInit::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_EncryptInit)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hkey()) {
    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());
  }

  return total_size;
}
size_t Req_C_EncryptInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_EncryptInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmechanism_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_EncryptInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_EncryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_EncryptInit* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_EncryptInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_EncryptInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_EncryptInit)
    MergeFrom(*source);
  }
}

void Req_C_EncryptInit::MergeFrom(const Req_C_EncryptInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_EncryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      hkey_ = from.hkey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_EncryptInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_EncryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_EncryptInit::CopyFrom(const Req_C_EncryptInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_EncryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_EncryptInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_EncryptInit::Swap(Req_C_EncryptInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_EncryptInit::InternalSwap(Req_C_EncryptInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(hkey_, other->hkey_);
}

::google::protobuf::Metadata Req_C_EncryptInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_EncryptInit::InitAsDefaultInstance() {
}
class Rsp_C_EncryptInit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_EncryptInit::Rsp_C_EncryptInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_EncryptInit)
}
Rsp_C_EncryptInit::Rsp_C_EncryptInit(const Rsp_C_EncryptInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_EncryptInit)
}

void Rsp_C_EncryptInit::SharedCtor() {
}

Rsp_C_EncryptInit::~Rsp_C_EncryptInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_EncryptInit)
  SharedDtor();
}

void Rsp_C_EncryptInit::SharedDtor() {
}

void Rsp_C_EncryptInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_EncryptInit& Rsp_C_EncryptInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_EncryptInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_EncryptInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_EncryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_EncryptInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_EncryptInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_EncryptInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_EncryptInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_EncryptInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_EncryptInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_EncryptInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_EncryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_EncryptInit)
}

::google::protobuf::uint8* Rsp_C_EncryptInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_EncryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_EncryptInit)
  return target;
}

size_t Rsp_C_EncryptInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_EncryptInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_EncryptInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_EncryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_EncryptInit* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_EncryptInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_EncryptInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_EncryptInit)
    MergeFrom(*source);
  }
}

void Rsp_C_EncryptInit::MergeFrom(const Rsp_C_EncryptInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_EncryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_EncryptInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_EncryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_EncryptInit::CopyFrom(const Rsp_C_EncryptInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_EncryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_EncryptInit::IsInitialized() const {
  return true;
}

void Rsp_C_EncryptInit::Swap(Rsp_C_EncryptInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_EncryptInit::InternalSwap(Rsp_C_EncryptInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_EncryptInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Encrypt::InitAsDefaultInstance() {
}
class Req_C_Encrypt::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Encrypt* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pdata(Req_C_Encrypt* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_uldatalen(Req_C_Encrypt* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pencrypteddata(Req_C_Encrypt* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pulencrypteddatalen(Req_C_Encrypt* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Encrypt::kHSessionFieldNumber;
const int Req_C_Encrypt::kPDataFieldNumber;
const int Req_C_Encrypt::kUlDataLenFieldNumber;
const int Req_C_Encrypt::kPEncryptedDataFieldNumber;
const int Req_C_Encrypt::kPulEncryptedDataLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Encrypt::Req_C_Encrypt()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Encrypt)
}
Req_C_Encrypt::Req_C_Encrypt(const Req_C_Encrypt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdata()) {
    pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
  }
  pencrypteddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencrypteddata()) {
    pencrypteddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencrypteddata_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulencrypteddatalen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulencrypteddatalen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Encrypt)
}

void Req_C_Encrypt::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Encrypt_pkcs11_2eproto.base);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pencrypteddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulencrypteddatalen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulencrypteddatalen_));
}

Req_C_Encrypt::~Req_C_Encrypt() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Encrypt)
  SharedDtor();
}

void Req_C_Encrypt::SharedDtor() {
  pdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pencrypteddata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Encrypt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Encrypt& Req_C_Encrypt::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Encrypt_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Encrypt::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Encrypt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pdata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pencrypteddata_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulencrypteddatalen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulencrypteddatalen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Encrypt::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Encrypt*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pData = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulDataLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_uldatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pEncryptedData = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencrypteddata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulEncryptedDataLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pulencrypteddatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Encrypt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Encrypt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulDataLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_uldatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uldatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pEncryptedData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencrypteddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulEncryptedDataLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pulencrypteddatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulencrypteddatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Encrypt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Encrypt)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Encrypt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Encrypt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pdata(), output);
  }

  // required uint32 ulDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uldatalen(), output);
  }

  // optional bytes pEncryptedData = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pencrypteddata(), output);
  }

  // optional uint32 pulEncryptedDataLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pulencrypteddatalen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Encrypt)
}

::google::protobuf::uint8* Req_C_Encrypt::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Encrypt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pData = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pdata(), target);
  }

  // required uint32 ulDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uldatalen(), target);
  }

  // optional bytes pEncryptedData = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pencrypteddata(), target);
  }

  // optional uint32 pulEncryptedDataLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pulencrypteddatalen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Encrypt)
  return target;
}

size_t Req_C_Encrypt::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Encrypt)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_uldatalen()) {
    // required uint32 ulDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldatalen());
  }

  return total_size;
}
size_t Req_C_Encrypt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Encrypt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldatalen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pData = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdata());
    }

    // optional bytes pEncryptedData = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencrypteddata());
    }

  }
  // optional uint32 pulEncryptedDataLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulencrypteddatalen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Encrypt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Encrypt)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Encrypt* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Encrypt>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Encrypt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Encrypt)
    MergeFrom(*source);
  }
}

void Req_C_Encrypt::MergeFrom(const Req_C_Encrypt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Encrypt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pencrypteddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencrypteddata_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      uldatalen_ = from.uldatalen_;
    }
    if (cached_has_bits & 0x00000010u) {
      pulencrypteddatalen_ = from.pulencrypteddatalen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Encrypt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Encrypt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Encrypt::CopyFrom(const Req_C_Encrypt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Encrypt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Encrypt::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_Encrypt::Swap(Req_C_Encrypt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Encrypt::InternalSwap(Req_C_Encrypt* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdata_.Swap(&other->pdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pencrypteddata_.Swap(&other->pencrypteddata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(uldatalen_, other->uldatalen_);
  swap(pulencrypteddatalen_, other->pulencrypteddatalen_);
}

::google::protobuf::Metadata Req_C_Encrypt::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Encrypt::InitAsDefaultInstance() {
}
class Rsp_C_Encrypt::HasBitSetters {
 public:
  static void set_has_pencrypteddata(Rsp_C_Encrypt* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulencrypteddatalen(Rsp_C_Encrypt* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Encrypt::kPEncryptedDataFieldNumber;
const int Rsp_C_Encrypt::kPulEncryptedDataLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Encrypt::Rsp_C_Encrypt()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Encrypt)
}
Rsp_C_Encrypt::Rsp_C_Encrypt(const Rsp_C_Encrypt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pencrypteddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencrypteddata()) {
    pencrypteddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencrypteddata_);
  }
  pulencrypteddatalen_ = from.pulencrypteddatalen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Encrypt)
}

void Rsp_C_Encrypt::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Encrypt_pkcs11_2eproto.base);
  pencrypteddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulencrypteddatalen_ = 0u;
}

Rsp_C_Encrypt::~Rsp_C_Encrypt() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Encrypt)
  SharedDtor();
}

void Rsp_C_Encrypt::SharedDtor() {
  pencrypteddata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Encrypt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Encrypt& Rsp_C_Encrypt::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Encrypt_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Encrypt::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Encrypt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pencrypteddata_.ClearNonDefaultToEmptyNoArena();
  }
  pulencrypteddatalen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Encrypt::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Encrypt*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pEncryptedData = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencrypteddata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulEncryptedDataLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulencrypteddatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Encrypt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Encrypt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pEncryptedData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencrypteddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulEncryptedDataLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulencrypteddatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulencrypteddatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Encrypt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Encrypt)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Encrypt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Encrypt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pEncryptedData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pencrypteddata(), output);
  }

  // optional uint32 pulEncryptedDataLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulencrypteddatalen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Encrypt)
}

::google::protobuf::uint8* Rsp_C_Encrypt::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Encrypt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pEncryptedData = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pencrypteddata(), target);
  }

  // optional uint32 pulEncryptedDataLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulencrypteddatalen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Encrypt)
  return target;
}

size_t Rsp_C_Encrypt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Encrypt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pEncryptedData = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencrypteddata());
    }

    // optional uint32 pulEncryptedDataLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulencrypteddatalen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Encrypt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Encrypt)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Encrypt* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Encrypt>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Encrypt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Encrypt)
    MergeFrom(*source);
  }
}

void Rsp_C_Encrypt::MergeFrom(const Rsp_C_Encrypt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Encrypt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pencrypteddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencrypteddata_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulencrypteddatalen_ = from.pulencrypteddatalen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Encrypt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Encrypt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Encrypt::CopyFrom(const Rsp_C_Encrypt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Encrypt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Encrypt::IsInitialized() const {
  return true;
}

void Rsp_C_Encrypt::Swap(Rsp_C_Encrypt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Encrypt::InternalSwap(Rsp_C_Encrypt* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pencrypteddata_.Swap(&other->pencrypteddata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulencrypteddatalen_, other->pulencrypteddatalen_);
}

::google::protobuf::Metadata Rsp_C_Encrypt::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_EncryptUpdate::InitAsDefaultInstance() {
}
class Req_C_EncryptUpdate::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_ppart(Req_C_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulpartlen(Req_C_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pencryptedpart(Req_C_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pulencryptedpartlen(Req_C_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_EncryptUpdate::kHSessionFieldNumber;
const int Req_C_EncryptUpdate::kPPartFieldNumber;
const int Req_C_EncryptUpdate::kUlPartLenFieldNumber;
const int Req_C_EncryptUpdate::kPEncryptedPartFieldNumber;
const int Req_C_EncryptUpdate::kPulEncryptedPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_EncryptUpdate::Req_C_EncryptUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_EncryptUpdate)
}
Req_C_EncryptUpdate::Req_C_EncryptUpdate(const Req_C_EncryptUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencryptedpart()) {
    pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulencryptedpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulencryptedpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_EncryptUpdate)
}

void Req_C_EncryptUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_EncryptUpdate_pkcs11_2eproto.base);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulencryptedpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulencryptedpartlen_));
}

Req_C_EncryptUpdate::~Req_C_EncryptUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_EncryptUpdate)
  SharedDtor();
}

void Req_C_EncryptUpdate::SharedDtor() {
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_EncryptUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_EncryptUpdate& Req_C_EncryptUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_EncryptUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_EncryptUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_EncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ppart_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pencryptedpart_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulencryptedpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulencryptedpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_EncryptUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_EncryptUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPart = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulPartLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pEncryptedPart = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulEncryptedPartLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pulencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_EncryptUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_EncryptUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPart = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulPartLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pEncryptedPart = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulEncryptedPartLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pulencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_EncryptUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_EncryptUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_EncryptUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_EncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pPart = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ppart(), output);
  }

  // required uint32 ulPartLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulpartlen(), output);
  }

  // optional bytes pEncryptedPart = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pencryptedpart(), output);
  }

  // optional uint32 pulEncryptedPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pulencryptedpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_EncryptUpdate)
}

::google::protobuf::uint8* Req_C_EncryptUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_EncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pPart = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ppart(), target);
  }

  // required uint32 ulPartLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulpartlen(), target);
  }

  // optional bytes pEncryptedPart = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pencryptedpart(), target);
  }

  // optional uint32 pulEncryptedPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pulencryptedpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_EncryptUpdate)
  return target;
}

size_t Req_C_EncryptUpdate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_EncryptUpdate)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulpartlen()) {
    // required uint32 ulPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());
  }

  return total_size;
}
size_t Req_C_EncryptUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_EncryptUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pPart = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppart());
    }

    // optional bytes pEncryptedPart = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencryptedpart());
    }

  }
  // optional uint32 pulEncryptedPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulencryptedpartlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_EncryptUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_EncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_EncryptUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_EncryptUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_EncryptUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_EncryptUpdate)
    MergeFrom(*source);
  }
}

void Req_C_EncryptUpdate::MergeFrom(const Req_C_EncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_EncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulpartlen_ = from.ulpartlen_;
    }
    if (cached_has_bits & 0x00000010u) {
      pulencryptedpartlen_ = from.pulencryptedpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_EncryptUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_EncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_EncryptUpdate::CopyFrom(const Req_C_EncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_EncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_EncryptUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_EncryptUpdate::Swap(Req_C_EncryptUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_EncryptUpdate::InternalSwap(Req_C_EncryptUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pencryptedpart_.Swap(&other->pencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulpartlen_, other->ulpartlen_);
  swap(pulencryptedpartlen_, other->pulencryptedpartlen_);
}

::google::protobuf::Metadata Req_C_EncryptUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_EncryptUpdate::InitAsDefaultInstance() {
}
class Rsp_C_EncryptUpdate::HasBitSetters {
 public:
  static void set_has_pencryptedpart(Rsp_C_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulencryptedpartlen(Rsp_C_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_EncryptUpdate::kPEncryptedPartFieldNumber;
const int Rsp_C_EncryptUpdate::kPulEncryptedPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_EncryptUpdate::Rsp_C_EncryptUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_EncryptUpdate)
}
Rsp_C_EncryptUpdate::Rsp_C_EncryptUpdate(const Rsp_C_EncryptUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencryptedpart()) {
    pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
  }
  pulencryptedpartlen_ = from.pulencryptedpartlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_EncryptUpdate)
}

void Rsp_C_EncryptUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_EncryptUpdate_pkcs11_2eproto.base);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulencryptedpartlen_ = 0u;
}

Rsp_C_EncryptUpdate::~Rsp_C_EncryptUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  SharedDtor();
}

void Rsp_C_EncryptUpdate::SharedDtor() {
  pencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_EncryptUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_EncryptUpdate& Rsp_C_EncryptUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_EncryptUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_EncryptUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pencryptedpart_.ClearNonDefaultToEmptyNoArena();
  }
  pulencryptedpartlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_EncryptUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_EncryptUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pEncryptedPart = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulEncryptedPartLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_EncryptUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pEncryptedPart = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulEncryptedPartLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_EncryptUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pEncryptedPart = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pencryptedpart(), output);
  }

  // optional uint32 pulEncryptedPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulencryptedpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_EncryptUpdate)
}

::google::protobuf::uint8* Rsp_C_EncryptUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pEncryptedPart = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pencryptedpart(), target);
  }

  // optional uint32 pulEncryptedPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulencryptedpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  return target;
}

size_t Rsp_C_EncryptUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pEncryptedPart = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencryptedpart());
    }

    // optional uint32 pulEncryptedPartLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulencryptedpartlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_EncryptUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_EncryptUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_EncryptUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_EncryptUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_EncryptUpdate)
    MergeFrom(*source);
  }
}

void Rsp_C_EncryptUpdate::MergeFrom(const Rsp_C_EncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulencryptedpartlen_ = from.pulencryptedpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_EncryptUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_EncryptUpdate::CopyFrom(const Rsp_C_EncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_EncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_EncryptUpdate::IsInitialized() const {
  return true;
}

void Rsp_C_EncryptUpdate::Swap(Rsp_C_EncryptUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_EncryptUpdate::InternalSwap(Rsp_C_EncryptUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pencryptedpart_.Swap(&other->pencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulencryptedpartlen_, other->pulencryptedpartlen_);
}

::google::protobuf::Metadata Rsp_C_EncryptUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_EncryptFinal::InitAsDefaultInstance() {
}
class Req_C_EncryptFinal::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_EncryptFinal* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_plastencryptedpart(Req_C_EncryptFinal* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pullastencryptedpartlen(Req_C_EncryptFinal* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_EncryptFinal::kHSessionFieldNumber;
const int Req_C_EncryptFinal::kPLastEncryptedPartFieldNumber;
const int Req_C_EncryptFinal::kPulLastEncryptedPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_EncryptFinal::Req_C_EncryptFinal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_EncryptFinal)
}
Req_C_EncryptFinal::Req_C_EncryptFinal(const Req_C_EncryptFinal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plastencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plastencryptedpart()) {
    plastencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastencryptedpart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pullastencryptedpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pullastencryptedpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_EncryptFinal)
}

void Req_C_EncryptFinal::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_EncryptFinal_pkcs11_2eproto.base);
  plastencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pullastencryptedpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pullastencryptedpartlen_));
}

Req_C_EncryptFinal::~Req_C_EncryptFinal() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_EncryptFinal)
  SharedDtor();
}

void Req_C_EncryptFinal::SharedDtor() {
  plastencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_EncryptFinal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_EncryptFinal& Req_C_EncryptFinal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_EncryptFinal_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_EncryptFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_EncryptFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    plastencryptedpart_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pullastencryptedpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pullastencryptedpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_EncryptFinal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_EncryptFinal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pLastEncryptedPart = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plastencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulLastEncryptedPartLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_pullastencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_EncryptFinal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_EncryptFinal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pLastEncryptedPart = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plastencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulLastEncryptedPartLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_pullastencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullastencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_EncryptFinal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_EncryptFinal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_EncryptFinal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_EncryptFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pLastEncryptedPart = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->plastencryptedpart(), output);
  }

  // optional uint32 pulLastEncryptedPartLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pullastencryptedpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_EncryptFinal)
}

::google::protobuf::uint8* Req_C_EncryptFinal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_EncryptFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pLastEncryptedPart = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->plastencryptedpart(), target);
  }

  // optional uint32 pulLastEncryptedPartLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pullastencryptedpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_EncryptFinal)
  return target;
}

size_t Req_C_EncryptFinal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_EncryptFinal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pLastEncryptedPart = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plastencryptedpart());
  }

  // optional uint32 pulLastEncryptedPartLen = 3;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pullastencryptedpartlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_EncryptFinal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_EncryptFinal)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_EncryptFinal* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_EncryptFinal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_EncryptFinal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_EncryptFinal)
    MergeFrom(*source);
  }
}

void Req_C_EncryptFinal::MergeFrom(const Req_C_EncryptFinal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_EncryptFinal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      plastencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastencryptedpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      pullastencryptedpartlen_ = from.pullastencryptedpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_EncryptFinal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_EncryptFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_EncryptFinal::CopyFrom(const Req_C_EncryptFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_EncryptFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_EncryptFinal::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Req_C_EncryptFinal::Swap(Req_C_EncryptFinal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_EncryptFinal::InternalSwap(Req_C_EncryptFinal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  plastencryptedpart_.Swap(&other->plastencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(pullastencryptedpartlen_, other->pullastencryptedpartlen_);
}

::google::protobuf::Metadata Req_C_EncryptFinal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_EncryptFinal::InitAsDefaultInstance() {
}
class Rsp_C_EncryptFinal::HasBitSetters {
 public:
  static void set_has_plastencryptedpart(Rsp_C_EncryptFinal* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pullastencryptedpartlen(Rsp_C_EncryptFinal* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_EncryptFinal::kPLastEncryptedPartFieldNumber;
const int Rsp_C_EncryptFinal::kPulLastEncryptedPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_EncryptFinal::Rsp_C_EncryptFinal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_EncryptFinal)
}
Rsp_C_EncryptFinal::Rsp_C_EncryptFinal(const Rsp_C_EncryptFinal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plastencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plastencryptedpart()) {
    plastencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastencryptedpart_);
  }
  pullastencryptedpartlen_ = from.pullastencryptedpartlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_EncryptFinal)
}

void Rsp_C_EncryptFinal::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_EncryptFinal_pkcs11_2eproto.base);
  plastencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pullastencryptedpartlen_ = 0u;
}

Rsp_C_EncryptFinal::~Rsp_C_EncryptFinal() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_EncryptFinal)
  SharedDtor();
}

void Rsp_C_EncryptFinal::SharedDtor() {
  plastencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_EncryptFinal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_EncryptFinal& Rsp_C_EncryptFinal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_EncryptFinal_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_EncryptFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_EncryptFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    plastencryptedpart_.ClearNonDefaultToEmptyNoArena();
  }
  pullastencryptedpartlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_EncryptFinal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_EncryptFinal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pLastEncryptedPart = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plastencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulLastEncryptedPartLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pullastencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_EncryptFinal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_EncryptFinal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pLastEncryptedPart = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plastencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulLastEncryptedPartLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pullastencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullastencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_EncryptFinal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_EncryptFinal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_EncryptFinal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_EncryptFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pLastEncryptedPart = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->plastencryptedpart(), output);
  }

  // optional uint32 pulLastEncryptedPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pullastencryptedpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_EncryptFinal)
}

::google::protobuf::uint8* Rsp_C_EncryptFinal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_EncryptFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pLastEncryptedPart = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->plastencryptedpart(), target);
  }

  // optional uint32 pulLastEncryptedPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pullastencryptedpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_EncryptFinal)
  return target;
}

size_t Rsp_C_EncryptFinal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_EncryptFinal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pLastEncryptedPart = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->plastencryptedpart());
    }

    // optional uint32 pulLastEncryptedPartLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pullastencryptedpartlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_EncryptFinal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_EncryptFinal)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_EncryptFinal* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_EncryptFinal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_EncryptFinal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_EncryptFinal)
    MergeFrom(*source);
  }
}

void Rsp_C_EncryptFinal::MergeFrom(const Rsp_C_EncryptFinal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_EncryptFinal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      plastencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastencryptedpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      pullastencryptedpartlen_ = from.pullastencryptedpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_EncryptFinal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_EncryptFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_EncryptFinal::CopyFrom(const Rsp_C_EncryptFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_EncryptFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_EncryptFinal::IsInitialized() const {
  return true;
}

void Rsp_C_EncryptFinal::Swap(Rsp_C_EncryptFinal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_EncryptFinal::InternalSwap(Rsp_C_EncryptFinal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  plastencryptedpart_.Swap(&other->plastencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pullastencryptedpartlen_, other->pullastencryptedpartlen_);
}

::google::protobuf::Metadata Rsp_C_EncryptFinal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_DecryptInit::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_DecryptInit_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_DecryptInit::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_DecryptInit* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_DecryptInit* msg);
  static void set_has_pmechanism(Req_C_DecryptInit* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hkey(Req_C_DecryptInit* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_DecryptInit::HasBitSetters::pmechanism(const Req_C_DecryptInit* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_DecryptInit::kHSessionFieldNumber;
const int Req_C_DecryptInit::kPMechanismFieldNumber;
const int Req_C_DecryptInit::kHKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_DecryptInit::Req_C_DecryptInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_DecryptInit)
}
Req_C_DecryptInit::Req_C_DecryptInit(const Req_C_DecryptInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&hkey_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_DecryptInit)
}

void Req_C_DecryptInit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_DecryptInit_pkcs11_2eproto.base);
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hkey_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(hkey_));
}

Req_C_DecryptInit::~Req_C_DecryptInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_DecryptInit)
  SharedDtor();
}

void Req_C_DecryptInit::SharedDtor() {
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_DecryptInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_DecryptInit& Req_C_DecryptInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_DecryptInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_DecryptInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_DecryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pmechanism_ != nullptr);
    pmechanism_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hkey_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_DecryptInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_DecryptInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint32 hKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_hkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_DecryptInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_DecryptInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_hkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_DecryptInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_DecryptInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_DecryptInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_DecryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_DecryptInit)
}

::google::protobuf::uint8* Req_C_DecryptInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_DecryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_DecryptInit)
  return target;
}

size_t Req_C_DecryptInit::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_DecryptInit)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hkey()) {
    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());
  }

  return total_size;
}
size_t Req_C_DecryptInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_DecryptInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmechanism_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_DecryptInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_DecryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_DecryptInit* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_DecryptInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_DecryptInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_DecryptInit)
    MergeFrom(*source);
  }
}

void Req_C_DecryptInit::MergeFrom(const Req_C_DecryptInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_DecryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      hkey_ = from.hkey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_DecryptInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_DecryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_DecryptInit::CopyFrom(const Req_C_DecryptInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_DecryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_DecryptInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_DecryptInit::Swap(Req_C_DecryptInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_DecryptInit::InternalSwap(Req_C_DecryptInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(hkey_, other->hkey_);
}

::google::protobuf::Metadata Req_C_DecryptInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_DecryptInit::InitAsDefaultInstance() {
}
class Rsp_C_DecryptInit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_DecryptInit::Rsp_C_DecryptInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_DecryptInit)
}
Rsp_C_DecryptInit::Rsp_C_DecryptInit(const Rsp_C_DecryptInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_DecryptInit)
}

void Rsp_C_DecryptInit::SharedCtor() {
}

Rsp_C_DecryptInit::~Rsp_C_DecryptInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_DecryptInit)
  SharedDtor();
}

void Rsp_C_DecryptInit::SharedDtor() {
}

void Rsp_C_DecryptInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_DecryptInit& Rsp_C_DecryptInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_DecryptInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_DecryptInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_DecryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_DecryptInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_DecryptInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_DecryptInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_DecryptInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_DecryptInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_DecryptInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_DecryptInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_DecryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_DecryptInit)
}

::google::protobuf::uint8* Rsp_C_DecryptInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_DecryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_DecryptInit)
  return target;
}

size_t Rsp_C_DecryptInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_DecryptInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_DecryptInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_DecryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_DecryptInit* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_DecryptInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_DecryptInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_DecryptInit)
    MergeFrom(*source);
  }
}

void Rsp_C_DecryptInit::MergeFrom(const Rsp_C_DecryptInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_DecryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_DecryptInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_DecryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_DecryptInit::CopyFrom(const Rsp_C_DecryptInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_DecryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_DecryptInit::IsInitialized() const {
  return true;
}

void Rsp_C_DecryptInit::Swap(Rsp_C_DecryptInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_DecryptInit::InternalSwap(Rsp_C_DecryptInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_DecryptInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Decrypt::InitAsDefaultInstance() {
}
class Req_C_Decrypt::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Decrypt* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pencrypteddata(Req_C_Decrypt* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulencrypteddatalen(Req_C_Decrypt* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pdata(Req_C_Decrypt* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_puldatalen(Req_C_Decrypt* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Decrypt::kHSessionFieldNumber;
const int Req_C_Decrypt::kPEncryptedDataFieldNumber;
const int Req_C_Decrypt::kUlEncryptedDataLenFieldNumber;
const int Req_C_Decrypt::kPDataFieldNumber;
const int Req_C_Decrypt::kPulDataLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Decrypt::Req_C_Decrypt()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Decrypt)
}
Req_C_Decrypt::Req_C_Decrypt(const Req_C_Decrypt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pencrypteddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencrypteddata()) {
    pencrypteddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencrypteddata_);
  }
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdata()) {
    pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&puldatalen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(puldatalen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Decrypt)
}

void Req_C_Decrypt::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Decrypt_pkcs11_2eproto.base);
  pencrypteddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&puldatalen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(puldatalen_));
}

Req_C_Decrypt::~Req_C_Decrypt() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Decrypt)
  SharedDtor();
}

void Req_C_Decrypt::SharedDtor() {
  pencrypteddata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Decrypt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Decrypt& Req_C_Decrypt::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Decrypt_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Decrypt::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Decrypt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pencrypteddata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pdata_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&puldatalen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(puldatalen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Decrypt::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Decrypt*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pEncryptedData = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencrypteddata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulEncryptedDataLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulencrypteddatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pData = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulDataLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_puldatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Decrypt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Decrypt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pEncryptedData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencrypteddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulEncryptedDataLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulencrypteddatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulencrypteddatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulDataLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_puldatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puldatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Decrypt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Decrypt)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Decrypt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Decrypt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pEncryptedData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pencrypteddata(), output);
  }

  // required uint32 ulEncryptedDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulencrypteddatalen(), output);
  }

  // optional bytes pData = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pdata(), output);
  }

  // optional uint32 pulDataLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->puldatalen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Decrypt)
}

::google::protobuf::uint8* Req_C_Decrypt::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Decrypt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pEncryptedData = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pencrypteddata(), target);
  }

  // required uint32 ulEncryptedDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulencrypteddatalen(), target);
  }

  // optional bytes pData = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pdata(), target);
  }

  // optional uint32 pulDataLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->puldatalen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Decrypt)
  return target;
}

size_t Req_C_Decrypt::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Decrypt)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulencrypteddatalen()) {
    // required uint32 ulEncryptedDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulencrypteddatalen());
  }

  return total_size;
}
size_t Req_C_Decrypt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Decrypt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulEncryptedDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulencrypteddatalen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pEncryptedData = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencrypteddata());
    }

    // optional bytes pData = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdata());
    }

  }
  // optional uint32 pulDataLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->puldatalen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Decrypt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Decrypt)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Decrypt* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Decrypt>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Decrypt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Decrypt)
    MergeFrom(*source);
  }
}

void Req_C_Decrypt::MergeFrom(const Req_C_Decrypt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Decrypt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pencrypteddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencrypteddata_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulencrypteddatalen_ = from.ulencrypteddatalen_;
    }
    if (cached_has_bits & 0x00000010u) {
      puldatalen_ = from.puldatalen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Decrypt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Decrypt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Decrypt::CopyFrom(const Req_C_Decrypt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Decrypt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Decrypt::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_Decrypt::Swap(Req_C_Decrypt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Decrypt::InternalSwap(Req_C_Decrypt* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pencrypteddata_.Swap(&other->pencrypteddata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pdata_.Swap(&other->pdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulencrypteddatalen_, other->ulencrypteddatalen_);
  swap(puldatalen_, other->puldatalen_);
}

::google::protobuf::Metadata Req_C_Decrypt::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Decrypt::InitAsDefaultInstance() {
}
class Rsp_C_Decrypt::HasBitSetters {
 public:
  static void set_has_pdata(Rsp_C_Decrypt* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_puldatalen(Rsp_C_Decrypt* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Decrypt::kPDataFieldNumber;
const int Rsp_C_Decrypt::kPulDataLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Decrypt::Rsp_C_Decrypt()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Decrypt)
}
Rsp_C_Decrypt::Rsp_C_Decrypt(const Rsp_C_Decrypt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdata()) {
    pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
  }
  puldatalen_ = from.puldatalen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Decrypt)
}

void Rsp_C_Decrypt::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Decrypt_pkcs11_2eproto.base);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  puldatalen_ = 0u;
}

Rsp_C_Decrypt::~Rsp_C_Decrypt() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Decrypt)
  SharedDtor();
}

void Rsp_C_Decrypt::SharedDtor() {
  pdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Decrypt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Decrypt& Rsp_C_Decrypt::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Decrypt_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Decrypt::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Decrypt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pdata_.ClearNonDefaultToEmptyNoArena();
  }
  puldatalen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Decrypt::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Decrypt*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pData = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulDataLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_puldatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Decrypt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Decrypt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulDataLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_puldatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puldatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Decrypt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Decrypt)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Decrypt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Decrypt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pdata(), output);
  }

  // optional uint32 pulDataLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->puldatalen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Decrypt)
}

::google::protobuf::uint8* Rsp_C_Decrypt::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Decrypt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pData = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pdata(), target);
  }

  // optional uint32 pulDataLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->puldatalen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Decrypt)
  return target;
}

size_t Rsp_C_Decrypt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Decrypt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pData = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdata());
    }

    // optional uint32 pulDataLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->puldatalen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Decrypt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Decrypt)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Decrypt* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Decrypt>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Decrypt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Decrypt)
    MergeFrom(*source);
  }
}

void Rsp_C_Decrypt::MergeFrom(const Rsp_C_Decrypt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Decrypt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
    }
    if (cached_has_bits & 0x00000002u) {
      puldatalen_ = from.puldatalen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Decrypt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Decrypt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Decrypt::CopyFrom(const Rsp_C_Decrypt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Decrypt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Decrypt::IsInitialized() const {
  return true;
}

void Rsp_C_Decrypt::Swap(Rsp_C_Decrypt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Decrypt::InternalSwap(Rsp_C_Decrypt* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdata_.Swap(&other->pdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(puldatalen_, other->puldatalen_);
}

::google::protobuf::Metadata Rsp_C_Decrypt::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_DecryptUpdate::InitAsDefaultInstance() {
}
class Req_C_DecryptUpdate::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pencryptedpart(Req_C_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulencryptedpartlen(Req_C_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_ppart(Req_C_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pulpartlen(Req_C_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_DecryptUpdate::kHSessionFieldNumber;
const int Req_C_DecryptUpdate::kPEncryptedPartFieldNumber;
const int Req_C_DecryptUpdate::kUlEncryptedPartLenFieldNumber;
const int Req_C_DecryptUpdate::kPPartFieldNumber;
const int Req_C_DecryptUpdate::kPulPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_DecryptUpdate::Req_C_DecryptUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_DecryptUpdate)
}
Req_C_DecryptUpdate::Req_C_DecryptUpdate(const Req_C_DecryptUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencryptedpart()) {
    pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
  }
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_DecryptUpdate)
}

void Req_C_DecryptUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_DecryptUpdate_pkcs11_2eproto.base);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulpartlen_));
}

Req_C_DecryptUpdate::~Req_C_DecryptUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_DecryptUpdate)
  SharedDtor();
}

void Req_C_DecryptUpdate::SharedDtor() {
  pencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_DecryptUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_DecryptUpdate& Req_C_DecryptUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_DecryptUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_DecryptUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_DecryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pencryptedpart_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      ppart_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_DecryptUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_DecryptUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pEncryptedPart = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulEncryptedPartLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPart = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulPartLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_DecryptUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_DecryptUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pEncryptedPart = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulEncryptedPartLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPart = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulPartLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_DecryptUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_DecryptUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_DecryptUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_DecryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pEncryptedPart = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pencryptedpart(), output);
  }

  // required uint32 ulEncryptedPartLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulencryptedpartlen(), output);
  }

  // optional bytes pPart = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ppart(), output);
  }

  // optional uint32 pulPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pulpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_DecryptUpdate)
}

::google::protobuf::uint8* Req_C_DecryptUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_DecryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pEncryptedPart = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pencryptedpart(), target);
  }

  // required uint32 ulEncryptedPartLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulencryptedpartlen(), target);
  }

  // optional bytes pPart = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ppart(), target);
  }

  // optional uint32 pulPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pulpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_DecryptUpdate)
  return target;
}

size_t Req_C_DecryptUpdate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_DecryptUpdate)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulencryptedpartlen()) {
    // required uint32 ulEncryptedPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulencryptedpartlen());
  }

  return total_size;
}
size_t Req_C_DecryptUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_DecryptUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulEncryptedPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulencryptedpartlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pEncryptedPart = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencryptedpart());
    }

    // optional bytes pPart = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppart());
    }

  }
  // optional uint32 pulPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulpartlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_DecryptUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_DecryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_DecryptUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_DecryptUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_DecryptUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_DecryptUpdate)
    MergeFrom(*source);
  }
}

void Req_C_DecryptUpdate::MergeFrom(const Req_C_DecryptUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_DecryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulencryptedpartlen_ = from.ulencryptedpartlen_;
    }
    if (cached_has_bits & 0x00000010u) {
      pulpartlen_ = from.pulpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_DecryptUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_DecryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_DecryptUpdate::CopyFrom(const Req_C_DecryptUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_DecryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_DecryptUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_DecryptUpdate::Swap(Req_C_DecryptUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_DecryptUpdate::InternalSwap(Req_C_DecryptUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pencryptedpart_.Swap(&other->pencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulencryptedpartlen_, other->ulencryptedpartlen_);
  swap(pulpartlen_, other->pulpartlen_);
}

::google::protobuf::Metadata Req_C_DecryptUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_DecryptUpdate::InitAsDefaultInstance() {
}
class Rsp_C_DecryptUpdate::HasBitSetters {
 public:
  static void set_has_ppart(Rsp_C_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulpartlen(Rsp_C_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_DecryptUpdate::kPPartFieldNumber;
const int Rsp_C_DecryptUpdate::kPulPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_DecryptUpdate::Rsp_C_DecryptUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_DecryptUpdate)
}
Rsp_C_DecryptUpdate::Rsp_C_DecryptUpdate(const Rsp_C_DecryptUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  pulpartlen_ = from.pulpartlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_DecryptUpdate)
}

void Rsp_C_DecryptUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_DecryptUpdate_pkcs11_2eproto.base);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulpartlen_ = 0u;
}

Rsp_C_DecryptUpdate::~Rsp_C_DecryptUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  SharedDtor();
}

void Rsp_C_DecryptUpdate::SharedDtor() {
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_DecryptUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_DecryptUpdate& Rsp_C_DecryptUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_DecryptUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_DecryptUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ppart_.ClearNonDefaultToEmptyNoArena();
  }
  pulpartlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_DecryptUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_DecryptUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pPart = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulPartLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_DecryptUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pPart = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulPartLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_DecryptUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pPart = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ppart(), output);
  }

  // optional uint32 pulPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_DecryptUpdate)
}

::google::protobuf::uint8* Rsp_C_DecryptUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pPart = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ppart(), target);
  }

  // optional uint32 pulPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  return target;
}

size_t Rsp_C_DecryptUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pPart = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppart());
    }

    // optional uint32 pulPartLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulpartlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_DecryptUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_DecryptUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_DecryptUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_DecryptUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_DecryptUpdate)
    MergeFrom(*source);
  }
}

void Rsp_C_DecryptUpdate::MergeFrom(const Rsp_C_DecryptUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulpartlen_ = from.pulpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_DecryptUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_DecryptUpdate::CopyFrom(const Rsp_C_DecryptUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_DecryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_DecryptUpdate::IsInitialized() const {
  return true;
}

void Rsp_C_DecryptUpdate::Swap(Rsp_C_DecryptUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_DecryptUpdate::InternalSwap(Rsp_C_DecryptUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulpartlen_, other->pulpartlen_);
}

::google::protobuf::Metadata Rsp_C_DecryptUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_DecryptFinal::InitAsDefaultInstance() {
}
class Req_C_DecryptFinal::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_DecryptFinal* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_plastpart(Req_C_DecryptFinal* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pullastpartlen(Req_C_DecryptFinal* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_DecryptFinal::kHSessionFieldNumber;
const int Req_C_DecryptFinal::kPLastPartFieldNumber;
const int Req_C_DecryptFinal::kPulLastPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_DecryptFinal::Req_C_DecryptFinal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_DecryptFinal)
}
Req_C_DecryptFinal::Req_C_DecryptFinal(const Req_C_DecryptFinal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plastpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plastpart()) {
    plastpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastpart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pullastpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pullastpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_DecryptFinal)
}

void Req_C_DecryptFinal::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_DecryptFinal_pkcs11_2eproto.base);
  plastpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pullastpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pullastpartlen_));
}

Req_C_DecryptFinal::~Req_C_DecryptFinal() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_DecryptFinal)
  SharedDtor();
}

void Req_C_DecryptFinal::SharedDtor() {
  plastpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_DecryptFinal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_DecryptFinal& Req_C_DecryptFinal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_DecryptFinal_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_DecryptFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_DecryptFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    plastpart_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pullastpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pullastpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_DecryptFinal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_DecryptFinal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pLastPart = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plastpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulLastPartLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_pullastpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_DecryptFinal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_DecryptFinal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pLastPart = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plastpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulLastPartLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_pullastpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullastpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_DecryptFinal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_DecryptFinal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_DecryptFinal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_DecryptFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pLastPart = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->plastpart(), output);
  }

  // optional uint32 pulLastPartLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pullastpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_DecryptFinal)
}

::google::protobuf::uint8* Req_C_DecryptFinal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_DecryptFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pLastPart = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->plastpart(), target);
  }

  // optional uint32 pulLastPartLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pullastpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_DecryptFinal)
  return target;
}

size_t Req_C_DecryptFinal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_DecryptFinal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pLastPart = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plastpart());
  }

  // optional uint32 pulLastPartLen = 3;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pullastpartlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_DecryptFinal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_DecryptFinal)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_DecryptFinal* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_DecryptFinal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_DecryptFinal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_DecryptFinal)
    MergeFrom(*source);
  }
}

void Req_C_DecryptFinal::MergeFrom(const Req_C_DecryptFinal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_DecryptFinal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      plastpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      pullastpartlen_ = from.pullastpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_DecryptFinal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_DecryptFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_DecryptFinal::CopyFrom(const Req_C_DecryptFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_DecryptFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_DecryptFinal::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Req_C_DecryptFinal::Swap(Req_C_DecryptFinal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_DecryptFinal::InternalSwap(Req_C_DecryptFinal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  plastpart_.Swap(&other->plastpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(pullastpartlen_, other->pullastpartlen_);
}

::google::protobuf::Metadata Req_C_DecryptFinal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_DecryptFinal::InitAsDefaultInstance() {
}
class Rsp_C_DecryptFinal::HasBitSetters {
 public:
  static void set_has_plastpart(Rsp_C_DecryptFinal* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pullastpartlen(Rsp_C_DecryptFinal* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_DecryptFinal::kPLastPartFieldNumber;
const int Rsp_C_DecryptFinal::kPulLastPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_DecryptFinal::Rsp_C_DecryptFinal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_DecryptFinal)
}
Rsp_C_DecryptFinal::Rsp_C_DecryptFinal(const Rsp_C_DecryptFinal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plastpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plastpart()) {
    plastpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastpart_);
  }
  pullastpartlen_ = from.pullastpartlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_DecryptFinal)
}

void Rsp_C_DecryptFinal::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_DecryptFinal_pkcs11_2eproto.base);
  plastpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pullastpartlen_ = 0u;
}

Rsp_C_DecryptFinal::~Rsp_C_DecryptFinal() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_DecryptFinal)
  SharedDtor();
}

void Rsp_C_DecryptFinal::SharedDtor() {
  plastpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_DecryptFinal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_DecryptFinal& Rsp_C_DecryptFinal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_DecryptFinal_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_DecryptFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_DecryptFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    plastpart_.ClearNonDefaultToEmptyNoArena();
  }
  pullastpartlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_DecryptFinal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_DecryptFinal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pLastPart = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plastpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulLastPartLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pullastpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_DecryptFinal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_DecryptFinal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pLastPart = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plastpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulLastPartLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pullastpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullastpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_DecryptFinal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_DecryptFinal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_DecryptFinal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_DecryptFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pLastPart = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->plastpart(), output);
  }

  // optional uint32 pulLastPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pullastpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_DecryptFinal)
}

::google::protobuf::uint8* Rsp_C_DecryptFinal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_DecryptFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pLastPart = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->plastpart(), target);
  }

  // optional uint32 pulLastPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pullastpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_DecryptFinal)
  return target;
}

size_t Rsp_C_DecryptFinal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_DecryptFinal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pLastPart = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->plastpart());
    }

    // optional uint32 pulLastPartLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pullastpartlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_DecryptFinal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_DecryptFinal)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_DecryptFinal* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_DecryptFinal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_DecryptFinal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_DecryptFinal)
    MergeFrom(*source);
  }
}

void Rsp_C_DecryptFinal::MergeFrom(const Rsp_C_DecryptFinal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_DecryptFinal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      plastpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      pullastpartlen_ = from.pullastpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_DecryptFinal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_DecryptFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_DecryptFinal::CopyFrom(const Rsp_C_DecryptFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_DecryptFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_DecryptFinal::IsInitialized() const {
  return true;
}

void Rsp_C_DecryptFinal::Swap(Rsp_C_DecryptFinal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_DecryptFinal::InternalSwap(Rsp_C_DecryptFinal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  plastpart_.Swap(&other->plastpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pullastpartlen_, other->pullastpartlen_);
}

::google::protobuf::Metadata Rsp_C_DecryptFinal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_DigestInit::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_DigestInit_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_DigestInit::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_DigestInit* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_DigestInit* msg);
  static void set_has_pmechanism(Req_C_DigestInit* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_DigestInit::HasBitSetters::pmechanism(const Req_C_DigestInit* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_DigestInit::kHSessionFieldNumber;
const int Req_C_DigestInit::kPMechanismFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_DigestInit::Req_C_DigestInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_DigestInit)
}
Req_C_DigestInit::Req_C_DigestInit(const Req_C_DigestInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  hsession_ = from.hsession_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_DigestInit)
}

void Req_C_DigestInit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_DigestInit_pkcs11_2eproto.base);
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hsession_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(hsession_));
}

Req_C_DigestInit::~Req_C_DigestInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_DigestInit)
  SharedDtor();
}

void Req_C_DigestInit::SharedDtor() {
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_DigestInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_DigestInit& Req_C_DigestInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_DigestInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_DigestInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_DigestInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pmechanism_ != nullptr);
    pmechanism_->Clear();
  }
  hsession_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_DigestInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_DigestInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_DigestInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_DigestInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_DigestInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_DigestInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_DigestInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_DigestInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_DigestInit)
}

::google::protobuf::uint8* Req_C_DigestInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_DigestInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_DigestInit)
  return target;
}

size_t Req_C_DigestInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_DigestInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmechanism_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_DigestInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_DigestInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_DigestInit* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_DigestInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_DigestInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_DigestInit)
    MergeFrom(*source);
  }
}

void Req_C_DigestInit::MergeFrom(const Req_C_DigestInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_DigestInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_DigestInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_DigestInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_DigestInit::CopyFrom(const Req_C_DigestInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_DigestInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_DigestInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_DigestInit::Swap(Req_C_DigestInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_DigestInit::InternalSwap(Req_C_DigestInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
}

::google::protobuf::Metadata Req_C_DigestInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_DigestInit::InitAsDefaultInstance() {
}
class Rsp_C_DigestInit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_DigestInit::Rsp_C_DigestInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_DigestInit)
}
Rsp_C_DigestInit::Rsp_C_DigestInit(const Rsp_C_DigestInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_DigestInit)
}

void Rsp_C_DigestInit::SharedCtor() {
}

Rsp_C_DigestInit::~Rsp_C_DigestInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_DigestInit)
  SharedDtor();
}

void Rsp_C_DigestInit::SharedDtor() {
}

void Rsp_C_DigestInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_DigestInit& Rsp_C_DigestInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_DigestInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_DigestInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_DigestInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_DigestInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_DigestInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_DigestInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_DigestInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_DigestInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_DigestInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_DigestInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_DigestInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_DigestInit)
}

::google::protobuf::uint8* Rsp_C_DigestInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_DigestInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_DigestInit)
  return target;
}

size_t Rsp_C_DigestInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_DigestInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_DigestInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_DigestInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_DigestInit* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_DigestInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_DigestInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_DigestInit)
    MergeFrom(*source);
  }
}

void Rsp_C_DigestInit::MergeFrom(const Rsp_C_DigestInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_DigestInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_DigestInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_DigestInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_DigestInit::CopyFrom(const Rsp_C_DigestInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_DigestInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_DigestInit::IsInitialized() const {
  return true;
}

void Rsp_C_DigestInit::Swap(Rsp_C_DigestInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_DigestInit::InternalSwap(Rsp_C_DigestInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_DigestInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Digest::InitAsDefaultInstance() {
}
class Req_C_Digest::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Digest* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pdata(Req_C_Digest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_uldatalen(Req_C_Digest* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pdigest(Req_C_Digest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_puldigestlen(Req_C_Digest* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Digest::kHSessionFieldNumber;
const int Req_C_Digest::kPDataFieldNumber;
const int Req_C_Digest::kUlDataLenFieldNumber;
const int Req_C_Digest::kPDigestFieldNumber;
const int Req_C_Digest::kPulDigestLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Digest::Req_C_Digest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Digest)
}
Req_C_Digest::Req_C_Digest(const Req_C_Digest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdata()) {
    pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
  }
  pdigest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdigest()) {
    pdigest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdigest_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&puldigestlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(puldigestlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Digest)
}

void Req_C_Digest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Digest_pkcs11_2eproto.base);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pdigest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&puldigestlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(puldigestlen_));
}

Req_C_Digest::~Req_C_Digest() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Digest)
  SharedDtor();
}

void Req_C_Digest::SharedDtor() {
  pdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pdigest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Digest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Digest& Req_C_Digest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Digest_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Digest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Digest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pdata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pdigest_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&puldigestlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(puldigestlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Digest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Digest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pData = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulDataLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_uldatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pDigest = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdigest();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulDigestLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_puldigestlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Digest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Digest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulDataLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_uldatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uldatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pDigest = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdigest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulDigestLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_puldigestlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puldigestlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Digest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Digest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Digest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Digest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pdata(), output);
  }

  // required uint32 ulDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uldatalen(), output);
  }

  // optional bytes pDigest = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pdigest(), output);
  }

  // optional uint32 pulDigestLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->puldigestlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Digest)
}

::google::protobuf::uint8* Req_C_Digest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Digest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pData = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pdata(), target);
  }

  // required uint32 ulDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uldatalen(), target);
  }

  // optional bytes pDigest = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pdigest(), target);
  }

  // optional uint32 pulDigestLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->puldigestlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Digest)
  return target;
}

size_t Req_C_Digest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Digest)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_uldatalen()) {
    // required uint32 ulDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldatalen());
  }

  return total_size;
}
size_t Req_C_Digest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Digest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldatalen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pData = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdata());
    }

    // optional bytes pDigest = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdigest());
    }

  }
  // optional uint32 pulDigestLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->puldigestlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Digest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Digest)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Digest* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Digest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Digest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Digest)
    MergeFrom(*source);
  }
}

void Req_C_Digest::MergeFrom(const Req_C_Digest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Digest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pdigest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdigest_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      uldatalen_ = from.uldatalen_;
    }
    if (cached_has_bits & 0x00000010u) {
      puldigestlen_ = from.puldigestlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Digest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Digest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Digest::CopyFrom(const Req_C_Digest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Digest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Digest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_Digest::Swap(Req_C_Digest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Digest::InternalSwap(Req_C_Digest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdata_.Swap(&other->pdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pdigest_.Swap(&other->pdigest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(uldatalen_, other->uldatalen_);
  swap(puldigestlen_, other->puldigestlen_);
}

::google::protobuf::Metadata Req_C_Digest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Digest::InitAsDefaultInstance() {
}
class Rsp_C_Digest::HasBitSetters {
 public:
  static void set_has_pdigest(Rsp_C_Digest* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_puldigestlen(Rsp_C_Digest* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Digest::kPDigestFieldNumber;
const int Rsp_C_Digest::kPulDigestLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Digest::Rsp_C_Digest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Digest)
}
Rsp_C_Digest::Rsp_C_Digest(const Rsp_C_Digest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdigest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdigest()) {
    pdigest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdigest_);
  }
  puldigestlen_ = from.puldigestlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Digest)
}

void Rsp_C_Digest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Digest_pkcs11_2eproto.base);
  pdigest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  puldigestlen_ = 0u;
}

Rsp_C_Digest::~Rsp_C_Digest() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Digest)
  SharedDtor();
}

void Rsp_C_Digest::SharedDtor() {
  pdigest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Digest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Digest& Rsp_C_Digest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Digest_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Digest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Digest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pdigest_.ClearNonDefaultToEmptyNoArena();
  }
  puldigestlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Digest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Digest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pDigest = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdigest();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulDigestLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_puldigestlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Digest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Digest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pDigest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdigest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulDigestLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_puldigestlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puldigestlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Digest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Digest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Digest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Digest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pDigest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pdigest(), output);
  }

  // optional uint32 pulDigestLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->puldigestlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Digest)
}

::google::protobuf::uint8* Rsp_C_Digest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Digest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pDigest = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pdigest(), target);
  }

  // optional uint32 pulDigestLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->puldigestlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Digest)
  return target;
}

size_t Rsp_C_Digest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Digest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pDigest = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdigest());
    }

    // optional uint32 pulDigestLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->puldigestlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Digest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Digest)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Digest* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Digest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Digest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Digest)
    MergeFrom(*source);
  }
}

void Rsp_C_Digest::MergeFrom(const Rsp_C_Digest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Digest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdigest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdigest_);
    }
    if (cached_has_bits & 0x00000002u) {
      puldigestlen_ = from.puldigestlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Digest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Digest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Digest::CopyFrom(const Rsp_C_Digest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Digest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Digest::IsInitialized() const {
  return true;
}

void Rsp_C_Digest::Swap(Rsp_C_Digest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Digest::InternalSwap(Rsp_C_Digest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdigest_.Swap(&other->pdigest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(puldigestlen_, other->puldigestlen_);
}

::google::protobuf::Metadata Rsp_C_Digest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_DigestUpdate::InitAsDefaultInstance() {
}
class Req_C_DigestUpdate::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_DigestUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ppart(Req_C_DigestUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulpartlen(Req_C_DigestUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_DigestUpdate::kHSessionFieldNumber;
const int Req_C_DigestUpdate::kPPartFieldNumber;
const int Req_C_DigestUpdate::kUlPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_DigestUpdate::Req_C_DigestUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_DigestUpdate)
}
Req_C_DigestUpdate::Req_C_DigestUpdate(const Req_C_DigestUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_DigestUpdate)
}

void Req_C_DigestUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_DigestUpdate_pkcs11_2eproto.base);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulpartlen_));
}

Req_C_DigestUpdate::~Req_C_DigestUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_DigestUpdate)
  SharedDtor();
}

void Req_C_DigestUpdate::SharedDtor() {
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_DigestUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_DigestUpdate& Req_C_DigestUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_DigestUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_DigestUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_DigestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ppart_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_DigestUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_DigestUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPart = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulPartLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_DigestUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_DigestUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPart = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulPartLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_DigestUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_DigestUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_DigestUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_DigestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pPart = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ppart(), output);
  }

  // required uint32 ulPartLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_DigestUpdate)
}

::google::protobuf::uint8* Req_C_DigestUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_DigestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pPart = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ppart(), target);
  }

  // required uint32 ulPartLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_DigestUpdate)
  return target;
}

size_t Req_C_DigestUpdate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_DigestUpdate)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulpartlen()) {
    // required uint32 ulPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());
  }

  return total_size;
}
size_t Req_C_DigestUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_DigestUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pPart = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ppart());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_DigestUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_DigestUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_DigestUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_DigestUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_DigestUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_DigestUpdate)
    MergeFrom(*source);
  }
}

void Req_C_DigestUpdate::MergeFrom(const Req_C_DigestUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_DigestUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulpartlen_ = from.ulpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_DigestUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_DigestUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_DigestUpdate::CopyFrom(const Req_C_DigestUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_DigestUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_DigestUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void Req_C_DigestUpdate::Swap(Req_C_DigestUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_DigestUpdate::InternalSwap(Req_C_DigestUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulpartlen_, other->ulpartlen_);
}

::google::protobuf::Metadata Req_C_DigestUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_DigestUpdate::InitAsDefaultInstance() {
}
class Rsp_C_DigestUpdate::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_DigestUpdate::Rsp_C_DigestUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_DigestUpdate)
}
Rsp_C_DigestUpdate::Rsp_C_DigestUpdate(const Rsp_C_DigestUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_DigestUpdate)
}

void Rsp_C_DigestUpdate::SharedCtor() {
}

Rsp_C_DigestUpdate::~Rsp_C_DigestUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_DigestUpdate)
  SharedDtor();
}

void Rsp_C_DigestUpdate::SharedDtor() {
}

void Rsp_C_DigestUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_DigestUpdate& Rsp_C_DigestUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_DigestUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_DigestUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_DigestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_DigestUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_DigestUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_DigestUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_DigestUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_DigestUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_DigestUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_DigestUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_DigestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_DigestUpdate)
}

::google::protobuf::uint8* Rsp_C_DigestUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_DigestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_DigestUpdate)
  return target;
}

size_t Rsp_C_DigestUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_DigestUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_DigestUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_DigestUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_DigestUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_DigestUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_DigestUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_DigestUpdate)
    MergeFrom(*source);
  }
}

void Rsp_C_DigestUpdate::MergeFrom(const Rsp_C_DigestUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_DigestUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_DigestUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_DigestUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_DigestUpdate::CopyFrom(const Rsp_C_DigestUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_DigestUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_DigestUpdate::IsInitialized() const {
  return true;
}

void Rsp_C_DigestUpdate::Swap(Rsp_C_DigestUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_DigestUpdate::InternalSwap(Rsp_C_DigestUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_DigestUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_DigestKey::InitAsDefaultInstance() {
}
class Req_C_DigestKey::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_DigestKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hkey(Req_C_DigestKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_DigestKey::kHSessionFieldNumber;
const int Req_C_DigestKey::kHKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_DigestKey::Req_C_DigestKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_DigestKey)
}
Req_C_DigestKey::Req_C_DigestKey(const Req_C_DigestKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&hkey_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_DigestKey)
}

void Req_C_DigestKey::SharedCtor() {
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hkey_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
}

Req_C_DigestKey::~Req_C_DigestKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_DigestKey)
  SharedDtor();
}

void Req_C_DigestKey::SharedDtor() {
}

void Req_C_DigestKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_DigestKey& Req_C_DigestKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_DigestKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_DigestKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_DigestKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hkey_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_DigestKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_DigestKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 hKey = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_hkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_DigestKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_DigestKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_hkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_DigestKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_DigestKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_DigestKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_DigestKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // required uint32 hKey = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_DigestKey)
}

::google::protobuf::uint8* Req_C_DigestKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_DigestKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // required uint32 hKey = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_DigestKey)
  return target;
}

size_t Req_C_DigestKey::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_DigestKey)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hkey()) {
    // required uint32 hKey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());
  }

  return total_size;
}
size_t Req_C_DigestKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_DigestKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hKey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_DigestKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_DigestKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_DigestKey* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_DigestKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_DigestKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_DigestKey)
    MergeFrom(*source);
  }
}

void Req_C_DigestKey::MergeFrom(const Req_C_DigestKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_DigestKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000002u) {
      hkey_ = from.hkey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_DigestKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_DigestKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_DigestKey::CopyFrom(const Req_C_DigestKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_DigestKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_DigestKey::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Req_C_DigestKey::Swap(Req_C_DigestKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_DigestKey::InternalSwap(Req_C_DigestKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(hsession_, other->hsession_);
  swap(hkey_, other->hkey_);
}

::google::protobuf::Metadata Req_C_DigestKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_DigestKey::InitAsDefaultInstance() {
}
class Rsp_C_DigestKey::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_DigestKey::Rsp_C_DigestKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_DigestKey)
}
Rsp_C_DigestKey::Rsp_C_DigestKey(const Rsp_C_DigestKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_DigestKey)
}

void Rsp_C_DigestKey::SharedCtor() {
}

Rsp_C_DigestKey::~Rsp_C_DigestKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_DigestKey)
  SharedDtor();
}

void Rsp_C_DigestKey::SharedDtor() {
}

void Rsp_C_DigestKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_DigestKey& Rsp_C_DigestKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_DigestKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_DigestKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_DigestKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_DigestKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_DigestKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_DigestKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_DigestKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_DigestKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_DigestKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_DigestKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_DigestKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_DigestKey)
}

::google::protobuf::uint8* Rsp_C_DigestKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_DigestKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_DigestKey)
  return target;
}

size_t Rsp_C_DigestKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_DigestKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_DigestKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_DigestKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_DigestKey* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_DigestKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_DigestKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_DigestKey)
    MergeFrom(*source);
  }
}

void Rsp_C_DigestKey::MergeFrom(const Rsp_C_DigestKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_DigestKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_DigestKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_DigestKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_DigestKey::CopyFrom(const Rsp_C_DigestKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_DigestKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_DigestKey::IsInitialized() const {
  return true;
}

void Rsp_C_DigestKey::Swap(Rsp_C_DigestKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_DigestKey::InternalSwap(Rsp_C_DigestKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_DigestKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_DigestFinal::InitAsDefaultInstance() {
}
class Req_C_DigestFinal::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_DigestFinal* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pdigest(Req_C_DigestFinal* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_puldigestlen(Req_C_DigestFinal* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_DigestFinal::kHSessionFieldNumber;
const int Req_C_DigestFinal::kPDigestFieldNumber;
const int Req_C_DigestFinal::kPulDigestLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_DigestFinal::Req_C_DigestFinal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_DigestFinal)
}
Req_C_DigestFinal::Req_C_DigestFinal(const Req_C_DigestFinal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdigest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdigest()) {
    pdigest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdigest_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&puldigestlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(puldigestlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_DigestFinal)
}

void Req_C_DigestFinal::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_DigestFinal_pkcs11_2eproto.base);
  pdigest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&puldigestlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(puldigestlen_));
}

Req_C_DigestFinal::~Req_C_DigestFinal() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_DigestFinal)
  SharedDtor();
}

void Req_C_DigestFinal::SharedDtor() {
  pdigest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_DigestFinal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_DigestFinal& Req_C_DigestFinal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_DigestFinal_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_DigestFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_DigestFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pdigest_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&puldigestlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(puldigestlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_DigestFinal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_DigestFinal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pDigest = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdigest();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulDigestLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_puldigestlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_DigestFinal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_DigestFinal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pDigest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdigest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulDigestLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_puldigestlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puldigestlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_DigestFinal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_DigestFinal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_DigestFinal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_DigestFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pDigest = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pdigest(), output);
  }

  // optional uint32 pulDigestLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->puldigestlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_DigestFinal)
}

::google::protobuf::uint8* Req_C_DigestFinal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_DigestFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pDigest = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pdigest(), target);
  }

  // optional uint32 pulDigestLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->puldigestlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_DigestFinal)
  return target;
}

size_t Req_C_DigestFinal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_DigestFinal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pDigest = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pdigest());
  }

  // optional uint32 pulDigestLen = 3;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->puldigestlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_DigestFinal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_DigestFinal)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_DigestFinal* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_DigestFinal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_DigestFinal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_DigestFinal)
    MergeFrom(*source);
  }
}

void Req_C_DigestFinal::MergeFrom(const Req_C_DigestFinal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_DigestFinal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdigest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdigest_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      puldigestlen_ = from.puldigestlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_DigestFinal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_DigestFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_DigestFinal::CopyFrom(const Req_C_DigestFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_DigestFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_DigestFinal::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Req_C_DigestFinal::Swap(Req_C_DigestFinal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_DigestFinal::InternalSwap(Req_C_DigestFinal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdigest_.Swap(&other->pdigest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(puldigestlen_, other->puldigestlen_);
}

::google::protobuf::Metadata Req_C_DigestFinal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_DigestFinal::InitAsDefaultInstance() {
}
class Rsp_C_DigestFinal::HasBitSetters {
 public:
  static void set_has_pdigest(Rsp_C_DigestFinal* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_puldigestlen(Rsp_C_DigestFinal* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_DigestFinal::kPDigestFieldNumber;
const int Rsp_C_DigestFinal::kPulDigestLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_DigestFinal::Rsp_C_DigestFinal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_DigestFinal)
}
Rsp_C_DigestFinal::Rsp_C_DigestFinal(const Rsp_C_DigestFinal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdigest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdigest()) {
    pdigest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdigest_);
  }
  puldigestlen_ = from.puldigestlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_DigestFinal)
}

void Rsp_C_DigestFinal::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_DigestFinal_pkcs11_2eproto.base);
  pdigest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  puldigestlen_ = 0u;
}

Rsp_C_DigestFinal::~Rsp_C_DigestFinal() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_DigestFinal)
  SharedDtor();
}

void Rsp_C_DigestFinal::SharedDtor() {
  pdigest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_DigestFinal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_DigestFinal& Rsp_C_DigestFinal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_DigestFinal_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_DigestFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_DigestFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pdigest_.ClearNonDefaultToEmptyNoArena();
  }
  puldigestlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_DigestFinal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_DigestFinal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pDigest = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdigest();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulDigestLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_puldigestlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_DigestFinal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_DigestFinal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pDigest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdigest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulDigestLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_puldigestlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puldigestlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_DigestFinal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_DigestFinal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_DigestFinal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_DigestFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pDigest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pdigest(), output);
  }

  // optional uint32 pulDigestLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->puldigestlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_DigestFinal)
}

::google::protobuf::uint8* Rsp_C_DigestFinal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_DigestFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pDigest = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pdigest(), target);
  }

  // optional uint32 pulDigestLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->puldigestlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_DigestFinal)
  return target;
}

size_t Rsp_C_DigestFinal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_DigestFinal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pDigest = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdigest());
    }

    // optional uint32 pulDigestLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->puldigestlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_DigestFinal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_DigestFinal)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_DigestFinal* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_DigestFinal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_DigestFinal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_DigestFinal)
    MergeFrom(*source);
  }
}

void Rsp_C_DigestFinal::MergeFrom(const Rsp_C_DigestFinal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_DigestFinal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdigest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdigest_);
    }
    if (cached_has_bits & 0x00000002u) {
      puldigestlen_ = from.puldigestlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_DigestFinal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_DigestFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_DigestFinal::CopyFrom(const Rsp_C_DigestFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_DigestFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_DigestFinal::IsInitialized() const {
  return true;
}

void Rsp_C_DigestFinal::Swap(Rsp_C_DigestFinal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_DigestFinal::InternalSwap(Rsp_C_DigestFinal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdigest_.Swap(&other->pdigest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(puldigestlen_, other->puldigestlen_);
}

::google::protobuf::Metadata Rsp_C_DigestFinal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_SignInit::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_SignInit_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_SignInit::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_SignInit* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_SignInit* msg);
  static void set_has_pmechanism(Req_C_SignInit* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hkey(Req_C_SignInit* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_SignInit::HasBitSetters::pmechanism(const Req_C_SignInit* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_SignInit::kHSessionFieldNumber;
const int Req_C_SignInit::kPMechanismFieldNumber;
const int Req_C_SignInit::kHKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_SignInit::Req_C_SignInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_SignInit)
}
Req_C_SignInit::Req_C_SignInit(const Req_C_SignInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&hkey_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_SignInit)
}

void Req_C_SignInit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_SignInit_pkcs11_2eproto.base);
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hkey_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(hkey_));
}

Req_C_SignInit::~Req_C_SignInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_SignInit)
  SharedDtor();
}

void Req_C_SignInit::SharedDtor() {
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_SignInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_SignInit& Req_C_SignInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_SignInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_SignInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_SignInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pmechanism_ != nullptr);
    pmechanism_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hkey_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_SignInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_SignInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint32 hKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_hkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_SignInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_SignInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_hkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_SignInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_SignInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_SignInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_SignInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_SignInit)
}

::google::protobuf::uint8* Req_C_SignInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_SignInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_SignInit)
  return target;
}

size_t Req_C_SignInit::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_SignInit)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hkey()) {
    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());
  }

  return total_size;
}
size_t Req_C_SignInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_SignInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmechanism_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_SignInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_SignInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_SignInit* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_SignInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_SignInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_SignInit)
    MergeFrom(*source);
  }
}

void Req_C_SignInit::MergeFrom(const Req_C_SignInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_SignInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      hkey_ = from.hkey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_SignInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_SignInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_SignInit::CopyFrom(const Req_C_SignInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_SignInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_SignInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_SignInit::Swap(Req_C_SignInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_SignInit::InternalSwap(Req_C_SignInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(hkey_, other->hkey_);
}

::google::protobuf::Metadata Req_C_SignInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_SignInit::InitAsDefaultInstance() {
}
class Rsp_C_SignInit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_SignInit::Rsp_C_SignInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_SignInit)
}
Rsp_C_SignInit::Rsp_C_SignInit(const Rsp_C_SignInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_SignInit)
}

void Rsp_C_SignInit::SharedCtor() {
}

Rsp_C_SignInit::~Rsp_C_SignInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_SignInit)
  SharedDtor();
}

void Rsp_C_SignInit::SharedDtor() {
}

void Rsp_C_SignInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_SignInit& Rsp_C_SignInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_SignInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_SignInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_SignInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_SignInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_SignInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_SignInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_SignInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_SignInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_SignInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_SignInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_SignInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_SignInit)
}

::google::protobuf::uint8* Rsp_C_SignInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_SignInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_SignInit)
  return target;
}

size_t Rsp_C_SignInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_SignInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_SignInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_SignInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_SignInit* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_SignInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_SignInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_SignInit)
    MergeFrom(*source);
  }
}

void Rsp_C_SignInit::MergeFrom(const Rsp_C_SignInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_SignInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_SignInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_SignInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_SignInit::CopyFrom(const Rsp_C_SignInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_SignInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_SignInit::IsInitialized() const {
  return true;
}

void Rsp_C_SignInit::Swap(Rsp_C_SignInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_SignInit::InternalSwap(Rsp_C_SignInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_SignInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Sign::InitAsDefaultInstance() {
}
class Req_C_Sign::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Sign* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pdata(Req_C_Sign* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_uldatalen(Req_C_Sign* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_psignature(Req_C_Sign* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pulsignaturelen(Req_C_Sign* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Sign::kHSessionFieldNumber;
const int Req_C_Sign::kPDataFieldNumber;
const int Req_C_Sign::kUlDataLenFieldNumber;
const int Req_C_Sign::kPSignatureFieldNumber;
const int Req_C_Sign::kPulSignatureLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Sign::Req_C_Sign()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Sign)
}
Req_C_Sign::Req_C_Sign(const Req_C_Sign& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdata()) {
    pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
  }
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psignature()) {
    psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulsignaturelen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulsignaturelen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Sign)
}

void Req_C_Sign::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Sign_pkcs11_2eproto.base);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulsignaturelen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulsignaturelen_));
}

Req_C_Sign::~Req_C_Sign() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Sign)
  SharedDtor();
}

void Req_C_Sign::SharedDtor() {
  pdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Sign::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Sign& Req_C_Sign::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Sign_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Sign::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Sign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pdata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      psignature_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulsignaturelen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulsignaturelen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Sign::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Sign*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pData = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulDataLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_uldatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pSignature = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_psignature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulSignatureLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pulsignaturelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Sign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Sign)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulDataLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_uldatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uldatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pSignature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_psignature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulSignatureLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pulsignaturelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulsignaturelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Sign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Sign)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Sign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Sign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pdata(), output);
  }

  // required uint32 ulDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uldatalen(), output);
  }

  // optional bytes pSignature = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->psignature(), output);
  }

  // optional uint32 pulSignatureLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pulsignaturelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Sign)
}

::google::protobuf::uint8* Req_C_Sign::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Sign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pData = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pdata(), target);
  }

  // required uint32 ulDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uldatalen(), target);
  }

  // optional bytes pSignature = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->psignature(), target);
  }

  // optional uint32 pulSignatureLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pulsignaturelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Sign)
  return target;
}

size_t Req_C_Sign::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Sign)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_uldatalen()) {
    // required uint32 ulDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldatalen());
  }

  return total_size;
}
size_t Req_C_Sign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Sign)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldatalen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pData = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdata());
    }

    // optional bytes pSignature = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->psignature());
    }

  }
  // optional uint32 pulSignatureLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulsignaturelen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Sign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Sign)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Sign* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Sign>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Sign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Sign)
    MergeFrom(*source);
  }
}

void Req_C_Sign::MergeFrom(const Req_C_Sign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Sign)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      uldatalen_ = from.uldatalen_;
    }
    if (cached_has_bits & 0x00000010u) {
      pulsignaturelen_ = from.pulsignaturelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Sign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Sign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Sign::CopyFrom(const Req_C_Sign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Sign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Sign::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_Sign::Swap(Req_C_Sign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Sign::InternalSwap(Req_C_Sign* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdata_.Swap(&other->pdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  psignature_.Swap(&other->psignature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(uldatalen_, other->uldatalen_);
  swap(pulsignaturelen_, other->pulsignaturelen_);
}

::google::protobuf::Metadata Req_C_Sign::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Sign::InitAsDefaultInstance() {
}
class Rsp_C_Sign::HasBitSetters {
 public:
  static void set_has_psignature(Rsp_C_Sign* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulsignaturelen(Rsp_C_Sign* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Sign::kPSignatureFieldNumber;
const int Rsp_C_Sign::kPulSignatureLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Sign::Rsp_C_Sign()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Sign)
}
Rsp_C_Sign::Rsp_C_Sign(const Rsp_C_Sign& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psignature()) {
    psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
  }
  pulsignaturelen_ = from.pulsignaturelen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Sign)
}

void Rsp_C_Sign::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Sign_pkcs11_2eproto.base);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulsignaturelen_ = 0u;
}

Rsp_C_Sign::~Rsp_C_Sign() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Sign)
  SharedDtor();
}

void Rsp_C_Sign::SharedDtor() {
  psignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Sign::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Sign& Rsp_C_Sign::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Sign_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Sign::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Sign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    psignature_.ClearNonDefaultToEmptyNoArena();
  }
  pulsignaturelen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Sign::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Sign*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pSignature = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_psignature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulSignatureLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulsignaturelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Sign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Sign)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pSignature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_psignature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulSignatureLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulsignaturelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulsignaturelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Sign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Sign)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Sign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Sign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pSignature = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->psignature(), output);
  }

  // optional uint32 pulSignatureLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulsignaturelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Sign)
}

::google::protobuf::uint8* Rsp_C_Sign::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Sign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pSignature = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->psignature(), target);
  }

  // optional uint32 pulSignatureLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulsignaturelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Sign)
  return target;
}

size_t Rsp_C_Sign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Sign)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pSignature = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->psignature());
    }

    // optional uint32 pulSignatureLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulsignaturelen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Sign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Sign)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Sign* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Sign>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Sign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Sign)
    MergeFrom(*source);
  }
}

void Rsp_C_Sign::MergeFrom(const Rsp_C_Sign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Sign)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulsignaturelen_ = from.pulsignaturelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Sign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Sign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Sign::CopyFrom(const Rsp_C_Sign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Sign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Sign::IsInitialized() const {
  return true;
}

void Rsp_C_Sign::Swap(Rsp_C_Sign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Sign::InternalSwap(Rsp_C_Sign* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  psignature_.Swap(&other->psignature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulsignaturelen_, other->pulsignaturelen_);
}

::google::protobuf::Metadata Rsp_C_Sign::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_SignUpdate::InitAsDefaultInstance() {
}
class Req_C_SignUpdate::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_SignUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ppart(Req_C_SignUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulpartlen(Req_C_SignUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_SignUpdate::kHSessionFieldNumber;
const int Req_C_SignUpdate::kPPartFieldNumber;
const int Req_C_SignUpdate::kUlPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_SignUpdate::Req_C_SignUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_SignUpdate)
}
Req_C_SignUpdate::Req_C_SignUpdate(const Req_C_SignUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_SignUpdate)
}

void Req_C_SignUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_SignUpdate_pkcs11_2eproto.base);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulpartlen_));
}

Req_C_SignUpdate::~Req_C_SignUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_SignUpdate)
  SharedDtor();
}

void Req_C_SignUpdate::SharedDtor() {
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_SignUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_SignUpdate& Req_C_SignUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_SignUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_SignUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_SignUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ppart_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_SignUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_SignUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPart = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulPartLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_SignUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_SignUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPart = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulPartLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_SignUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_SignUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_SignUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_SignUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pPart = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ppart(), output);
  }

  // required uint32 ulPartLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_SignUpdate)
}

::google::protobuf::uint8* Req_C_SignUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_SignUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pPart = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ppart(), target);
  }

  // required uint32 ulPartLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_SignUpdate)
  return target;
}

size_t Req_C_SignUpdate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_SignUpdate)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulpartlen()) {
    // required uint32 ulPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());
  }

  return total_size;
}
size_t Req_C_SignUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_SignUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pPart = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ppart());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_SignUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_SignUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_SignUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_SignUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_SignUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_SignUpdate)
    MergeFrom(*source);
  }
}

void Req_C_SignUpdate::MergeFrom(const Req_C_SignUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_SignUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulpartlen_ = from.ulpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_SignUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_SignUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_SignUpdate::CopyFrom(const Req_C_SignUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_SignUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_SignUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void Req_C_SignUpdate::Swap(Req_C_SignUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_SignUpdate::InternalSwap(Req_C_SignUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulpartlen_, other->ulpartlen_);
}

::google::protobuf::Metadata Req_C_SignUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_SignUpdate::InitAsDefaultInstance() {
}
class Rsp_C_SignUpdate::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_SignUpdate::Rsp_C_SignUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_SignUpdate)
}
Rsp_C_SignUpdate::Rsp_C_SignUpdate(const Rsp_C_SignUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_SignUpdate)
}

void Rsp_C_SignUpdate::SharedCtor() {
}

Rsp_C_SignUpdate::~Rsp_C_SignUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_SignUpdate)
  SharedDtor();
}

void Rsp_C_SignUpdate::SharedDtor() {
}

void Rsp_C_SignUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_SignUpdate& Rsp_C_SignUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_SignUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_SignUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_SignUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_SignUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_SignUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_SignUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_SignUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_SignUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_SignUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_SignUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_SignUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_SignUpdate)
}

::google::protobuf::uint8* Rsp_C_SignUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_SignUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_SignUpdate)
  return target;
}

size_t Rsp_C_SignUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_SignUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_SignUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_SignUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_SignUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_SignUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_SignUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_SignUpdate)
    MergeFrom(*source);
  }
}

void Rsp_C_SignUpdate::MergeFrom(const Rsp_C_SignUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_SignUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_SignUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_SignUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_SignUpdate::CopyFrom(const Rsp_C_SignUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_SignUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_SignUpdate::IsInitialized() const {
  return true;
}

void Rsp_C_SignUpdate::Swap(Rsp_C_SignUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_SignUpdate::InternalSwap(Rsp_C_SignUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_SignUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_SignFinal::InitAsDefaultInstance() {
}
class Req_C_SignFinal::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_SignFinal* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_psignature(Req_C_SignFinal* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulsignaturelen(Req_C_SignFinal* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_SignFinal::kHSessionFieldNumber;
const int Req_C_SignFinal::kPSignatureFieldNumber;
const int Req_C_SignFinal::kPulSignatureLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_SignFinal::Req_C_SignFinal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_SignFinal)
}
Req_C_SignFinal::Req_C_SignFinal(const Req_C_SignFinal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psignature()) {
    psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulsignaturelen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulsignaturelen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_SignFinal)
}

void Req_C_SignFinal::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_SignFinal_pkcs11_2eproto.base);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulsignaturelen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulsignaturelen_));
}

Req_C_SignFinal::~Req_C_SignFinal() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_SignFinal)
  SharedDtor();
}

void Req_C_SignFinal::SharedDtor() {
  psignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_SignFinal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_SignFinal& Req_C_SignFinal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_SignFinal_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_SignFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_SignFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    psignature_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulsignaturelen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulsignaturelen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_SignFinal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_SignFinal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pSignature = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_psignature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulSignatureLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_pulsignaturelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_SignFinal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_SignFinal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pSignature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_psignature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulSignatureLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_pulsignaturelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulsignaturelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_SignFinal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_SignFinal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_SignFinal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_SignFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pSignature = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->psignature(), output);
  }

  // optional uint32 pulSignatureLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pulsignaturelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_SignFinal)
}

::google::protobuf::uint8* Req_C_SignFinal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_SignFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pSignature = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->psignature(), target);
  }

  // optional uint32 pulSignatureLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pulsignaturelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_SignFinal)
  return target;
}

size_t Req_C_SignFinal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_SignFinal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pSignature = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->psignature());
  }

  // optional uint32 pulSignatureLen = 3;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulsignaturelen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_SignFinal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_SignFinal)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_SignFinal* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_SignFinal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_SignFinal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_SignFinal)
    MergeFrom(*source);
  }
}

void Req_C_SignFinal::MergeFrom(const Req_C_SignFinal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_SignFinal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      pulsignaturelen_ = from.pulsignaturelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_SignFinal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_SignFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_SignFinal::CopyFrom(const Req_C_SignFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_SignFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_SignFinal::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Req_C_SignFinal::Swap(Req_C_SignFinal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_SignFinal::InternalSwap(Req_C_SignFinal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  psignature_.Swap(&other->psignature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(pulsignaturelen_, other->pulsignaturelen_);
}

::google::protobuf::Metadata Req_C_SignFinal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_SignFinal::InitAsDefaultInstance() {
}
class Rsp_C_SignFinal::HasBitSetters {
 public:
  static void set_has_psignature(Rsp_C_SignFinal* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulsignaturelen(Rsp_C_SignFinal* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_SignFinal::kPSignatureFieldNumber;
const int Rsp_C_SignFinal::kPulSignatureLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_SignFinal::Rsp_C_SignFinal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_SignFinal)
}
Rsp_C_SignFinal::Rsp_C_SignFinal(const Rsp_C_SignFinal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psignature()) {
    psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
  }
  pulsignaturelen_ = from.pulsignaturelen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_SignFinal)
}

void Rsp_C_SignFinal::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_SignFinal_pkcs11_2eproto.base);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulsignaturelen_ = 0u;
}

Rsp_C_SignFinal::~Rsp_C_SignFinal() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_SignFinal)
  SharedDtor();
}

void Rsp_C_SignFinal::SharedDtor() {
  psignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_SignFinal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_SignFinal& Rsp_C_SignFinal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_SignFinal_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_SignFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_SignFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    psignature_.ClearNonDefaultToEmptyNoArena();
  }
  pulsignaturelen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_SignFinal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_SignFinal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pSignature = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_psignature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulSignatureLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulsignaturelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_SignFinal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_SignFinal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pSignature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_psignature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulSignatureLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulsignaturelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulsignaturelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_SignFinal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_SignFinal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_SignFinal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_SignFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pSignature = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->psignature(), output);
  }

  // optional uint32 pulSignatureLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulsignaturelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_SignFinal)
}

::google::protobuf::uint8* Rsp_C_SignFinal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_SignFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pSignature = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->psignature(), target);
  }

  // optional uint32 pulSignatureLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulsignaturelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_SignFinal)
  return target;
}

size_t Rsp_C_SignFinal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_SignFinal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pSignature = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->psignature());
    }

    // optional uint32 pulSignatureLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulsignaturelen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_SignFinal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_SignFinal)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_SignFinal* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_SignFinal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_SignFinal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_SignFinal)
    MergeFrom(*source);
  }
}

void Rsp_C_SignFinal::MergeFrom(const Rsp_C_SignFinal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_SignFinal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulsignaturelen_ = from.pulsignaturelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_SignFinal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_SignFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_SignFinal::CopyFrom(const Rsp_C_SignFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_SignFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_SignFinal::IsInitialized() const {
  return true;
}

void Rsp_C_SignFinal::Swap(Rsp_C_SignFinal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_SignFinal::InternalSwap(Rsp_C_SignFinal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  psignature_.Swap(&other->psignature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulsignaturelen_, other->pulsignaturelen_);
}

::google::protobuf::Metadata Rsp_C_SignFinal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_SignRecoverInit::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_SignRecoverInit_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_SignRecoverInit::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_SignRecoverInit* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_SignRecoverInit* msg);
  static void set_has_pmechanism(Req_C_SignRecoverInit* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hkey(Req_C_SignRecoverInit* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_SignRecoverInit::HasBitSetters::pmechanism(const Req_C_SignRecoverInit* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_SignRecoverInit::kHSessionFieldNumber;
const int Req_C_SignRecoverInit::kPMechanismFieldNumber;
const int Req_C_SignRecoverInit::kHKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_SignRecoverInit::Req_C_SignRecoverInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_SignRecoverInit)
}
Req_C_SignRecoverInit::Req_C_SignRecoverInit(const Req_C_SignRecoverInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&hkey_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_SignRecoverInit)
}

void Req_C_SignRecoverInit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_SignRecoverInit_pkcs11_2eproto.base);
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hkey_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(hkey_));
}

Req_C_SignRecoverInit::~Req_C_SignRecoverInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_SignRecoverInit)
  SharedDtor();
}

void Req_C_SignRecoverInit::SharedDtor() {
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_SignRecoverInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_SignRecoverInit& Req_C_SignRecoverInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_SignRecoverInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_SignRecoverInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_SignRecoverInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pmechanism_ != nullptr);
    pmechanism_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hkey_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_SignRecoverInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_SignRecoverInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint32 hKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_hkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_SignRecoverInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_SignRecoverInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_hkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_SignRecoverInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_SignRecoverInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_SignRecoverInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_SignRecoverInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_SignRecoverInit)
}

::google::protobuf::uint8* Req_C_SignRecoverInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_SignRecoverInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_SignRecoverInit)
  return target;
}

size_t Req_C_SignRecoverInit::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_SignRecoverInit)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hkey()) {
    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());
  }

  return total_size;
}
size_t Req_C_SignRecoverInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_SignRecoverInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmechanism_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_SignRecoverInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_SignRecoverInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_SignRecoverInit* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_SignRecoverInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_SignRecoverInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_SignRecoverInit)
    MergeFrom(*source);
  }
}

void Req_C_SignRecoverInit::MergeFrom(const Req_C_SignRecoverInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_SignRecoverInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      hkey_ = from.hkey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_SignRecoverInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_SignRecoverInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_SignRecoverInit::CopyFrom(const Req_C_SignRecoverInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_SignRecoverInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_SignRecoverInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_SignRecoverInit::Swap(Req_C_SignRecoverInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_SignRecoverInit::InternalSwap(Req_C_SignRecoverInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(hkey_, other->hkey_);
}

::google::protobuf::Metadata Req_C_SignRecoverInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_SignRecoverInit::InitAsDefaultInstance() {
}
class Rsp_C_SignRecoverInit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_SignRecoverInit::Rsp_C_SignRecoverInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_SignRecoverInit)
}
Rsp_C_SignRecoverInit::Rsp_C_SignRecoverInit(const Rsp_C_SignRecoverInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_SignRecoverInit)
}

void Rsp_C_SignRecoverInit::SharedCtor() {
}

Rsp_C_SignRecoverInit::~Rsp_C_SignRecoverInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  SharedDtor();
}

void Rsp_C_SignRecoverInit::SharedDtor() {
}

void Rsp_C_SignRecoverInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_SignRecoverInit& Rsp_C_SignRecoverInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_SignRecoverInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_SignRecoverInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_SignRecoverInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_SignRecoverInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_SignRecoverInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_SignRecoverInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_SignRecoverInit)
}

::google::protobuf::uint8* Rsp_C_SignRecoverInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  return target;
}

size_t Rsp_C_SignRecoverInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_SignRecoverInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_SignRecoverInit* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_SignRecoverInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_SignRecoverInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_SignRecoverInit)
    MergeFrom(*source);
  }
}

void Rsp_C_SignRecoverInit::MergeFrom(const Rsp_C_SignRecoverInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_SignRecoverInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_SignRecoverInit::CopyFrom(const Rsp_C_SignRecoverInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_SignRecoverInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_SignRecoverInit::IsInitialized() const {
  return true;
}

void Rsp_C_SignRecoverInit::Swap(Rsp_C_SignRecoverInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_SignRecoverInit::InternalSwap(Rsp_C_SignRecoverInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_SignRecoverInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_SignRecover::InitAsDefaultInstance() {
}
class Req_C_SignRecover::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_SignRecover* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pdata(Req_C_SignRecover* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_uldatalen(Req_C_SignRecover* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_psignature(Req_C_SignRecover* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pulsignaturelen(Req_C_SignRecover* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_SignRecover::kHSessionFieldNumber;
const int Req_C_SignRecover::kPDataFieldNumber;
const int Req_C_SignRecover::kUlDataLenFieldNumber;
const int Req_C_SignRecover::kPSignatureFieldNumber;
const int Req_C_SignRecover::kPulSignatureLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_SignRecover::Req_C_SignRecover()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_SignRecover)
}
Req_C_SignRecover::Req_C_SignRecover(const Req_C_SignRecover& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdata()) {
    pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
  }
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psignature()) {
    psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulsignaturelen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulsignaturelen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_SignRecover)
}

void Req_C_SignRecover::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_SignRecover_pkcs11_2eproto.base);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulsignaturelen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulsignaturelen_));
}

Req_C_SignRecover::~Req_C_SignRecover() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_SignRecover)
  SharedDtor();
}

void Req_C_SignRecover::SharedDtor() {
  pdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_SignRecover::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_SignRecover& Req_C_SignRecover::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_SignRecover_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_SignRecover::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_SignRecover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pdata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      psignature_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulsignaturelen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulsignaturelen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_SignRecover::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_SignRecover*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pData = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulDataLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_uldatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pSignature = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_psignature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulSignatureLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pulsignaturelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_SignRecover::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_SignRecover)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulDataLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_uldatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uldatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pSignature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_psignature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulSignatureLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pulsignaturelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulsignaturelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_SignRecover)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_SignRecover)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_SignRecover::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_SignRecover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pdata(), output);
  }

  // required uint32 ulDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uldatalen(), output);
  }

  // optional bytes pSignature = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->psignature(), output);
  }

  // optional uint32 pulSignatureLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pulsignaturelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_SignRecover)
}

::google::protobuf::uint8* Req_C_SignRecover::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_SignRecover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pData = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pdata(), target);
  }

  // required uint32 ulDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uldatalen(), target);
  }

  // optional bytes pSignature = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->psignature(), target);
  }

  // optional uint32 pulSignatureLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pulsignaturelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_SignRecover)
  return target;
}

size_t Req_C_SignRecover::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_SignRecover)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_uldatalen()) {
    // required uint32 ulDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldatalen());
  }

  return total_size;
}
size_t Req_C_SignRecover::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_SignRecover)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldatalen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pData = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdata());
    }

    // optional bytes pSignature = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->psignature());
    }

  }
  // optional uint32 pulSignatureLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulsignaturelen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_SignRecover::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_SignRecover)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_SignRecover* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_SignRecover>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_SignRecover)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_SignRecover)
    MergeFrom(*source);
  }
}

void Req_C_SignRecover::MergeFrom(const Req_C_SignRecover& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_SignRecover)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      uldatalen_ = from.uldatalen_;
    }
    if (cached_has_bits & 0x00000010u) {
      pulsignaturelen_ = from.pulsignaturelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_SignRecover::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_SignRecover)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_SignRecover::CopyFrom(const Req_C_SignRecover& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_SignRecover)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_SignRecover::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_SignRecover::Swap(Req_C_SignRecover* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_SignRecover::InternalSwap(Req_C_SignRecover* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdata_.Swap(&other->pdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  psignature_.Swap(&other->psignature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(uldatalen_, other->uldatalen_);
  swap(pulsignaturelen_, other->pulsignaturelen_);
}

::google::protobuf::Metadata Req_C_SignRecover::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_SignRecover::InitAsDefaultInstance() {
}
class Rsp_C_SignRecover::HasBitSetters {
 public:
  static void set_has_psignature(Rsp_C_SignRecover* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulsignaturelen(Rsp_C_SignRecover* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_SignRecover::kPSignatureFieldNumber;
const int Rsp_C_SignRecover::kPulSignatureLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_SignRecover::Rsp_C_SignRecover()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_SignRecover)
}
Rsp_C_SignRecover::Rsp_C_SignRecover(const Rsp_C_SignRecover& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psignature()) {
    psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
  }
  pulsignaturelen_ = from.pulsignaturelen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_SignRecover)
}

void Rsp_C_SignRecover::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_SignRecover_pkcs11_2eproto.base);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulsignaturelen_ = 0u;
}

Rsp_C_SignRecover::~Rsp_C_SignRecover() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_SignRecover)
  SharedDtor();
}

void Rsp_C_SignRecover::SharedDtor() {
  psignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_SignRecover::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_SignRecover& Rsp_C_SignRecover::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_SignRecover_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_SignRecover::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_SignRecover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    psignature_.ClearNonDefaultToEmptyNoArena();
  }
  pulsignaturelen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_SignRecover::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_SignRecover*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pSignature = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_psignature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulSignatureLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulsignaturelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_SignRecover::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_SignRecover)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pSignature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_psignature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulSignatureLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulsignaturelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulsignaturelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_SignRecover)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_SignRecover)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_SignRecover::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_SignRecover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pSignature = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->psignature(), output);
  }

  // optional uint32 pulSignatureLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulsignaturelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_SignRecover)
}

::google::protobuf::uint8* Rsp_C_SignRecover::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_SignRecover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pSignature = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->psignature(), target);
  }

  // optional uint32 pulSignatureLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulsignaturelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_SignRecover)
  return target;
}

size_t Rsp_C_SignRecover::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_SignRecover)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pSignature = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->psignature());
    }

    // optional uint32 pulSignatureLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulsignaturelen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_SignRecover::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_SignRecover)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_SignRecover* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_SignRecover>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_SignRecover)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_SignRecover)
    MergeFrom(*source);
  }
}

void Rsp_C_SignRecover::MergeFrom(const Rsp_C_SignRecover& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_SignRecover)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulsignaturelen_ = from.pulsignaturelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_SignRecover::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_SignRecover)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_SignRecover::CopyFrom(const Rsp_C_SignRecover& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_SignRecover)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_SignRecover::IsInitialized() const {
  return true;
}

void Rsp_C_SignRecover::Swap(Rsp_C_SignRecover* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_SignRecover::InternalSwap(Rsp_C_SignRecover* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  psignature_.Swap(&other->psignature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulsignaturelen_, other->pulsignaturelen_);
}

::google::protobuf::Metadata Rsp_C_SignRecover::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_VerifyInit::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_VerifyInit_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_VerifyInit::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_VerifyInit* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_VerifyInit* msg);
  static void set_has_pmechanism(Req_C_VerifyInit* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hkey(Req_C_VerifyInit* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_VerifyInit::HasBitSetters::pmechanism(const Req_C_VerifyInit* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_VerifyInit::kHSessionFieldNumber;
const int Req_C_VerifyInit::kPMechanismFieldNumber;
const int Req_C_VerifyInit::kHKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_VerifyInit::Req_C_VerifyInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_VerifyInit)
}
Req_C_VerifyInit::Req_C_VerifyInit(const Req_C_VerifyInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&hkey_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_VerifyInit)
}

void Req_C_VerifyInit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_VerifyInit_pkcs11_2eproto.base);
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hkey_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(hkey_));
}

Req_C_VerifyInit::~Req_C_VerifyInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_VerifyInit)
  SharedDtor();
}

void Req_C_VerifyInit::SharedDtor() {
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_VerifyInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_VerifyInit& Req_C_VerifyInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_VerifyInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_VerifyInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_VerifyInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pmechanism_ != nullptr);
    pmechanism_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hkey_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_VerifyInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_VerifyInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint32 hKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_hkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_VerifyInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_VerifyInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_hkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_VerifyInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_VerifyInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_VerifyInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_VerifyInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_VerifyInit)
}

::google::protobuf::uint8* Req_C_VerifyInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_VerifyInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_VerifyInit)
  return target;
}

size_t Req_C_VerifyInit::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_VerifyInit)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hkey()) {
    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());
  }

  return total_size;
}
size_t Req_C_VerifyInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_VerifyInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmechanism_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_VerifyInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_VerifyInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_VerifyInit* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_VerifyInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_VerifyInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_VerifyInit)
    MergeFrom(*source);
  }
}

void Req_C_VerifyInit::MergeFrom(const Req_C_VerifyInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_VerifyInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      hkey_ = from.hkey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_VerifyInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_VerifyInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_VerifyInit::CopyFrom(const Req_C_VerifyInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_VerifyInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_VerifyInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_VerifyInit::Swap(Req_C_VerifyInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_VerifyInit::InternalSwap(Req_C_VerifyInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(hkey_, other->hkey_);
}

::google::protobuf::Metadata Req_C_VerifyInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_VerifyInit::InitAsDefaultInstance() {
}
class Rsp_C_VerifyInit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_VerifyInit::Rsp_C_VerifyInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_VerifyInit)
}
Rsp_C_VerifyInit::Rsp_C_VerifyInit(const Rsp_C_VerifyInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_VerifyInit)
}

void Rsp_C_VerifyInit::SharedCtor() {
}

Rsp_C_VerifyInit::~Rsp_C_VerifyInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_VerifyInit)
  SharedDtor();
}

void Rsp_C_VerifyInit::SharedDtor() {
}

void Rsp_C_VerifyInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_VerifyInit& Rsp_C_VerifyInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_VerifyInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_VerifyInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_VerifyInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_VerifyInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_VerifyInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_VerifyInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_VerifyInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_VerifyInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_VerifyInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_VerifyInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_VerifyInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_VerifyInit)
}

::google::protobuf::uint8* Rsp_C_VerifyInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_VerifyInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_VerifyInit)
  return target;
}

size_t Rsp_C_VerifyInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_VerifyInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_VerifyInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_VerifyInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_VerifyInit* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_VerifyInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_VerifyInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_VerifyInit)
    MergeFrom(*source);
  }
}

void Rsp_C_VerifyInit::MergeFrom(const Rsp_C_VerifyInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_VerifyInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_VerifyInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_VerifyInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_VerifyInit::CopyFrom(const Rsp_C_VerifyInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_VerifyInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_VerifyInit::IsInitialized() const {
  return true;
}

void Rsp_C_VerifyInit::Swap(Rsp_C_VerifyInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_VerifyInit::InternalSwap(Rsp_C_VerifyInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_VerifyInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Verify::InitAsDefaultInstance() {
}
class Req_C_Verify::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Verify* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pdata(Req_C_Verify* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_uldatalen(Req_C_Verify* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_psignature(Req_C_Verify* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ulsignaturelen(Req_C_Verify* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Verify::kHSessionFieldNumber;
const int Req_C_Verify::kPDataFieldNumber;
const int Req_C_Verify::kUlDataLenFieldNumber;
const int Req_C_Verify::kPSignatureFieldNumber;
const int Req_C_Verify::kUlSignatureLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Verify::Req_C_Verify()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Verify)
}
Req_C_Verify::Req_C_Verify(const Req_C_Verify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdata()) {
    pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
  }
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psignature()) {
    psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulsignaturelen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulsignaturelen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Verify)
}

void Req_C_Verify::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Verify_pkcs11_2eproto.base);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulsignaturelen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulsignaturelen_));
}

Req_C_Verify::~Req_C_Verify() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Verify)
  SharedDtor();
}

void Req_C_Verify::SharedDtor() {
  pdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Verify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Verify& Req_C_Verify::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Verify_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Verify::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Verify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pdata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      psignature_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulsignaturelen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulsignaturelen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Verify::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Verify*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pData = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulDataLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_uldatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pSignature = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_psignature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulSignatureLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ulsignaturelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Verify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Verify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulDataLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_uldatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uldatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pSignature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_psignature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulSignatureLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ulsignaturelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulsignaturelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Verify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Verify)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Verify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Verify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pdata(), output);
  }

  // required uint32 ulDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uldatalen(), output);
  }

  // optional bytes pSignature = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->psignature(), output);
  }

  // required uint32 ulSignatureLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ulsignaturelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Verify)
}

::google::protobuf::uint8* Req_C_Verify::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Verify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pData = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pdata(), target);
  }

  // required uint32 ulDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uldatalen(), target);
  }

  // optional bytes pSignature = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->psignature(), target);
  }

  // required uint32 ulSignatureLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ulsignaturelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Verify)
  return target;
}

size_t Req_C_Verify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Verify)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_uldatalen()) {
    // required uint32 ulDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldatalen());
  }

  if (has_ulsignaturelen()) {
    // required uint32 ulSignatureLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulsignaturelen());
  }

  return total_size;
}
size_t Req_C_Verify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Verify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001c) ^ 0x0000001c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldatalen());

    // required uint32 ulSignatureLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulsignaturelen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pData = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdata());
    }

    // optional bytes pSignature = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->psignature());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Verify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Verify)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Verify* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Verify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Verify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Verify)
    MergeFrom(*source);
  }
}

void Req_C_Verify::MergeFrom(const Req_C_Verify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Verify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      uldatalen_ = from.uldatalen_;
    }
    if (cached_has_bits & 0x00000010u) {
      ulsignaturelen_ = from.ulsignaturelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Verify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Verify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Verify::CopyFrom(const Req_C_Verify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Verify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Verify::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;
  return true;
}

void Req_C_Verify::Swap(Req_C_Verify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Verify::InternalSwap(Req_C_Verify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdata_.Swap(&other->pdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  psignature_.Swap(&other->psignature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(uldatalen_, other->uldatalen_);
  swap(ulsignaturelen_, other->ulsignaturelen_);
}

::google::protobuf::Metadata Req_C_Verify::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Verify::InitAsDefaultInstance() {
}
class Rsp_C_Verify::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Verify::Rsp_C_Verify()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Verify)
}
Rsp_C_Verify::Rsp_C_Verify(const Rsp_C_Verify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Verify)
}

void Rsp_C_Verify::SharedCtor() {
}

Rsp_C_Verify::~Rsp_C_Verify() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Verify)
  SharedDtor();
}

void Rsp_C_Verify::SharedDtor() {
}

void Rsp_C_Verify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Verify& Rsp_C_Verify::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Verify_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Verify::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Verify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Verify::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Verify*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Verify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Verify)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Verify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Verify)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Verify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Verify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Verify)
}

::google::protobuf::uint8* Rsp_C_Verify::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Verify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Verify)
  return target;
}

size_t Rsp_C_Verify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Verify)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Verify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Verify)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Verify* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Verify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Verify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Verify)
    MergeFrom(*source);
  }
}

void Rsp_C_Verify::MergeFrom(const Rsp_C_Verify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Verify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Verify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Verify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Verify::CopyFrom(const Rsp_C_Verify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Verify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Verify::IsInitialized() const {
  return true;
}

void Rsp_C_Verify::Swap(Rsp_C_Verify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Verify::InternalSwap(Rsp_C_Verify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Verify::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_VerifyUpdate::InitAsDefaultInstance() {
}
class Req_C_VerifyUpdate::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_VerifyUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ppart(Req_C_VerifyUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulpartlen(Req_C_VerifyUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_VerifyUpdate::kHSessionFieldNumber;
const int Req_C_VerifyUpdate::kPPartFieldNumber;
const int Req_C_VerifyUpdate::kUlPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_VerifyUpdate::Req_C_VerifyUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_VerifyUpdate)
}
Req_C_VerifyUpdate::Req_C_VerifyUpdate(const Req_C_VerifyUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_VerifyUpdate)
}

void Req_C_VerifyUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_VerifyUpdate_pkcs11_2eproto.base);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulpartlen_));
}

Req_C_VerifyUpdate::~Req_C_VerifyUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_VerifyUpdate)
  SharedDtor();
}

void Req_C_VerifyUpdate::SharedDtor() {
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_VerifyUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_VerifyUpdate& Req_C_VerifyUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_VerifyUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_VerifyUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_VerifyUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ppart_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_VerifyUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_VerifyUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPart = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulPartLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_VerifyUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_VerifyUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPart = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulPartLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_VerifyUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_VerifyUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_VerifyUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_VerifyUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pPart = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ppart(), output);
  }

  // required uint32 ulPartLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_VerifyUpdate)
}

::google::protobuf::uint8* Req_C_VerifyUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_VerifyUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pPart = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ppart(), target);
  }

  // required uint32 ulPartLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_VerifyUpdate)
  return target;
}

size_t Req_C_VerifyUpdate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_VerifyUpdate)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulpartlen()) {
    // required uint32 ulPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());
  }

  return total_size;
}
size_t Req_C_VerifyUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_VerifyUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pPart = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ppart());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_VerifyUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_VerifyUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_VerifyUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_VerifyUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_VerifyUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_VerifyUpdate)
    MergeFrom(*source);
  }
}

void Req_C_VerifyUpdate::MergeFrom(const Req_C_VerifyUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_VerifyUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulpartlen_ = from.ulpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_VerifyUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_VerifyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_VerifyUpdate::CopyFrom(const Req_C_VerifyUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_VerifyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_VerifyUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void Req_C_VerifyUpdate::Swap(Req_C_VerifyUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_VerifyUpdate::InternalSwap(Req_C_VerifyUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulpartlen_, other->ulpartlen_);
}

::google::protobuf::Metadata Req_C_VerifyUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_VerifyUpdate::InitAsDefaultInstance() {
}
class Rsp_C_VerifyUpdate::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_VerifyUpdate::Rsp_C_VerifyUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_VerifyUpdate)
}
Rsp_C_VerifyUpdate::Rsp_C_VerifyUpdate(const Rsp_C_VerifyUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_VerifyUpdate)
}

void Rsp_C_VerifyUpdate::SharedCtor() {
}

Rsp_C_VerifyUpdate::~Rsp_C_VerifyUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  SharedDtor();
}

void Rsp_C_VerifyUpdate::SharedDtor() {
}

void Rsp_C_VerifyUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_VerifyUpdate& Rsp_C_VerifyUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_VerifyUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_VerifyUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_VerifyUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_VerifyUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_VerifyUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_VerifyUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_VerifyUpdate)
}

::google::protobuf::uint8* Rsp_C_VerifyUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  return target;
}

size_t Rsp_C_VerifyUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_VerifyUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_VerifyUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_VerifyUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_VerifyUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_VerifyUpdate)
    MergeFrom(*source);
  }
}

void Rsp_C_VerifyUpdate::MergeFrom(const Rsp_C_VerifyUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_VerifyUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_VerifyUpdate::CopyFrom(const Rsp_C_VerifyUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_VerifyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_VerifyUpdate::IsInitialized() const {
  return true;
}

void Rsp_C_VerifyUpdate::Swap(Rsp_C_VerifyUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_VerifyUpdate::InternalSwap(Rsp_C_VerifyUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_VerifyUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_VerifyFinal::InitAsDefaultInstance() {
}
class Req_C_VerifyFinal::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_VerifyFinal* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_psignature(Req_C_VerifyFinal* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulsignaturelen(Req_C_VerifyFinal* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_VerifyFinal::kHSessionFieldNumber;
const int Req_C_VerifyFinal::kPSignatureFieldNumber;
const int Req_C_VerifyFinal::kUlSignatureLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_VerifyFinal::Req_C_VerifyFinal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_VerifyFinal)
}
Req_C_VerifyFinal::Req_C_VerifyFinal(const Req_C_VerifyFinal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psignature()) {
    psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulsignaturelen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulsignaturelen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_VerifyFinal)
}

void Req_C_VerifyFinal::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_VerifyFinal_pkcs11_2eproto.base);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulsignaturelen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulsignaturelen_));
}

Req_C_VerifyFinal::~Req_C_VerifyFinal() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_VerifyFinal)
  SharedDtor();
}

void Req_C_VerifyFinal::SharedDtor() {
  psignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_VerifyFinal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_VerifyFinal& Req_C_VerifyFinal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_VerifyFinal_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_VerifyFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_VerifyFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    psignature_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulsignaturelen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulsignaturelen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_VerifyFinal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_VerifyFinal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pSignature = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_psignature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulSignatureLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulsignaturelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_VerifyFinal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_VerifyFinal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pSignature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_psignature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulSignatureLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulsignaturelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulsignaturelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_VerifyFinal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_VerifyFinal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_VerifyFinal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_VerifyFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pSignature = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->psignature(), output);
  }

  // required uint32 ulSignatureLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulsignaturelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_VerifyFinal)
}

::google::protobuf::uint8* Req_C_VerifyFinal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_VerifyFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pSignature = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->psignature(), target);
  }

  // required uint32 ulSignatureLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulsignaturelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_VerifyFinal)
  return target;
}

size_t Req_C_VerifyFinal::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_VerifyFinal)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulsignaturelen()) {
    // required uint32 ulSignatureLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulsignaturelen());
  }

  return total_size;
}
size_t Req_C_VerifyFinal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_VerifyFinal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulSignatureLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulsignaturelen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pSignature = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->psignature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_VerifyFinal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_VerifyFinal)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_VerifyFinal* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_VerifyFinal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_VerifyFinal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_VerifyFinal)
    MergeFrom(*source);
  }
}

void Req_C_VerifyFinal::MergeFrom(const Req_C_VerifyFinal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_VerifyFinal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulsignaturelen_ = from.ulsignaturelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_VerifyFinal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_VerifyFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_VerifyFinal::CopyFrom(const Req_C_VerifyFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_VerifyFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_VerifyFinal::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void Req_C_VerifyFinal::Swap(Req_C_VerifyFinal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_VerifyFinal::InternalSwap(Req_C_VerifyFinal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  psignature_.Swap(&other->psignature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulsignaturelen_, other->ulsignaturelen_);
}

::google::protobuf::Metadata Req_C_VerifyFinal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_VerifyFinal::InitAsDefaultInstance() {
}
class Rsp_C_VerifyFinal::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_VerifyFinal::Rsp_C_VerifyFinal()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_VerifyFinal)
}
Rsp_C_VerifyFinal::Rsp_C_VerifyFinal(const Rsp_C_VerifyFinal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_VerifyFinal)
}

void Rsp_C_VerifyFinal::SharedCtor() {
}

Rsp_C_VerifyFinal::~Rsp_C_VerifyFinal() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_VerifyFinal)
  SharedDtor();
}

void Rsp_C_VerifyFinal::SharedDtor() {
}

void Rsp_C_VerifyFinal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_VerifyFinal& Rsp_C_VerifyFinal::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_VerifyFinal_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_VerifyFinal::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_VerifyFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_VerifyFinal::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_VerifyFinal*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_VerifyFinal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_VerifyFinal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_VerifyFinal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_VerifyFinal)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_VerifyFinal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_VerifyFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_VerifyFinal)
}

::google::protobuf::uint8* Rsp_C_VerifyFinal::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_VerifyFinal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_VerifyFinal)
  return target;
}

size_t Rsp_C_VerifyFinal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_VerifyFinal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_VerifyFinal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_VerifyFinal)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_VerifyFinal* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_VerifyFinal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_VerifyFinal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_VerifyFinal)
    MergeFrom(*source);
  }
}

void Rsp_C_VerifyFinal::MergeFrom(const Rsp_C_VerifyFinal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_VerifyFinal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_VerifyFinal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_VerifyFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_VerifyFinal::CopyFrom(const Rsp_C_VerifyFinal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_VerifyFinal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_VerifyFinal::IsInitialized() const {
  return true;
}

void Rsp_C_VerifyFinal::Swap(Rsp_C_VerifyFinal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_VerifyFinal::InternalSwap(Rsp_C_VerifyFinal* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_VerifyFinal::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_VerifyRecoverInit::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_VerifyRecoverInit_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_VerifyRecoverInit::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_VerifyRecoverInit* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_VerifyRecoverInit* msg);
  static void set_has_pmechanism(Req_C_VerifyRecoverInit* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hkey(Req_C_VerifyRecoverInit* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_VerifyRecoverInit::HasBitSetters::pmechanism(const Req_C_VerifyRecoverInit* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_VerifyRecoverInit::kHSessionFieldNumber;
const int Req_C_VerifyRecoverInit::kPMechanismFieldNumber;
const int Req_C_VerifyRecoverInit::kHKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_VerifyRecoverInit::Req_C_VerifyRecoverInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_VerifyRecoverInit)
}
Req_C_VerifyRecoverInit::Req_C_VerifyRecoverInit(const Req_C_VerifyRecoverInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&hkey_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_VerifyRecoverInit)
}

void Req_C_VerifyRecoverInit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_VerifyRecoverInit_pkcs11_2eproto.base);
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hkey_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(hkey_));
}

Req_C_VerifyRecoverInit::~Req_C_VerifyRecoverInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  SharedDtor();
}

void Req_C_VerifyRecoverInit::SharedDtor() {
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_VerifyRecoverInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_VerifyRecoverInit& Req_C_VerifyRecoverInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_VerifyRecoverInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_VerifyRecoverInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pmechanism_ != nullptr);
    pmechanism_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hkey_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(hkey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_VerifyRecoverInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_VerifyRecoverInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint32 hKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_hkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_VerifyRecoverInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_hkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_VerifyRecoverInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_VerifyRecoverInit)
}

::google::protobuf::uint8* Req_C_VerifyRecoverInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  return target;
}

size_t Req_C_VerifyRecoverInit::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hkey()) {
    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());
  }

  return total_size;
}
size_t Req_C_VerifyRecoverInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmechanism_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_VerifyRecoverInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_VerifyRecoverInit* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_VerifyRecoverInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_VerifyRecoverInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_VerifyRecoverInit)
    MergeFrom(*source);
  }
}

void Req_C_VerifyRecoverInit::MergeFrom(const Req_C_VerifyRecoverInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      hkey_ = from.hkey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_VerifyRecoverInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_VerifyRecoverInit::CopyFrom(const Req_C_VerifyRecoverInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_VerifyRecoverInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_VerifyRecoverInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_VerifyRecoverInit::Swap(Req_C_VerifyRecoverInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_VerifyRecoverInit::InternalSwap(Req_C_VerifyRecoverInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(hkey_, other->hkey_);
}

::google::protobuf::Metadata Req_C_VerifyRecoverInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_VerifyRecoverInit::InitAsDefaultInstance() {
}
class Rsp_C_VerifyRecoverInit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_VerifyRecoverInit::Rsp_C_VerifyRecoverInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
}
Rsp_C_VerifyRecoverInit::Rsp_C_VerifyRecoverInit(const Rsp_C_VerifyRecoverInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
}

void Rsp_C_VerifyRecoverInit::SharedCtor() {
}

Rsp_C_VerifyRecoverInit::~Rsp_C_VerifyRecoverInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  SharedDtor();
}

void Rsp_C_VerifyRecoverInit::SharedDtor() {
}

void Rsp_C_VerifyRecoverInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_VerifyRecoverInit& Rsp_C_VerifyRecoverInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_VerifyRecoverInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_VerifyRecoverInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_VerifyRecoverInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_VerifyRecoverInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_VerifyRecoverInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_VerifyRecoverInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
}

::google::protobuf::uint8* Rsp_C_VerifyRecoverInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  return target;
}

size_t Rsp_C_VerifyRecoverInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_VerifyRecoverInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_VerifyRecoverInit* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_VerifyRecoverInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
    MergeFrom(*source);
  }
}

void Rsp_C_VerifyRecoverInit::MergeFrom(const Rsp_C_VerifyRecoverInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_VerifyRecoverInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_VerifyRecoverInit::CopyFrom(const Rsp_C_VerifyRecoverInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_VerifyRecoverInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_VerifyRecoverInit::IsInitialized() const {
  return true;
}

void Rsp_C_VerifyRecoverInit::Swap(Rsp_C_VerifyRecoverInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_VerifyRecoverInit::InternalSwap(Rsp_C_VerifyRecoverInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_VerifyRecoverInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_VerifyRecover::InitAsDefaultInstance() {
}
class Req_C_VerifyRecover::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_VerifyRecover* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_psignature(Req_C_VerifyRecover* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulsignaturelen(Req_C_VerifyRecover* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pdata(Req_C_VerifyRecover* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_puldatalen(Req_C_VerifyRecover* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_VerifyRecover::kHSessionFieldNumber;
const int Req_C_VerifyRecover::kPSignatureFieldNumber;
const int Req_C_VerifyRecover::kUlSignatureLenFieldNumber;
const int Req_C_VerifyRecover::kPDataFieldNumber;
const int Req_C_VerifyRecover::kPulDataLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_VerifyRecover::Req_C_VerifyRecover()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_VerifyRecover)
}
Req_C_VerifyRecover::Req_C_VerifyRecover(const Req_C_VerifyRecover& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psignature()) {
    psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
  }
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdata()) {
    pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&puldatalen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(puldatalen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_VerifyRecover)
}

void Req_C_VerifyRecover::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_VerifyRecover_pkcs11_2eproto.base);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&puldatalen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(puldatalen_));
}

Req_C_VerifyRecover::~Req_C_VerifyRecover() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_VerifyRecover)
  SharedDtor();
}

void Req_C_VerifyRecover::SharedDtor() {
  psignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_VerifyRecover::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_VerifyRecover& Req_C_VerifyRecover::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_VerifyRecover_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_VerifyRecover::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_VerifyRecover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      psignature_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pdata_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&puldatalen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(puldatalen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_VerifyRecover::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_VerifyRecover*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pSignature = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_psignature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulSignatureLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulsignaturelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pData = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulDataLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_puldatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_VerifyRecover::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_VerifyRecover)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pSignature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_psignature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulSignatureLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulsignaturelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulsignaturelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulDataLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_puldatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puldatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_VerifyRecover)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_VerifyRecover)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_VerifyRecover::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_VerifyRecover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pSignature = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->psignature(), output);
  }

  // required uint32 ulSignatureLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulsignaturelen(), output);
  }

  // optional bytes pData = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pdata(), output);
  }

  // optional uint32 pulDataLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->puldatalen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_VerifyRecover)
}

::google::protobuf::uint8* Req_C_VerifyRecover::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_VerifyRecover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pSignature = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->psignature(), target);
  }

  // required uint32 ulSignatureLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulsignaturelen(), target);
  }

  // optional bytes pData = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pdata(), target);
  }

  // optional uint32 pulDataLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->puldatalen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_VerifyRecover)
  return target;
}

size_t Req_C_VerifyRecover::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_VerifyRecover)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulsignaturelen()) {
    // required uint32 ulSignatureLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulsignaturelen());
  }

  return total_size;
}
size_t Req_C_VerifyRecover::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_VerifyRecover)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulSignatureLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulsignaturelen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pSignature = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->psignature());
    }

    // optional bytes pData = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdata());
    }

  }
  // optional uint32 pulDataLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->puldatalen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_VerifyRecover::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_VerifyRecover)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_VerifyRecover* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_VerifyRecover>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_VerifyRecover)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_VerifyRecover)
    MergeFrom(*source);
  }
}

void Req_C_VerifyRecover::MergeFrom(const Req_C_VerifyRecover& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_VerifyRecover)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulsignaturelen_ = from.ulsignaturelen_;
    }
    if (cached_has_bits & 0x00000010u) {
      puldatalen_ = from.puldatalen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_VerifyRecover::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_VerifyRecover)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_VerifyRecover::CopyFrom(const Req_C_VerifyRecover& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_VerifyRecover)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_VerifyRecover::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_VerifyRecover::Swap(Req_C_VerifyRecover* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_VerifyRecover::InternalSwap(Req_C_VerifyRecover* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  psignature_.Swap(&other->psignature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pdata_.Swap(&other->pdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulsignaturelen_, other->ulsignaturelen_);
  swap(puldatalen_, other->puldatalen_);
}

::google::protobuf::Metadata Req_C_VerifyRecover::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_VerifyRecover::InitAsDefaultInstance() {
}
class Rsp_C_VerifyRecover::HasBitSetters {
 public:
  static void set_has_pdata(Rsp_C_VerifyRecover* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_puldatalen(Rsp_C_VerifyRecover* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_VerifyRecover::kPDataFieldNumber;
const int Rsp_C_VerifyRecover::kPulDataLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_VerifyRecover::Rsp_C_VerifyRecover()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_VerifyRecover)
}
Rsp_C_VerifyRecover::Rsp_C_VerifyRecover(const Rsp_C_VerifyRecover& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdata()) {
    pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
  }
  puldatalen_ = from.puldatalen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_VerifyRecover)
}

void Rsp_C_VerifyRecover::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_VerifyRecover_pkcs11_2eproto.base);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  puldatalen_ = 0u;
}

Rsp_C_VerifyRecover::~Rsp_C_VerifyRecover() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_VerifyRecover)
  SharedDtor();
}

void Rsp_C_VerifyRecover::SharedDtor() {
  pdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_VerifyRecover::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_VerifyRecover& Rsp_C_VerifyRecover::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_VerifyRecover_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_VerifyRecover::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_VerifyRecover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pdata_.ClearNonDefaultToEmptyNoArena();
  }
  puldatalen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_VerifyRecover::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_VerifyRecover*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pData = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulDataLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_puldatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_VerifyRecover::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_VerifyRecover)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulDataLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_puldatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puldatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_VerifyRecover)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_VerifyRecover)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_VerifyRecover::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_VerifyRecover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pdata(), output);
  }

  // optional uint32 pulDataLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->puldatalen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_VerifyRecover)
}

::google::protobuf::uint8* Rsp_C_VerifyRecover::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_VerifyRecover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pData = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pdata(), target);
  }

  // optional uint32 pulDataLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->puldatalen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_VerifyRecover)
  return target;
}

size_t Rsp_C_VerifyRecover::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_VerifyRecover)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pData = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdata());
    }

    // optional uint32 pulDataLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->puldatalen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_VerifyRecover::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_VerifyRecover)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_VerifyRecover* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_VerifyRecover>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_VerifyRecover)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_VerifyRecover)
    MergeFrom(*source);
  }
}

void Rsp_C_VerifyRecover::MergeFrom(const Rsp_C_VerifyRecover& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_VerifyRecover)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
    }
    if (cached_has_bits & 0x00000002u) {
      puldatalen_ = from.puldatalen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_VerifyRecover::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_VerifyRecover)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_VerifyRecover::CopyFrom(const Rsp_C_VerifyRecover& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_VerifyRecover)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_VerifyRecover::IsInitialized() const {
  return true;
}

void Rsp_C_VerifyRecover::Swap(Rsp_C_VerifyRecover* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_VerifyRecover::InternalSwap(Rsp_C_VerifyRecover* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdata_.Swap(&other->pdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(puldatalen_, other->puldatalen_);
}

::google::protobuf::Metadata Rsp_C_VerifyRecover::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_DigestEncryptUpdate::InitAsDefaultInstance() {
}
class Req_C_DigestEncryptUpdate::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_DigestEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_ppart(Req_C_DigestEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulpartlen(Req_C_DigestEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pencryptedpart(Req_C_DigestEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pulencryptedpartlen(Req_C_DigestEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_DigestEncryptUpdate::kHSessionFieldNumber;
const int Req_C_DigestEncryptUpdate::kPPartFieldNumber;
const int Req_C_DigestEncryptUpdate::kUlPartLenFieldNumber;
const int Req_C_DigestEncryptUpdate::kPEncryptedPartFieldNumber;
const int Req_C_DigestEncryptUpdate::kPulEncryptedPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_DigestEncryptUpdate::Req_C_DigestEncryptUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
}
Req_C_DigestEncryptUpdate::Req_C_DigestEncryptUpdate(const Req_C_DigestEncryptUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencryptedpart()) {
    pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulencryptedpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulencryptedpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
}

void Req_C_DigestEncryptUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_DigestEncryptUpdate_pkcs11_2eproto.base);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulencryptedpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulencryptedpartlen_));
}

Req_C_DigestEncryptUpdate::~Req_C_DigestEncryptUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  SharedDtor();
}

void Req_C_DigestEncryptUpdate::SharedDtor() {
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_DigestEncryptUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_DigestEncryptUpdate& Req_C_DigestEncryptUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_DigestEncryptUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_DigestEncryptUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ppart_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pencryptedpart_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulencryptedpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulencryptedpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_DigestEncryptUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_DigestEncryptUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPart = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulPartLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pEncryptedPart = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulEncryptedPartLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pulencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_DigestEncryptUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPart = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulPartLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pEncryptedPart = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulEncryptedPartLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pulencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_DigestEncryptUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pPart = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ppart(), output);
  }

  // required uint32 ulPartLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulpartlen(), output);
  }

  // optional bytes pEncryptedPart = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pencryptedpart(), output);
  }

  // optional uint32 pulEncryptedPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pulencryptedpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
}

::google::protobuf::uint8* Req_C_DigestEncryptUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pPart = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ppart(), target);
  }

  // required uint32 ulPartLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulpartlen(), target);
  }

  // optional bytes pEncryptedPart = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pencryptedpart(), target);
  }

  // optional uint32 pulEncryptedPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pulencryptedpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  return target;
}

size_t Req_C_DigestEncryptUpdate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulpartlen()) {
    // required uint32 ulPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());
  }

  return total_size;
}
size_t Req_C_DigestEncryptUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pPart = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppart());
    }

    // optional bytes pEncryptedPart = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencryptedpart());
    }

  }
  // optional uint32 pulEncryptedPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulencryptedpartlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_DigestEncryptUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_DigestEncryptUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_DigestEncryptUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
    MergeFrom(*source);
  }
}

void Req_C_DigestEncryptUpdate::MergeFrom(const Req_C_DigestEncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulpartlen_ = from.ulpartlen_;
    }
    if (cached_has_bits & 0x00000010u) {
      pulencryptedpartlen_ = from.pulencryptedpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_DigestEncryptUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_DigestEncryptUpdate::CopyFrom(const Req_C_DigestEncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_DigestEncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_DigestEncryptUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_DigestEncryptUpdate::Swap(Req_C_DigestEncryptUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_DigestEncryptUpdate::InternalSwap(Req_C_DigestEncryptUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pencryptedpart_.Swap(&other->pencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulpartlen_, other->ulpartlen_);
  swap(pulencryptedpartlen_, other->pulencryptedpartlen_);
}

::google::protobuf::Metadata Req_C_DigestEncryptUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_DigestEncryptUpdate::InitAsDefaultInstance() {
}
class Rsp_C_DigestEncryptUpdate::HasBitSetters {
 public:
  static void set_has_pencryptedpart(Rsp_C_DigestEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulencryptedpartlen(Rsp_C_DigestEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_DigestEncryptUpdate::kPEncryptedPartFieldNumber;
const int Rsp_C_DigestEncryptUpdate::kPulEncryptedPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_DigestEncryptUpdate::Rsp_C_DigestEncryptUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
}
Rsp_C_DigestEncryptUpdate::Rsp_C_DigestEncryptUpdate(const Rsp_C_DigestEncryptUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencryptedpart()) {
    pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
  }
  pulencryptedpartlen_ = from.pulencryptedpartlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
}

void Rsp_C_DigestEncryptUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_DigestEncryptUpdate_pkcs11_2eproto.base);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulencryptedpartlen_ = 0u;
}

Rsp_C_DigestEncryptUpdate::~Rsp_C_DigestEncryptUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  SharedDtor();
}

void Rsp_C_DigestEncryptUpdate::SharedDtor() {
  pencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_DigestEncryptUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_DigestEncryptUpdate& Rsp_C_DigestEncryptUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_DigestEncryptUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_DigestEncryptUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pencryptedpart_.ClearNonDefaultToEmptyNoArena();
  }
  pulencryptedpartlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_DigestEncryptUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_DigestEncryptUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pEncryptedPart = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulEncryptedPartLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_DigestEncryptUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pEncryptedPart = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulEncryptedPartLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_DigestEncryptUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pEncryptedPart = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pencryptedpart(), output);
  }

  // optional uint32 pulEncryptedPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulencryptedpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
}

::google::protobuf::uint8* Rsp_C_DigestEncryptUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pEncryptedPart = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pencryptedpart(), target);
  }

  // optional uint32 pulEncryptedPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulencryptedpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  return target;
}

size_t Rsp_C_DigestEncryptUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pEncryptedPart = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencryptedpart());
    }

    // optional uint32 pulEncryptedPartLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulencryptedpartlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_DigestEncryptUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_DigestEncryptUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_DigestEncryptUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
    MergeFrom(*source);
  }
}

void Rsp_C_DigestEncryptUpdate::MergeFrom(const Rsp_C_DigestEncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulencryptedpartlen_ = from.pulencryptedpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_DigestEncryptUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_DigestEncryptUpdate::CopyFrom(const Rsp_C_DigestEncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_DigestEncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_DigestEncryptUpdate::IsInitialized() const {
  return true;
}

void Rsp_C_DigestEncryptUpdate::Swap(Rsp_C_DigestEncryptUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_DigestEncryptUpdate::InternalSwap(Rsp_C_DigestEncryptUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pencryptedpart_.Swap(&other->pencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulencryptedpartlen_, other->pulencryptedpartlen_);
}

::google::protobuf::Metadata Rsp_C_DigestEncryptUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_DecryptDigestUpdate::InitAsDefaultInstance() {
}
class Req_C_DecryptDigestUpdate::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_DecryptDigestUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pencryptedpart(Req_C_DecryptDigestUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulencryptedpartlen(Req_C_DecryptDigestUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_ppart(Req_C_DecryptDigestUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pulpartlen(Req_C_DecryptDigestUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_DecryptDigestUpdate::kHSessionFieldNumber;
const int Req_C_DecryptDigestUpdate::kPEncryptedPartFieldNumber;
const int Req_C_DecryptDigestUpdate::kUlEncryptedPartLenFieldNumber;
const int Req_C_DecryptDigestUpdate::kPPartFieldNumber;
const int Req_C_DecryptDigestUpdate::kPulPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_DecryptDigestUpdate::Req_C_DecryptDigestUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
}
Req_C_DecryptDigestUpdate::Req_C_DecryptDigestUpdate(const Req_C_DecryptDigestUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencryptedpart()) {
    pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
  }
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
}

void Req_C_DecryptDigestUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_DecryptDigestUpdate_pkcs11_2eproto.base);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulpartlen_));
}

Req_C_DecryptDigestUpdate::~Req_C_DecryptDigestUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  SharedDtor();
}

void Req_C_DecryptDigestUpdate::SharedDtor() {
  pencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_DecryptDigestUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_DecryptDigestUpdate& Req_C_DecryptDigestUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_DecryptDigestUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_DecryptDigestUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pencryptedpart_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      ppart_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_DecryptDigestUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_DecryptDigestUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pEncryptedPart = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulEncryptedPartLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPart = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulPartLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_DecryptDigestUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pEncryptedPart = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulEncryptedPartLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPart = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulPartLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_DecryptDigestUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pEncryptedPart = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pencryptedpart(), output);
  }

  // required uint32 ulEncryptedPartLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulencryptedpartlen(), output);
  }

  // optional bytes pPart = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ppart(), output);
  }

  // optional uint32 pulPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pulpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
}

::google::protobuf::uint8* Req_C_DecryptDigestUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pEncryptedPart = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pencryptedpart(), target);
  }

  // required uint32 ulEncryptedPartLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulencryptedpartlen(), target);
  }

  // optional bytes pPart = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ppart(), target);
  }

  // optional uint32 pulPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pulpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  return target;
}

size_t Req_C_DecryptDigestUpdate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulencryptedpartlen()) {
    // required uint32 ulEncryptedPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulencryptedpartlen());
  }

  return total_size;
}
size_t Req_C_DecryptDigestUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulEncryptedPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulencryptedpartlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pEncryptedPart = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencryptedpart());
    }

    // optional bytes pPart = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppart());
    }

  }
  // optional uint32 pulPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulpartlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_DecryptDigestUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_DecryptDigestUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_DecryptDigestUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
    MergeFrom(*source);
  }
}

void Req_C_DecryptDigestUpdate::MergeFrom(const Req_C_DecryptDigestUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulencryptedpartlen_ = from.ulencryptedpartlen_;
    }
    if (cached_has_bits & 0x00000010u) {
      pulpartlen_ = from.pulpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_DecryptDigestUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_DecryptDigestUpdate::CopyFrom(const Req_C_DecryptDigestUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_DecryptDigestUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_DecryptDigestUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_DecryptDigestUpdate::Swap(Req_C_DecryptDigestUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_DecryptDigestUpdate::InternalSwap(Req_C_DecryptDigestUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pencryptedpart_.Swap(&other->pencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulencryptedpartlen_, other->ulencryptedpartlen_);
  swap(pulpartlen_, other->pulpartlen_);
}

::google::protobuf::Metadata Req_C_DecryptDigestUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_DecryptDigestUpdate::InitAsDefaultInstance() {
}
class Rsp_C_DecryptDigestUpdate::HasBitSetters {
 public:
  static void set_has_ppart(Rsp_C_DecryptDigestUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulpartlen(Rsp_C_DecryptDigestUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_DecryptDigestUpdate::kPPartFieldNumber;
const int Rsp_C_DecryptDigestUpdate::kPulPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_DecryptDigestUpdate::Rsp_C_DecryptDigestUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
}
Rsp_C_DecryptDigestUpdate::Rsp_C_DecryptDigestUpdate(const Rsp_C_DecryptDigestUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  pulpartlen_ = from.pulpartlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
}

void Rsp_C_DecryptDigestUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_DecryptDigestUpdate_pkcs11_2eproto.base);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulpartlen_ = 0u;
}

Rsp_C_DecryptDigestUpdate::~Rsp_C_DecryptDigestUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  SharedDtor();
}

void Rsp_C_DecryptDigestUpdate::SharedDtor() {
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_DecryptDigestUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_DecryptDigestUpdate& Rsp_C_DecryptDigestUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_DecryptDigestUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_DecryptDigestUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ppart_.ClearNonDefaultToEmptyNoArena();
  }
  pulpartlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_DecryptDigestUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_DecryptDigestUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pPart = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulPartLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_DecryptDigestUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pPart = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulPartLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_DecryptDigestUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pPart = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ppart(), output);
  }

  // optional uint32 pulPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
}

::google::protobuf::uint8* Rsp_C_DecryptDigestUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pPart = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ppart(), target);
  }

  // optional uint32 pulPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  return target;
}

size_t Rsp_C_DecryptDigestUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pPart = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppart());
    }

    // optional uint32 pulPartLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulpartlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_DecryptDigestUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_DecryptDigestUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_DecryptDigestUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
    MergeFrom(*source);
  }
}

void Rsp_C_DecryptDigestUpdate::MergeFrom(const Rsp_C_DecryptDigestUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulpartlen_ = from.pulpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_DecryptDigestUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_DecryptDigestUpdate::CopyFrom(const Rsp_C_DecryptDigestUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_DecryptDigestUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_DecryptDigestUpdate::IsInitialized() const {
  return true;
}

void Rsp_C_DecryptDigestUpdate::Swap(Rsp_C_DecryptDigestUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_DecryptDigestUpdate::InternalSwap(Rsp_C_DecryptDigestUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulpartlen_, other->pulpartlen_);
}

::google::protobuf::Metadata Rsp_C_DecryptDigestUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_SignEncryptUpdate::InitAsDefaultInstance() {
}
class Req_C_SignEncryptUpdate::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_SignEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_ppart(Req_C_SignEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulpartlen(Req_C_SignEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pencryptedpart(Req_C_SignEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pulencryptedpartlen(Req_C_SignEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_SignEncryptUpdate::kHSessionFieldNumber;
const int Req_C_SignEncryptUpdate::kPPartFieldNumber;
const int Req_C_SignEncryptUpdate::kUlPartLenFieldNumber;
const int Req_C_SignEncryptUpdate::kPEncryptedPartFieldNumber;
const int Req_C_SignEncryptUpdate::kPulEncryptedPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_SignEncryptUpdate::Req_C_SignEncryptUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_SignEncryptUpdate)
}
Req_C_SignEncryptUpdate::Req_C_SignEncryptUpdate(const Req_C_SignEncryptUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencryptedpart()) {
    pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulencryptedpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulencryptedpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_SignEncryptUpdate)
}

void Req_C_SignEncryptUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_SignEncryptUpdate_pkcs11_2eproto.base);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulencryptedpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulencryptedpartlen_));
}

Req_C_SignEncryptUpdate::~Req_C_SignEncryptUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  SharedDtor();
}

void Req_C_SignEncryptUpdate::SharedDtor() {
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_SignEncryptUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_SignEncryptUpdate& Req_C_SignEncryptUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_SignEncryptUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_SignEncryptUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ppart_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pencryptedpart_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulencryptedpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulencryptedpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_SignEncryptUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_SignEncryptUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPart = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulPartLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pEncryptedPart = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulEncryptedPartLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pulencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_SignEncryptUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPart = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulPartLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pEncryptedPart = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulEncryptedPartLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pulencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_SignEncryptUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pPart = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ppart(), output);
  }

  // required uint32 ulPartLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulpartlen(), output);
  }

  // optional bytes pEncryptedPart = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pencryptedpart(), output);
  }

  // optional uint32 pulEncryptedPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pulencryptedpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_SignEncryptUpdate)
}

::google::protobuf::uint8* Req_C_SignEncryptUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pPart = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ppart(), target);
  }

  // required uint32 ulPartLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulpartlen(), target);
  }

  // optional bytes pEncryptedPart = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pencryptedpart(), target);
  }

  // optional uint32 pulEncryptedPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pulencryptedpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  return target;
}

size_t Req_C_SignEncryptUpdate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulpartlen()) {
    // required uint32 ulPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());
  }

  return total_size;
}
size_t Req_C_SignEncryptUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pPart = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppart());
    }

    // optional bytes pEncryptedPart = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencryptedpart());
    }

  }
  // optional uint32 pulEncryptedPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulencryptedpartlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_SignEncryptUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_SignEncryptUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_SignEncryptUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_SignEncryptUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_SignEncryptUpdate)
    MergeFrom(*source);
  }
}

void Req_C_SignEncryptUpdate::MergeFrom(const Req_C_SignEncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulpartlen_ = from.ulpartlen_;
    }
    if (cached_has_bits & 0x00000010u) {
      pulencryptedpartlen_ = from.pulencryptedpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_SignEncryptUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_SignEncryptUpdate::CopyFrom(const Req_C_SignEncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_SignEncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_SignEncryptUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_SignEncryptUpdate::Swap(Req_C_SignEncryptUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_SignEncryptUpdate::InternalSwap(Req_C_SignEncryptUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pencryptedpart_.Swap(&other->pencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulpartlen_, other->ulpartlen_);
  swap(pulencryptedpartlen_, other->pulencryptedpartlen_);
}

::google::protobuf::Metadata Req_C_SignEncryptUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_SignEncryptUpdate::InitAsDefaultInstance() {
}
class Rsp_C_SignEncryptUpdate::HasBitSetters {
 public:
  static void set_has_pencryptedpart(Rsp_C_SignEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulencryptedpartlen(Rsp_C_SignEncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_SignEncryptUpdate::kPEncryptedPartFieldNumber;
const int Rsp_C_SignEncryptUpdate::kPulEncryptedPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_SignEncryptUpdate::Rsp_C_SignEncryptUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
}
Rsp_C_SignEncryptUpdate::Rsp_C_SignEncryptUpdate(const Rsp_C_SignEncryptUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencryptedpart()) {
    pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
  }
  pulencryptedpartlen_ = from.pulencryptedpartlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
}

void Rsp_C_SignEncryptUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_SignEncryptUpdate_pkcs11_2eproto.base);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulencryptedpartlen_ = 0u;
}

Rsp_C_SignEncryptUpdate::~Rsp_C_SignEncryptUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  SharedDtor();
}

void Rsp_C_SignEncryptUpdate::SharedDtor() {
  pencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_SignEncryptUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_SignEncryptUpdate& Rsp_C_SignEncryptUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_SignEncryptUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_SignEncryptUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pencryptedpart_.ClearNonDefaultToEmptyNoArena();
  }
  pulencryptedpartlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_SignEncryptUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_SignEncryptUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pEncryptedPart = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulEncryptedPartLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_SignEncryptUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pEncryptedPart = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulEncryptedPartLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_SignEncryptUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pEncryptedPart = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pencryptedpart(), output);
  }

  // optional uint32 pulEncryptedPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulencryptedpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
}

::google::protobuf::uint8* Rsp_C_SignEncryptUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pEncryptedPart = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pencryptedpart(), target);
  }

  // optional uint32 pulEncryptedPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulencryptedpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  return target;
}

size_t Rsp_C_SignEncryptUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pEncryptedPart = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencryptedpart());
    }

    // optional uint32 pulEncryptedPartLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulencryptedpartlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_SignEncryptUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_SignEncryptUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_SignEncryptUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
    MergeFrom(*source);
  }
}

void Rsp_C_SignEncryptUpdate::MergeFrom(const Rsp_C_SignEncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulencryptedpartlen_ = from.pulencryptedpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_SignEncryptUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_SignEncryptUpdate::CopyFrom(const Rsp_C_SignEncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_SignEncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_SignEncryptUpdate::IsInitialized() const {
  return true;
}

void Rsp_C_SignEncryptUpdate::Swap(Rsp_C_SignEncryptUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_SignEncryptUpdate::InternalSwap(Rsp_C_SignEncryptUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pencryptedpart_.Swap(&other->pencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulencryptedpartlen_, other->pulencryptedpartlen_);
}

::google::protobuf::Metadata Rsp_C_SignEncryptUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_DecryptVerifyUpdate::InitAsDefaultInstance() {
}
class Req_C_DecryptVerifyUpdate::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_DecryptVerifyUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pencryptedpart(Req_C_DecryptVerifyUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulencryptedpartlen(Req_C_DecryptVerifyUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_ppart(Req_C_DecryptVerifyUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pulpartlen(Req_C_DecryptVerifyUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_DecryptVerifyUpdate::kHSessionFieldNumber;
const int Req_C_DecryptVerifyUpdate::kPEncryptedPartFieldNumber;
const int Req_C_DecryptVerifyUpdate::kUlEncryptedPartLenFieldNumber;
const int Req_C_DecryptVerifyUpdate::kPPartFieldNumber;
const int Req_C_DecryptVerifyUpdate::kPulPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_DecryptVerifyUpdate::Req_C_DecryptVerifyUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
}
Req_C_DecryptVerifyUpdate::Req_C_DecryptVerifyUpdate(const Req_C_DecryptVerifyUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencryptedpart()) {
    pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
  }
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
}

void Req_C_DecryptVerifyUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_DecryptVerifyUpdate_pkcs11_2eproto.base);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulpartlen_));
}

Req_C_DecryptVerifyUpdate::~Req_C_DecryptVerifyUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  SharedDtor();
}

void Req_C_DecryptVerifyUpdate::SharedDtor() {
  pencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_DecryptVerifyUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_DecryptVerifyUpdate& Req_C_DecryptVerifyUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_DecryptVerifyUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_DecryptVerifyUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pencryptedpart_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      ppart_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_DecryptVerifyUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_DecryptVerifyUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pEncryptedPart = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulEncryptedPartLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPart = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulPartLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_DecryptVerifyUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pEncryptedPart = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulEncryptedPartLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPart = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulPartLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_DecryptVerifyUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pEncryptedPart = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pencryptedpart(), output);
  }

  // required uint32 ulEncryptedPartLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulencryptedpartlen(), output);
  }

  // optional bytes pPart = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ppart(), output);
  }

  // optional uint32 pulPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pulpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
}

::google::protobuf::uint8* Req_C_DecryptVerifyUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pEncryptedPart = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pencryptedpart(), target);
  }

  // required uint32 ulEncryptedPartLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulencryptedpartlen(), target);
  }

  // optional bytes pPart = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ppart(), target);
  }

  // optional uint32 pulPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pulpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  return target;
}

size_t Req_C_DecryptVerifyUpdate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulencryptedpartlen()) {
    // required uint32 ulEncryptedPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulencryptedpartlen());
  }

  return total_size;
}
size_t Req_C_DecryptVerifyUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulEncryptedPartLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulencryptedpartlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pEncryptedPart = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencryptedpart());
    }

    // optional bytes pPart = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppart());
    }

  }
  // optional uint32 pulPartLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulpartlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_DecryptVerifyUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_DecryptVerifyUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_DecryptVerifyUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
    MergeFrom(*source);
  }
}

void Req_C_DecryptVerifyUpdate::MergeFrom(const Req_C_DecryptVerifyUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulencryptedpartlen_ = from.ulencryptedpartlen_;
    }
    if (cached_has_bits & 0x00000010u) {
      pulpartlen_ = from.pulpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_DecryptVerifyUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_DecryptVerifyUpdate::CopyFrom(const Req_C_DecryptVerifyUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_DecryptVerifyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_DecryptVerifyUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void Req_C_DecryptVerifyUpdate::Swap(Req_C_DecryptVerifyUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_DecryptVerifyUpdate::InternalSwap(Req_C_DecryptVerifyUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pencryptedpart_.Swap(&other->pencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulencryptedpartlen_, other->ulencryptedpartlen_);
  swap(pulpartlen_, other->pulpartlen_);
}

::google::protobuf::Metadata Req_C_DecryptVerifyUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_DecryptVerifyUpdate::InitAsDefaultInstance() {
}
class Rsp_C_DecryptVerifyUpdate::HasBitSetters {
 public:
  static void set_has_ppart(Rsp_C_DecryptVerifyUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulpartlen(Rsp_C_DecryptVerifyUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_DecryptVerifyUpdate::kPPartFieldNumber;
const int Rsp_C_DecryptVerifyUpdate::kPulPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_DecryptVerifyUpdate::Rsp_C_DecryptVerifyUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
}
Rsp_C_DecryptVerifyUpdate::Rsp_C_DecryptVerifyUpdate(const Rsp_C_DecryptVerifyUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  pulpartlen_ = from.pulpartlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
}

void Rsp_C_DecryptVerifyUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_DecryptVerifyUpdate_pkcs11_2eproto.base);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulpartlen_ = 0u;
}

Rsp_C_DecryptVerifyUpdate::~Rsp_C_DecryptVerifyUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  SharedDtor();
}

void Rsp_C_DecryptVerifyUpdate::SharedDtor() {
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_DecryptVerifyUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_DecryptVerifyUpdate& Rsp_C_DecryptVerifyUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_DecryptVerifyUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_DecryptVerifyUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ppart_.ClearNonDefaultToEmptyNoArena();
  }
  pulpartlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_DecryptVerifyUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_DecryptVerifyUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pPart = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulPartLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_DecryptVerifyUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pPart = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulPartLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_DecryptVerifyUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pPart = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ppart(), output);
  }

  // optional uint32 pulPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
}

::google::protobuf::uint8* Rsp_C_DecryptVerifyUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pPart = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ppart(), target);
  }

  // optional uint32 pulPartLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  return target;
}

size_t Rsp_C_DecryptVerifyUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pPart = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppart());
    }

    // optional uint32 pulPartLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulpartlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_DecryptVerifyUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_DecryptVerifyUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_DecryptVerifyUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
    MergeFrom(*source);
  }
}

void Rsp_C_DecryptVerifyUpdate::MergeFrom(const Rsp_C_DecryptVerifyUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulpartlen_ = from.pulpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_DecryptVerifyUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_DecryptVerifyUpdate::CopyFrom(const Rsp_C_DecryptVerifyUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_DecryptVerifyUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_DecryptVerifyUpdate::IsInitialized() const {
  return true;
}

void Rsp_C_DecryptVerifyUpdate::Swap(Rsp_C_DecryptVerifyUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_DecryptVerifyUpdate::InternalSwap(Rsp_C_DecryptVerifyUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulpartlen_, other->pulpartlen_);
}

::google::protobuf::Metadata Rsp_C_DecryptVerifyUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GenerateKey::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_GenerateKey_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_GenerateKey::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_GenerateKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_GenerateKey* msg);
  static void set_has_pmechanism(Req_C_GenerateKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulcount(Req_C_GenerateKey* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_phkey(Req_C_GenerateKey* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_GenerateKey::HasBitSetters::pmechanism(const Req_C_GenerateKey* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GenerateKey::kHSessionFieldNumber;
const int Req_C_GenerateKey::kPMechanismFieldNumber;
const int Req_C_GenerateKey::kPTemplateFieldNumber;
const int Req_C_GenerateKey::kUlCountFieldNumber;
const int Req_C_GenerateKey::kPhKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GenerateKey::Req_C_GenerateKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GenerateKey)
}
Req_C_GenerateKey::Req_C_GenerateKey(const Req_C_GenerateKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ptemplate_(from.ptemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&phkey_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(phkey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GenerateKey)
}

void Req_C_GenerateKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_GenerateKey_pkcs11_2eproto.base);
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phkey_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(phkey_));
}

Req_C_GenerateKey::~Req_C_GenerateKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GenerateKey)
  SharedDtor();
}

void Req_C_GenerateKey::SharedDtor() {
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_GenerateKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GenerateKey& Req_C_GenerateKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GenerateKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GenerateKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GenerateKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptemplate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pmechanism_ != nullptr);
    pmechanism_->Clear();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&phkey_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(phkey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GenerateKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GenerateKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ptemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // required uint32 ulCount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_ulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 phKey = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_phkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GenerateKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GenerateKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ptemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_ulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 phKey = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_phkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GenerateKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GenerateKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GenerateKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GenerateKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->ptemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulCount = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ulcount(), output);
  }

  // optional uint32 phKey = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->phkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GenerateKey)
}

::google::protobuf::uint8* Req_C_GenerateKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GenerateKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->ptemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulCount = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ulcount(), target);
  }

  // optional uint32 phKey = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->phkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GenerateKey)
  return target;
}

size_t Req_C_GenerateKey::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_GenerateKey)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulcount()) {
    // required uint32 ulCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulcount());
  }

  return total_size;
}
size_t Req_C_GenerateKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GenerateKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->ptemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ptemplate(static_cast<int>(i)));
    }
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmechanism_);
  }

  // optional uint32 phKey = 5;
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GenerateKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GenerateKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GenerateKey* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GenerateKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GenerateKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GenerateKey)
    MergeFrom(*source);
  }
}

void Req_C_GenerateKey::MergeFrom(const Req_C_GenerateKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GenerateKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ptemplate_.MergeFrom(from.ptemplate_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulcount_ = from.ulcount_;
    }
    if (cached_has_bits & 0x00000008u) {
      phkey_ = from.phkey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_GenerateKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GenerateKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GenerateKey::CopyFrom(const Req_C_GenerateKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GenerateKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GenerateKey::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ptemplate())) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_GenerateKey::Swap(Req_C_GenerateKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GenerateKey::InternalSwap(Req_C_GenerateKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ptemplate_)->InternalSwap(CastToBase(&other->ptemplate_));
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(ulcount_, other->ulcount_);
  swap(phkey_, other->phkey_);
}

::google::protobuf::Metadata Req_C_GenerateKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GenerateKey::InitAsDefaultInstance() {
}
class Rsp_C_GenerateKey::HasBitSetters {
 public:
  static void set_has_phkey(Rsp_C_GenerateKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GenerateKey::kPhKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GenerateKey::Rsp_C_GenerateKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GenerateKey)
}
Rsp_C_GenerateKey::Rsp_C_GenerateKey(const Rsp_C_GenerateKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phkey_ = from.phkey_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GenerateKey)
}

void Rsp_C_GenerateKey::SharedCtor() {
  phkey_ = 0u;
}

Rsp_C_GenerateKey::~Rsp_C_GenerateKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GenerateKey)
  SharedDtor();
}

void Rsp_C_GenerateKey::SharedDtor() {
}

void Rsp_C_GenerateKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GenerateKey& Rsp_C_GenerateKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GenerateKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GenerateKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GenerateKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phkey_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GenerateKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GenerateKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 phKey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_phkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GenerateKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GenerateKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 phKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_phkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GenerateKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GenerateKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GenerateKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GenerateKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phKey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->phkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GenerateKey)
}

::google::protobuf::uint8* Rsp_C_GenerateKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GenerateKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phKey = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->phkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GenerateKey)
  return target;
}

size_t Rsp_C_GenerateKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GenerateKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 phKey = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GenerateKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GenerateKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GenerateKey* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GenerateKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GenerateKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GenerateKey)
    MergeFrom(*source);
  }
}

void Rsp_C_GenerateKey::MergeFrom(const Rsp_C_GenerateKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GenerateKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_phkey()) {
    set_phkey(from.phkey());
  }
}

void Rsp_C_GenerateKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GenerateKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GenerateKey::CopyFrom(const Rsp_C_GenerateKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GenerateKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GenerateKey::IsInitialized() const {
  return true;
}

void Rsp_C_GenerateKey::Swap(Rsp_C_GenerateKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GenerateKey::InternalSwap(Rsp_C_GenerateKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(phkey_, other->phkey_);
}

::google::protobuf::Metadata Rsp_C_GenerateKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GenerateKeyPair::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_GenerateKeyPair_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_GenerateKeyPair::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_GenerateKeyPair* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_GenerateKeyPair* msg);
  static void set_has_pmechanism(Req_C_GenerateKeyPair* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulpublickeyattributecount(Req_C_GenerateKeyPair* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_ulprivatekeyattributecount(Req_C_GenerateKeyPair* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_phpublickey(Req_C_GenerateKeyPair* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_phprivatekey(Req_C_GenerateKeyPair* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_GenerateKeyPair::HasBitSetters::pmechanism(const Req_C_GenerateKeyPair* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GenerateKeyPair::kHSessionFieldNumber;
const int Req_C_GenerateKeyPair::kPMechanismFieldNumber;
const int Req_C_GenerateKeyPair::kPPublicKeyTemplateFieldNumber;
const int Req_C_GenerateKeyPair::kUlPublicKeyAttributeCountFieldNumber;
const int Req_C_GenerateKeyPair::kPPrivateKeyTemplateFieldNumber;
const int Req_C_GenerateKeyPair::kUlPrivateKeyAttributeCountFieldNumber;
const int Req_C_GenerateKeyPair::kPhPublicKeyFieldNumber;
const int Req_C_GenerateKeyPair::kPhPrivateKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GenerateKeyPair::Req_C_GenerateKeyPair()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GenerateKeyPair)
}
Req_C_GenerateKeyPair::Req_C_GenerateKeyPair(const Req_C_GenerateKeyPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ppublickeytemplate_(from.ppublickeytemplate_),
      pprivatekeytemplate_(from.pprivatekeytemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&phprivatekey_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(phprivatekey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GenerateKeyPair)
}

void Req_C_GenerateKeyPair::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_GenerateKeyPair_pkcs11_2eproto.base);
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phprivatekey_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(phprivatekey_));
}

Req_C_GenerateKeyPair::~Req_C_GenerateKeyPair() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GenerateKeyPair)
  SharedDtor();
}

void Req_C_GenerateKeyPair::SharedDtor() {
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_GenerateKeyPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GenerateKeyPair& Req_C_GenerateKeyPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GenerateKeyPair_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GenerateKeyPair::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GenerateKeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ppublickeytemplate_.Clear();
  pprivatekeytemplate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pmechanism_ != nullptr);
    pmechanism_->Clear();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&phprivatekey_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(phprivatekey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GenerateKeyPair::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GenerateKeyPair*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pPublicKeyTemplate = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ppublickeytemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // required uint32 ulPublicKeyAttributeCount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_ulpublickeyattributecount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pPrivateKeyTemplate = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_pprivatekeytemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // required uint32 ulPrivateKeyAttributeCount = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_ulprivatekeyattributecount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 phPublicKey = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_phpublickey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 phPrivateKey = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_phprivatekey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GenerateKeyPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GenerateKeyPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pPublicKeyTemplate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ppublickeytemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulPublicKeyAttributeCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_ulpublickeyattributecount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulpublickeyattributecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pPrivateKeyTemplate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pprivatekeytemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulPrivateKeyAttributeCount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_ulprivatekeyattributecount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulprivatekeyattributecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 phPublicKey = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_phpublickey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phpublickey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 phPrivateKey = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_phprivatekey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phprivatekey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GenerateKeyPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GenerateKeyPair)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GenerateKeyPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GenerateKeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pPublicKeyTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ppublickeytemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->ppublickeytemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulPublicKeyAttributeCount = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ulpublickeyattributecount(), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pPrivateKeyTemplate = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pprivatekeytemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->pprivatekeytemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulPrivateKeyAttributeCount = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ulprivatekeyattributecount(), output);
  }

  // optional uint32 phPublicKey = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->phpublickey(), output);
  }

  // optional uint32 phPrivateKey = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->phprivatekey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GenerateKeyPair)
}

::google::protobuf::uint8* Req_C_GenerateKeyPair::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GenerateKeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pPublicKeyTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ppublickeytemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->ppublickeytemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulPublicKeyAttributeCount = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ulpublickeyattributecount(), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pPrivateKeyTemplate = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pprivatekeytemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->pprivatekeytemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulPrivateKeyAttributeCount = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ulprivatekeyattributecount(), target);
  }

  // optional uint32 phPublicKey = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->phpublickey(), target);
  }

  // optional uint32 phPrivateKey = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->phprivatekey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GenerateKeyPair)
  return target;
}

size_t Req_C_GenerateKeyPair::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_GenerateKeyPair)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulpublickeyattributecount()) {
    // required uint32 ulPublicKeyAttributeCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpublickeyattributecount());
  }

  if (has_ulprivatekeyattributecount()) {
    // required uint32 ulPrivateKeyAttributeCount = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulprivatekeyattributecount());
  }

  return total_size;
}
size_t Req_C_GenerateKeyPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GenerateKeyPair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulPublicKeyAttributeCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpublickeyattributecount());

    // required uint32 ulPrivateKeyAttributeCount = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulprivatekeyattributecount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pPublicKeyTemplate = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->ppublickeytemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ppublickeytemplate(static_cast<int>(i)));
    }
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pPrivateKeyTemplate = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->pprivatekeytemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pprivatekeytemplate(static_cast<int>(i)));
    }
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmechanism_);
  }

  if (cached_has_bits & 0x00000030u) {
    // optional uint32 phPublicKey = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->phpublickey());
    }

    // optional uint32 phPrivateKey = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->phprivatekey());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GenerateKeyPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GenerateKeyPair)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GenerateKeyPair* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GenerateKeyPair>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GenerateKeyPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GenerateKeyPair)
    MergeFrom(*source);
  }
}

void Req_C_GenerateKeyPair::MergeFrom(const Req_C_GenerateKeyPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GenerateKeyPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ppublickeytemplate_.MergeFrom(from.ppublickeytemplate_);
  pprivatekeytemplate_.MergeFrom(from.pprivatekeytemplate_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulpublickeyattributecount_ = from.ulpublickeyattributecount_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulprivatekeyattributecount_ = from.ulprivatekeyattributecount_;
    }
    if (cached_has_bits & 0x00000010u) {
      phpublickey_ = from.phpublickey_;
    }
    if (cached_has_bits & 0x00000020u) {
      phprivatekey_ = from.phprivatekey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_GenerateKeyPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GenerateKeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GenerateKeyPair::CopyFrom(const Req_C_GenerateKeyPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GenerateKeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GenerateKeyPair::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ppublickeytemplate())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->pprivatekeytemplate())) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_GenerateKeyPair::Swap(Req_C_GenerateKeyPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GenerateKeyPair::InternalSwap(Req_C_GenerateKeyPair* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ppublickeytemplate_)->InternalSwap(CastToBase(&other->ppublickeytemplate_));
  CastToBase(&pprivatekeytemplate_)->InternalSwap(CastToBase(&other->pprivatekeytemplate_));
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(ulpublickeyattributecount_, other->ulpublickeyattributecount_);
  swap(ulprivatekeyattributecount_, other->ulprivatekeyattributecount_);
  swap(phpublickey_, other->phpublickey_);
  swap(phprivatekey_, other->phprivatekey_);
}

::google::protobuf::Metadata Req_C_GenerateKeyPair::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GenerateKeyPair::InitAsDefaultInstance() {
}
class Rsp_C_GenerateKeyPair::HasBitSetters {
 public:
  static void set_has_phpublickey(Rsp_C_GenerateKeyPair* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_phprivatekey(Rsp_C_GenerateKeyPair* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GenerateKeyPair::kPhPublicKeyFieldNumber;
const int Rsp_C_GenerateKeyPair::kPhPrivateKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GenerateKeyPair::Rsp_C_GenerateKeyPair()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
}
Rsp_C_GenerateKeyPair::Rsp_C_GenerateKeyPair(const Rsp_C_GenerateKeyPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&phpublickey_, &from.phpublickey_,
    static_cast<size_t>(reinterpret_cast<char*>(&phprivatekey_) -
    reinterpret_cast<char*>(&phpublickey_)) + sizeof(phprivatekey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
}

void Rsp_C_GenerateKeyPair::SharedCtor() {
  ::memset(&phpublickey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phprivatekey_) -
      reinterpret_cast<char*>(&phpublickey_)) + sizeof(phprivatekey_));
}

Rsp_C_GenerateKeyPair::~Rsp_C_GenerateKeyPair() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  SharedDtor();
}

void Rsp_C_GenerateKeyPair::SharedDtor() {
}

void Rsp_C_GenerateKeyPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GenerateKeyPair& Rsp_C_GenerateKeyPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GenerateKeyPair_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GenerateKeyPair::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&phpublickey_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&phprivatekey_) -
        reinterpret_cast<char*>(&phpublickey_)) + sizeof(phprivatekey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GenerateKeyPair::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GenerateKeyPair*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 phPublicKey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_phpublickey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 phPrivateKey = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_phprivatekey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GenerateKeyPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 phPublicKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_phpublickey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phpublickey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 phPrivateKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_phprivatekey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phprivatekey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GenerateKeyPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phPublicKey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->phpublickey(), output);
  }

  // optional uint32 phPrivateKey = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->phprivatekey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
}

::google::protobuf::uint8* Rsp_C_GenerateKeyPair::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phPublicKey = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->phpublickey(), target);
  }

  // optional uint32 phPrivateKey = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->phprivatekey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  return target;
}

size_t Rsp_C_GenerateKeyPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 phPublicKey = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->phpublickey());
    }

    // optional uint32 phPrivateKey = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->phprivatekey());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GenerateKeyPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GenerateKeyPair* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GenerateKeyPair>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
    MergeFrom(*source);
  }
}

void Rsp_C_GenerateKeyPair::MergeFrom(const Rsp_C_GenerateKeyPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      phpublickey_ = from.phpublickey_;
    }
    if (cached_has_bits & 0x00000002u) {
      phprivatekey_ = from.phprivatekey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_GenerateKeyPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GenerateKeyPair::CopyFrom(const Rsp_C_GenerateKeyPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GenerateKeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GenerateKeyPair::IsInitialized() const {
  return true;
}

void Rsp_C_GenerateKeyPair::Swap(Rsp_C_GenerateKeyPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GenerateKeyPair::InternalSwap(Rsp_C_GenerateKeyPair* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(phpublickey_, other->phpublickey_);
  swap(phprivatekey_, other->phprivatekey_);
}

::google::protobuf::Metadata Rsp_C_GenerateKeyPair::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_WrapKey::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_WrapKey_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_WrapKey::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_WrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_WrapKey* msg);
  static void set_has_pmechanism(Req_C_WrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_hwrappingkey(Req_C_WrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_hkey(Req_C_WrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_pwrappedkey(Req_C_WrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulwrappedkeylen(Req_C_WrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_WrapKey::HasBitSetters::pmechanism(const Req_C_WrapKey* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_WrapKey::kHSessionFieldNumber;
const int Req_C_WrapKey::kPMechanismFieldNumber;
const int Req_C_WrapKey::kHWrappingKeyFieldNumber;
const int Req_C_WrapKey::kHKeyFieldNumber;
const int Req_C_WrapKey::kPWrappedKeyFieldNumber;
const int Req_C_WrapKey::kPulWrappedKeyLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_WrapKey::Req_C_WrapKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_WrapKey)
}
Req_C_WrapKey::Req_C_WrapKey(const Req_C_WrapKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pwrappedkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pwrappedkey()) {
    pwrappedkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwrappedkey_);
  }
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulwrappedkeylen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulwrappedkeylen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_WrapKey)
}

void Req_C_WrapKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_WrapKey_pkcs11_2eproto.base);
  pwrappedkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulwrappedkeylen_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(pulwrappedkeylen_));
}

Req_C_WrapKey::~Req_C_WrapKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_WrapKey)
  SharedDtor();
}

void Req_C_WrapKey::SharedDtor() {
  pwrappedkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_WrapKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_WrapKey& Req_C_WrapKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_WrapKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_WrapKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_WrapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pwrappedkey_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(pmechanism_ != nullptr);
      pmechanism_->Clear();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulwrappedkeylen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulwrappedkeylen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_WrapKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_WrapKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint32 hWrappingKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_hwrappingkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 hKey = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_hkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pWrappedKey = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pwrappedkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulWrappedKeyLen = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_pulwrappedkeylen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_WrapKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_WrapKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hWrappingKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_hwrappingkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hwrappingkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hKey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_hkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pWrappedKey = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pwrappedkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulWrappedKeyLen = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_pulwrappedkeylen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulwrappedkeylen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_WrapKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_WrapKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_WrapKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_WrapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // required uint32 hWrappingKey = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hwrappingkey(), output);
  }

  // required uint32 hKey = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->hkey(), output);
  }

  // optional bytes pWrappedKey = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->pwrappedkey(), output);
  }

  // optional uint32 pulWrappedKeyLen = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pulwrappedkeylen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_WrapKey)
}

::google::protobuf::uint8* Req_C_WrapKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_WrapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // required uint32 hWrappingKey = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hwrappingkey(), target);
  }

  // required uint32 hKey = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->hkey(), target);
  }

  // optional bytes pWrappedKey = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->pwrappedkey(), target);
  }

  // optional uint32 pulWrappedKeyLen = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pulwrappedkeylen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_WrapKey)
  return target;
}

size_t Req_C_WrapKey::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_WrapKey)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hwrappingkey()) {
    // required uint32 hWrappingKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hwrappingkey());
  }

  if (has_hkey()) {
    // required uint32 hKey = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());
  }

  return total_size;
}
size_t Req_C_WrapKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_WrapKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001c) ^ 0x0000001c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hWrappingKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hwrappingkey());

    // required uint32 hKey = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pWrappedKey = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pwrappedkey());
    }

    // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pmechanism_);
    }

  }
  // optional uint32 pulWrappedKeyLen = 6;
  if (cached_has_bits & 0x00000020u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulwrappedkeylen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_WrapKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_WrapKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_WrapKey* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_WrapKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_WrapKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_WrapKey)
    MergeFrom(*source);
  }
}

void Req_C_WrapKey::MergeFrom(const Req_C_WrapKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_WrapKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pwrappedkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwrappedkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      hwrappingkey_ = from.hwrappingkey_;
    }
    if (cached_has_bits & 0x00000010u) {
      hkey_ = from.hkey_;
    }
    if (cached_has_bits & 0x00000020u) {
      pulwrappedkeylen_ = from.pulwrappedkeylen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_WrapKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_WrapKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_WrapKey::CopyFrom(const Req_C_WrapKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_WrapKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_WrapKey::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_WrapKey::Swap(Req_C_WrapKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_WrapKey::InternalSwap(Req_C_WrapKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pwrappedkey_.Swap(&other->pwrappedkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(hwrappingkey_, other->hwrappingkey_);
  swap(hkey_, other->hkey_);
  swap(pulwrappedkeylen_, other->pulwrappedkeylen_);
}

::google::protobuf::Metadata Req_C_WrapKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_WrapKey::InitAsDefaultInstance() {
}
class Rsp_C_WrapKey::HasBitSetters {
 public:
  static void set_has_pwrappedkey(Rsp_C_WrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulwrappedkeylen(Rsp_C_WrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_WrapKey::kPWrappedKeyFieldNumber;
const int Rsp_C_WrapKey::kPulWrappedKeyLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_WrapKey::Rsp_C_WrapKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_WrapKey)
}
Rsp_C_WrapKey::Rsp_C_WrapKey(const Rsp_C_WrapKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pwrappedkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pwrappedkey()) {
    pwrappedkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwrappedkey_);
  }
  pulwrappedkeylen_ = from.pulwrappedkeylen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_WrapKey)
}

void Rsp_C_WrapKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_WrapKey_pkcs11_2eproto.base);
  pwrappedkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulwrappedkeylen_ = 0u;
}

Rsp_C_WrapKey::~Rsp_C_WrapKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_WrapKey)
  SharedDtor();
}

void Rsp_C_WrapKey::SharedDtor() {
  pwrappedkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_WrapKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_WrapKey& Rsp_C_WrapKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_WrapKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_WrapKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_WrapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pwrappedkey_.ClearNonDefaultToEmptyNoArena();
  }
  pulwrappedkeylen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_WrapKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_WrapKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pWrappedKey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pwrappedkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulWrappedKeyLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulwrappedkeylen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_WrapKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_WrapKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pWrappedKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pwrappedkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulWrappedKeyLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulwrappedkeylen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulwrappedkeylen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_WrapKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_WrapKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_WrapKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_WrapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pWrappedKey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pwrappedkey(), output);
  }

  // optional uint32 pulWrappedKeyLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulwrappedkeylen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_WrapKey)
}

::google::protobuf::uint8* Rsp_C_WrapKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_WrapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pWrappedKey = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pwrappedkey(), target);
  }

  // optional uint32 pulWrappedKeyLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulwrappedkeylen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_WrapKey)
  return target;
}

size_t Rsp_C_WrapKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_WrapKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pWrappedKey = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pwrappedkey());
    }

    // optional uint32 pulWrappedKeyLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulwrappedkeylen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_WrapKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_WrapKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_WrapKey* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_WrapKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_WrapKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_WrapKey)
    MergeFrom(*source);
  }
}

void Rsp_C_WrapKey::MergeFrom(const Rsp_C_WrapKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_WrapKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pwrappedkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwrappedkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulwrappedkeylen_ = from.pulwrappedkeylen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_WrapKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_WrapKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_WrapKey::CopyFrom(const Rsp_C_WrapKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_WrapKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_WrapKey::IsInitialized() const {
  return true;
}

void Rsp_C_WrapKey::Swap(Rsp_C_WrapKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_WrapKey::InternalSwap(Rsp_C_WrapKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pwrappedkey_.Swap(&other->pwrappedkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulwrappedkeylen_, other->pulwrappedkeylen_);
}

::google::protobuf::Metadata Rsp_C_WrapKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_UnwrapKey::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_UnwrapKey_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_UnwrapKey::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_UnwrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_UnwrapKey* msg);
  static void set_has_pmechanism(Req_C_UnwrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_hunwrappingkey(Req_C_UnwrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pwrappedkey(Req_C_UnwrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulwrappedkeylen(Req_C_UnwrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_ulattributecount(Req_C_UnwrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_phkey(Req_C_UnwrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_UnwrapKey::HasBitSetters::pmechanism(const Req_C_UnwrapKey* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_UnwrapKey::kHSessionFieldNumber;
const int Req_C_UnwrapKey::kPMechanismFieldNumber;
const int Req_C_UnwrapKey::kHUnwrappingKeyFieldNumber;
const int Req_C_UnwrapKey::kPWrappedKeyFieldNumber;
const int Req_C_UnwrapKey::kUlWrappedKeyLenFieldNumber;
const int Req_C_UnwrapKey::kPTemplateFieldNumber;
const int Req_C_UnwrapKey::kUlAttributeCountFieldNumber;
const int Req_C_UnwrapKey::kPhKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_UnwrapKey::Req_C_UnwrapKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_UnwrapKey)
}
Req_C_UnwrapKey::Req_C_UnwrapKey(const Req_C_UnwrapKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ptemplate_(from.ptemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pwrappedkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pwrappedkey()) {
    pwrappedkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwrappedkey_);
  }
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&phkey_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(phkey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_UnwrapKey)
}

void Req_C_UnwrapKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_UnwrapKey_pkcs11_2eproto.base);
  pwrappedkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phkey_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(phkey_));
}

Req_C_UnwrapKey::~Req_C_UnwrapKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_UnwrapKey)
  SharedDtor();
}

void Req_C_UnwrapKey::SharedDtor() {
  pwrappedkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_UnwrapKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_UnwrapKey& Req_C_UnwrapKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_UnwrapKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_UnwrapKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_UnwrapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptemplate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pwrappedkey_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(pmechanism_ != nullptr);
      pmechanism_->Clear();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&phkey_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(phkey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_UnwrapKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_UnwrapKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint32 hUnwrappingKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_hunwrappingkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pWrappedKey = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pwrappedkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulWrappedKeyLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ulwrappedkeylen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ptemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // required uint32 ulAttributeCount = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_ulattributecount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 phKey = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_phkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_UnwrapKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_UnwrapKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hUnwrappingKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_hunwrappingkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hunwrappingkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pWrappedKey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pwrappedkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulWrappedKeyLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ulwrappedkeylen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulwrappedkeylen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ptemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulAttributeCount = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_ulattributecount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulattributecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 phKey = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          HasBitSetters::set_has_phkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_UnwrapKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_UnwrapKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_UnwrapKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_UnwrapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // required uint32 hUnwrappingKey = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hunwrappingkey(), output);
  }

  // optional bytes pWrappedKey = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pwrappedkey(), output);
  }

  // required uint32 ulWrappedKeyLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ulwrappedkeylen(), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->ptemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulAttributeCount = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->ulattributecount(), output);
  }

  // optional uint32 phKey = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->phkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_UnwrapKey)
}

::google::protobuf::uint8* Req_C_UnwrapKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_UnwrapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // required uint32 hUnwrappingKey = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hunwrappingkey(), target);
  }

  // optional bytes pWrappedKey = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pwrappedkey(), target);
  }

  // required uint32 ulWrappedKeyLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ulwrappedkeylen(), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->ptemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulAttributeCount = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->ulattributecount(), target);
  }

  // optional uint32 phKey = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->phkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_UnwrapKey)
  return target;
}

size_t Req_C_UnwrapKey::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_UnwrapKey)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hunwrappingkey()) {
    // required uint32 hUnwrappingKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hunwrappingkey());
  }

  if (has_ulwrappedkeylen()) {
    // required uint32 ulWrappedKeyLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulwrappedkeylen());
  }

  if (has_ulattributecount()) {
    // required uint32 ulAttributeCount = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulattributecount());
  }

  return total_size;
}
size_t Req_C_UnwrapKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_UnwrapKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003c) ^ 0x0000003c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hUnwrappingKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hunwrappingkey());

    // required uint32 ulWrappedKeyLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulwrappedkeylen());

    // required uint32 ulAttributeCount = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulattributecount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->ptemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ptemplate(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pWrappedKey = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pwrappedkey());
    }

    // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pmechanism_);
    }

  }
  // optional uint32 phKey = 8;
  if (cached_has_bits & 0x00000040u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_UnwrapKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_UnwrapKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_UnwrapKey* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_UnwrapKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_UnwrapKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_UnwrapKey)
    MergeFrom(*source);
  }
}

void Req_C_UnwrapKey::MergeFrom(const Req_C_UnwrapKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_UnwrapKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ptemplate_.MergeFrom(from.ptemplate_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pwrappedkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pwrappedkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      hunwrappingkey_ = from.hunwrappingkey_;
    }
    if (cached_has_bits & 0x00000010u) {
      ulwrappedkeylen_ = from.ulwrappedkeylen_;
    }
    if (cached_has_bits & 0x00000020u) {
      ulattributecount_ = from.ulattributecount_;
    }
    if (cached_has_bits & 0x00000040u) {
      phkey_ = from.phkey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_UnwrapKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_UnwrapKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_UnwrapKey::CopyFrom(const Req_C_UnwrapKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_UnwrapKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_UnwrapKey::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003c) != 0x0000003c) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ptemplate())) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_UnwrapKey::Swap(Req_C_UnwrapKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_UnwrapKey::InternalSwap(Req_C_UnwrapKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ptemplate_)->InternalSwap(CastToBase(&other->ptemplate_));
  pwrappedkey_.Swap(&other->pwrappedkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(hunwrappingkey_, other->hunwrappingkey_);
  swap(ulwrappedkeylen_, other->ulwrappedkeylen_);
  swap(ulattributecount_, other->ulattributecount_);
  swap(phkey_, other->phkey_);
}

::google::protobuf::Metadata Req_C_UnwrapKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_UnwrapKey::InitAsDefaultInstance() {
}
class Rsp_C_UnwrapKey::HasBitSetters {
 public:
  static void set_has_phkey(Rsp_C_UnwrapKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_UnwrapKey::kPhKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_UnwrapKey::Rsp_C_UnwrapKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_UnwrapKey)
}
Rsp_C_UnwrapKey::Rsp_C_UnwrapKey(const Rsp_C_UnwrapKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phkey_ = from.phkey_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_UnwrapKey)
}

void Rsp_C_UnwrapKey::SharedCtor() {
  phkey_ = 0u;
}

Rsp_C_UnwrapKey::~Rsp_C_UnwrapKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_UnwrapKey)
  SharedDtor();
}

void Rsp_C_UnwrapKey::SharedDtor() {
}

void Rsp_C_UnwrapKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_UnwrapKey& Rsp_C_UnwrapKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_UnwrapKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_UnwrapKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_UnwrapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phkey_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_UnwrapKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_UnwrapKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 phKey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_phkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_UnwrapKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_UnwrapKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 phKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_phkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_UnwrapKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_UnwrapKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_UnwrapKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_UnwrapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phKey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->phkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_UnwrapKey)
}

::google::protobuf::uint8* Rsp_C_UnwrapKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_UnwrapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phKey = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->phkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_UnwrapKey)
  return target;
}

size_t Rsp_C_UnwrapKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_UnwrapKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 phKey = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_UnwrapKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_UnwrapKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_UnwrapKey* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_UnwrapKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_UnwrapKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_UnwrapKey)
    MergeFrom(*source);
  }
}

void Rsp_C_UnwrapKey::MergeFrom(const Rsp_C_UnwrapKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_UnwrapKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_phkey()) {
    set_phkey(from.phkey());
  }
}

void Rsp_C_UnwrapKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_UnwrapKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_UnwrapKey::CopyFrom(const Rsp_C_UnwrapKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_UnwrapKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_UnwrapKey::IsInitialized() const {
  return true;
}

void Rsp_C_UnwrapKey::Swap(Rsp_C_UnwrapKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_UnwrapKey::InternalSwap(Rsp_C_UnwrapKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(phkey_, other->phkey_);
}

::google::protobuf::Metadata Rsp_C_UnwrapKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_DeriveKey::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_DeriveKey_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_DeriveKey::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_DeriveKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_DeriveKey* msg);
  static void set_has_pmechanism(Req_C_DeriveKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_hbasekey(Req_C_DeriveKey* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_ulattributecount(Req_C_DeriveKey* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_phkey(Req_C_DeriveKey* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_DeriveKey::HasBitSetters::pmechanism(const Req_C_DeriveKey* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_DeriveKey::kHSessionFieldNumber;
const int Req_C_DeriveKey::kPMechanismFieldNumber;
const int Req_C_DeriveKey::kHBaseKeyFieldNumber;
const int Req_C_DeriveKey::kPTemplateFieldNumber;
const int Req_C_DeriveKey::kUlAttributeCountFieldNumber;
const int Req_C_DeriveKey::kPhKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_DeriveKey::Req_C_DeriveKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_DeriveKey)
}
Req_C_DeriveKey::Req_C_DeriveKey(const Req_C_DeriveKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ptemplate_(from.ptemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&phkey_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(phkey_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_DeriveKey)
}

void Req_C_DeriveKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_DeriveKey_pkcs11_2eproto.base);
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phkey_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(phkey_));
}

Req_C_DeriveKey::~Req_C_DeriveKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_DeriveKey)
  SharedDtor();
}

void Req_C_DeriveKey::SharedDtor() {
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_DeriveKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_DeriveKey& Req_C_DeriveKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_DeriveKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_DeriveKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_DeriveKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptemplate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pmechanism_ != nullptr);
    pmechanism_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&phkey_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(phkey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_DeriveKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_DeriveKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint32 hBaseKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_hbasekey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ptemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // required uint32 ulAttributeCount = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ulattributecount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 phKey = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_phkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_DeriveKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_DeriveKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hBaseKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_hbasekey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hbasekey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ptemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulAttributeCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ulattributecount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulattributecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 phKey = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_phkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_DeriveKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_DeriveKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_DeriveKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_DeriveKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // required uint32 hBaseKey = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hbasekey(), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->ptemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulAttributeCount = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ulattributecount(), output);
  }

  // optional uint32 phKey = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->phkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_DeriveKey)
}

::google::protobuf::uint8* Req_C_DeriveKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_DeriveKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // required uint32 hBaseKey = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hbasekey(), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->ptemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulAttributeCount = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ulattributecount(), target);
  }

  // optional uint32 phKey = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->phkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_DeriveKey)
  return target;
}

size_t Req_C_DeriveKey::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_DeriveKey)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hbasekey()) {
    // required uint32 hBaseKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hbasekey());
  }

  if (has_ulattributecount()) {
    // required uint32 ulAttributeCount = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulattributecount());
  }

  return total_size;
}
size_t Req_C_DeriveKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_DeriveKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hBaseKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hbasekey());

    // required uint32 ulAttributeCount = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulattributecount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->ptemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ptemplate(static_cast<int>(i)));
    }
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmechanism_);
  }

  // optional uint32 phKey = 6;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_DeriveKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_DeriveKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_DeriveKey* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_DeriveKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_DeriveKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_DeriveKey)
    MergeFrom(*source);
  }
}

void Req_C_DeriveKey::MergeFrom(const Req_C_DeriveKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_DeriveKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ptemplate_.MergeFrom(from.ptemplate_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      hbasekey_ = from.hbasekey_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulattributecount_ = from.ulattributecount_;
    }
    if (cached_has_bits & 0x00000010u) {
      phkey_ = from.phkey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_DeriveKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_DeriveKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_DeriveKey::CopyFrom(const Req_C_DeriveKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_DeriveKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_DeriveKey::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ptemplate())) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_DeriveKey::Swap(Req_C_DeriveKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_DeriveKey::InternalSwap(Req_C_DeriveKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ptemplate_)->InternalSwap(CastToBase(&other->ptemplate_));
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(hbasekey_, other->hbasekey_);
  swap(ulattributecount_, other->ulattributecount_);
  swap(phkey_, other->phkey_);
}

::google::protobuf::Metadata Req_C_DeriveKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_DeriveKey::InitAsDefaultInstance() {
}
class Rsp_C_DeriveKey::HasBitSetters {
 public:
  static void set_has_phkey(Rsp_C_DeriveKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_DeriveKey::kPhKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_DeriveKey::Rsp_C_DeriveKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_DeriveKey)
}
Rsp_C_DeriveKey::Rsp_C_DeriveKey(const Rsp_C_DeriveKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phkey_ = from.phkey_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_DeriveKey)
}

void Rsp_C_DeriveKey::SharedCtor() {
  phkey_ = 0u;
}

Rsp_C_DeriveKey::~Rsp_C_DeriveKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_DeriveKey)
  SharedDtor();
}

void Rsp_C_DeriveKey::SharedDtor() {
}

void Rsp_C_DeriveKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_DeriveKey& Rsp_C_DeriveKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_DeriveKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_DeriveKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_DeriveKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phkey_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_DeriveKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_DeriveKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 phKey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_phkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_DeriveKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_DeriveKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 phKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_phkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_DeriveKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_DeriveKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_DeriveKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_DeriveKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phKey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->phkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_DeriveKey)
}

::google::protobuf::uint8* Rsp_C_DeriveKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_DeriveKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phKey = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->phkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_DeriveKey)
  return target;
}

size_t Rsp_C_DeriveKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_DeriveKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 phKey = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phkey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_DeriveKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_DeriveKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_DeriveKey* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_DeriveKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_DeriveKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_DeriveKey)
    MergeFrom(*source);
  }
}

void Rsp_C_DeriveKey::MergeFrom(const Rsp_C_DeriveKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_DeriveKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_phkey()) {
    set_phkey(from.phkey());
  }
}

void Rsp_C_DeriveKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_DeriveKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_DeriveKey::CopyFrom(const Rsp_C_DeriveKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_DeriveKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_DeriveKey::IsInitialized() const {
  return true;
}

void Rsp_C_DeriveKey::Swap(Rsp_C_DeriveKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_DeriveKey::InternalSwap(Rsp_C_DeriveKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(phkey_, other->phkey_);
}

::google::protobuf::Metadata Rsp_C_DeriveKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_SeedRandom::InitAsDefaultInstance() {
}
class Req_C_SeedRandom::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_SeedRandom* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pseed(Req_C_SeedRandom* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulseedlen(Req_C_SeedRandom* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_SeedRandom::kHSessionFieldNumber;
const int Req_C_SeedRandom::kPSeedFieldNumber;
const int Req_C_SeedRandom::kUlSeedLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_SeedRandom::Req_C_SeedRandom()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_SeedRandom)
}
Req_C_SeedRandom::Req_C_SeedRandom(const Req_C_SeedRandom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pseed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pseed()) {
    pseed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseed_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulseedlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulseedlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_SeedRandom)
}

void Req_C_SeedRandom::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_SeedRandom_pkcs11_2eproto.base);
  pseed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulseedlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulseedlen_));
}

Req_C_SeedRandom::~Req_C_SeedRandom() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_SeedRandom)
  SharedDtor();
}

void Req_C_SeedRandom::SharedDtor() {
  pseed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_SeedRandom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_SeedRandom& Req_C_SeedRandom::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_SeedRandom_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_SeedRandom::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_SeedRandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pseed_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulseedlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulseedlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_SeedRandom::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_SeedRandom*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pSeed = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pseed();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulSeedLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulseedlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_SeedRandom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_SeedRandom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pSeed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pseed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulSeedLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulseedlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulseedlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_SeedRandom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_SeedRandom)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_SeedRandom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_SeedRandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pSeed = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pseed(), output);
  }

  // required uint32 ulSeedLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulseedlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_SeedRandom)
}

::google::protobuf::uint8* Req_C_SeedRandom::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_SeedRandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pSeed = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pseed(), target);
  }

  // required uint32 ulSeedLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulseedlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_SeedRandom)
  return target;
}

size_t Req_C_SeedRandom::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_SeedRandom)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulseedlen()) {
    // required uint32 ulSeedLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulseedlen());
  }

  return total_size;
}
size_t Req_C_SeedRandom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_SeedRandom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulSeedLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulseedlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pSeed = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pseed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_SeedRandom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_SeedRandom)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_SeedRandom* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_SeedRandom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_SeedRandom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_SeedRandom)
    MergeFrom(*source);
  }
}

void Req_C_SeedRandom::MergeFrom(const Req_C_SeedRandom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_SeedRandom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pseed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseed_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulseedlen_ = from.ulseedlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_SeedRandom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_SeedRandom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_SeedRandom::CopyFrom(const Req_C_SeedRandom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_SeedRandom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_SeedRandom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void Req_C_SeedRandom::Swap(Req_C_SeedRandom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_SeedRandom::InternalSwap(Req_C_SeedRandom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pseed_.Swap(&other->pseed_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulseedlen_, other->ulseedlen_);
}

::google::protobuf::Metadata Req_C_SeedRandom::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_SeedRandom::InitAsDefaultInstance() {
}
class Rsp_C_SeedRandom::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_SeedRandom::Rsp_C_SeedRandom()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_SeedRandom)
}
Rsp_C_SeedRandom::Rsp_C_SeedRandom(const Rsp_C_SeedRandom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_SeedRandom)
}

void Rsp_C_SeedRandom::SharedCtor() {
}

Rsp_C_SeedRandom::~Rsp_C_SeedRandom() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_SeedRandom)
  SharedDtor();
}

void Rsp_C_SeedRandom::SharedDtor() {
}

void Rsp_C_SeedRandom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_SeedRandom& Rsp_C_SeedRandom::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_SeedRandom_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_SeedRandom::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_SeedRandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_SeedRandom::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_SeedRandom*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_SeedRandom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_SeedRandom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_SeedRandom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_SeedRandom)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_SeedRandom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_SeedRandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_SeedRandom)
}

::google::protobuf::uint8* Rsp_C_SeedRandom::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_SeedRandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_SeedRandom)
  return target;
}

size_t Rsp_C_SeedRandom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_SeedRandom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_SeedRandom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_SeedRandom)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_SeedRandom* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_SeedRandom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_SeedRandom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_SeedRandom)
    MergeFrom(*source);
  }
}

void Rsp_C_SeedRandom::MergeFrom(const Rsp_C_SeedRandom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_SeedRandom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_SeedRandom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_SeedRandom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_SeedRandom::CopyFrom(const Rsp_C_SeedRandom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_SeedRandom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_SeedRandom::IsInitialized() const {
  return true;
}

void Rsp_C_SeedRandom::Swap(Rsp_C_SeedRandom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_SeedRandom::InternalSwap(Rsp_C_SeedRandom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_SeedRandom::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GenerateRandom::InitAsDefaultInstance() {
}
class Req_C_GenerateRandom::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_GenerateRandom* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_randomdata(Req_C_GenerateRandom* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulrandomlen(Req_C_GenerateRandom* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GenerateRandom::kHSessionFieldNumber;
const int Req_C_GenerateRandom::kRandomDataFieldNumber;
const int Req_C_GenerateRandom::kUlRandomLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GenerateRandom::Req_C_GenerateRandom()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GenerateRandom)
}
Req_C_GenerateRandom::Req_C_GenerateRandom(const Req_C_GenerateRandom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  randomdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_randomdata()) {
    randomdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.randomdata_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulrandomlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulrandomlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GenerateRandom)
}

void Req_C_GenerateRandom::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_GenerateRandom_pkcs11_2eproto.base);
  randomdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulrandomlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulrandomlen_));
}

Req_C_GenerateRandom::~Req_C_GenerateRandom() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GenerateRandom)
  SharedDtor();
}

void Req_C_GenerateRandom::SharedDtor() {
  randomdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_GenerateRandom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GenerateRandom& Req_C_GenerateRandom::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GenerateRandom_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GenerateRandom::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GenerateRandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    randomdata_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulrandomlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulrandomlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GenerateRandom::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GenerateRandom*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes RandomData = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_randomdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulRandomLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulrandomlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GenerateRandom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GenerateRandom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes RandomData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_randomdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulRandomLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulrandomlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulrandomlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GenerateRandom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GenerateRandom)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GenerateRandom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GenerateRandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes RandomData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->randomdata(), output);
  }

  // required uint32 ulRandomLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulrandomlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GenerateRandom)
}

::google::protobuf::uint8* Req_C_GenerateRandom::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GenerateRandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes RandomData = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->randomdata(), target);
  }

  // required uint32 ulRandomLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulrandomlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GenerateRandom)
  return target;
}

size_t Req_C_GenerateRandom::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_GenerateRandom)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulrandomlen()) {
    // required uint32 ulRandomLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulrandomlen());
  }

  return total_size;
}
size_t Req_C_GenerateRandom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GenerateRandom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulRandomLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulrandomlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes RandomData = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->randomdata());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GenerateRandom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GenerateRandom)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GenerateRandom* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GenerateRandom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GenerateRandom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GenerateRandom)
    MergeFrom(*source);
  }
}

void Req_C_GenerateRandom::MergeFrom(const Req_C_GenerateRandom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GenerateRandom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      randomdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.randomdata_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulrandomlen_ = from.ulrandomlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_GenerateRandom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GenerateRandom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GenerateRandom::CopyFrom(const Req_C_GenerateRandom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GenerateRandom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GenerateRandom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void Req_C_GenerateRandom::Swap(Req_C_GenerateRandom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GenerateRandom::InternalSwap(Req_C_GenerateRandom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  randomdata_.Swap(&other->randomdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulrandomlen_, other->ulrandomlen_);
}

::google::protobuf::Metadata Req_C_GenerateRandom::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GenerateRandom::InitAsDefaultInstance() {
}
class Rsp_C_GenerateRandom::HasBitSetters {
 public:
  static void set_has_randomdata(Rsp_C_GenerateRandom* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_GenerateRandom::kRandomDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GenerateRandom::Rsp_C_GenerateRandom()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GenerateRandom)
}
Rsp_C_GenerateRandom::Rsp_C_GenerateRandom(const Rsp_C_GenerateRandom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  randomdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_randomdata()) {
    randomdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.randomdata_);
  }
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GenerateRandom)
}

void Rsp_C_GenerateRandom::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_GenerateRandom_pkcs11_2eproto.base);
  randomdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Rsp_C_GenerateRandom::~Rsp_C_GenerateRandom() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GenerateRandom)
  SharedDtor();
}

void Rsp_C_GenerateRandom::SharedDtor() {
  randomdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_GenerateRandom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GenerateRandom& Rsp_C_GenerateRandom::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GenerateRandom_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GenerateRandom::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GenerateRandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    randomdata_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GenerateRandom::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GenerateRandom*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes RandomData = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_randomdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GenerateRandom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GenerateRandom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes RandomData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_randomdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GenerateRandom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GenerateRandom)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GenerateRandom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GenerateRandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes RandomData = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->randomdata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GenerateRandom)
}

::google::protobuf::uint8* Rsp_C_GenerateRandom::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GenerateRandom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes RandomData = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->randomdata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GenerateRandom)
  return target;
}

size_t Rsp_C_GenerateRandom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GenerateRandom)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes RandomData = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->randomdata());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GenerateRandom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GenerateRandom)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GenerateRandom* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GenerateRandom>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GenerateRandom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GenerateRandom)
    MergeFrom(*source);
  }
}

void Rsp_C_GenerateRandom::MergeFrom(const Rsp_C_GenerateRandom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GenerateRandom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_randomdata()) {
    _has_bits_[0] |= 0x00000001u;
    randomdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.randomdata_);
  }
}

void Rsp_C_GenerateRandom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GenerateRandom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GenerateRandom::CopyFrom(const Rsp_C_GenerateRandom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GenerateRandom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GenerateRandom::IsInitialized() const {
  return true;
}

void Rsp_C_GenerateRandom::Swap(Rsp_C_GenerateRandom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GenerateRandom::InternalSwap(Rsp_C_GenerateRandom* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  randomdata_.Swap(&other->randomdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Rsp_C_GenerateRandom::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_GetFunctionStatus::InitAsDefaultInstance() {
}
class Req_C_GetFunctionStatus::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_GetFunctionStatus* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_GetFunctionStatus::kHSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_GetFunctionStatus::Req_C_GetFunctionStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_GetFunctionStatus)
}
Req_C_GetFunctionStatus::Req_C_GetFunctionStatus(const Req_C_GetFunctionStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hsession_ = from.hsession_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_GetFunctionStatus)
}

void Req_C_GetFunctionStatus::SharedCtor() {
  hsession_ = 0u;
}

Req_C_GetFunctionStatus::~Req_C_GetFunctionStatus() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_GetFunctionStatus)
  SharedDtor();
}

void Req_C_GetFunctionStatus::SharedDtor() {
}

void Req_C_GetFunctionStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_GetFunctionStatus& Req_C_GetFunctionStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_GetFunctionStatus_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_GetFunctionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_GetFunctionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hsession_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_GetFunctionStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_GetFunctionStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_GetFunctionStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_GetFunctionStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_GetFunctionStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_GetFunctionStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_GetFunctionStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_GetFunctionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_GetFunctionStatus)
}

::google::protobuf::uint8* Req_C_GetFunctionStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_GetFunctionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_GetFunctionStatus)
  return target;
}

size_t Req_C_GetFunctionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_GetFunctionStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_GetFunctionStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_GetFunctionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_GetFunctionStatus* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_GetFunctionStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_GetFunctionStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_GetFunctionStatus)
    MergeFrom(*source);
  }
}

void Req_C_GetFunctionStatus::MergeFrom(const Req_C_GetFunctionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_GetFunctionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hsession()) {
    set_hsession(from.hsession());
  }
}

void Req_C_GetFunctionStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_GetFunctionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_GetFunctionStatus::CopyFrom(const Req_C_GetFunctionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_GetFunctionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_GetFunctionStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_GetFunctionStatus::Swap(Req_C_GetFunctionStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_GetFunctionStatus::InternalSwap(Req_C_GetFunctionStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(hsession_, other->hsession_);
}

::google::protobuf::Metadata Req_C_GetFunctionStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_GetFunctionStatus::InitAsDefaultInstance() {
}
class Rsp_C_GetFunctionStatus::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_GetFunctionStatus::Rsp_C_GetFunctionStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
}
Rsp_C_GetFunctionStatus::Rsp_C_GetFunctionStatus(const Rsp_C_GetFunctionStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
}

void Rsp_C_GetFunctionStatus::SharedCtor() {
}

Rsp_C_GetFunctionStatus::~Rsp_C_GetFunctionStatus() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  SharedDtor();
}

void Rsp_C_GetFunctionStatus::SharedDtor() {
}

void Rsp_C_GetFunctionStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_GetFunctionStatus& Rsp_C_GetFunctionStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_GetFunctionStatus_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_GetFunctionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_GetFunctionStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_GetFunctionStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_GetFunctionStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_GetFunctionStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
}

::google::protobuf::uint8* Rsp_C_GetFunctionStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  return target;
}

size_t Rsp_C_GetFunctionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_GetFunctionStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_GetFunctionStatus* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_GetFunctionStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
    MergeFrom(*source);
  }
}

void Rsp_C_GetFunctionStatus::MergeFrom(const Rsp_C_GetFunctionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_GetFunctionStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_GetFunctionStatus::CopyFrom(const Rsp_C_GetFunctionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_GetFunctionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_GetFunctionStatus::IsInitialized() const {
  return true;
}

void Rsp_C_GetFunctionStatus::Swap(Rsp_C_GetFunctionStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_GetFunctionStatus::InternalSwap(Rsp_C_GetFunctionStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_GetFunctionStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_CancelFunction::InitAsDefaultInstance() {
}
class Req_C_CancelFunction::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_CancelFunction* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_CancelFunction::kHSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_CancelFunction::Req_C_CancelFunction()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_CancelFunction)
}
Req_C_CancelFunction::Req_C_CancelFunction(const Req_C_CancelFunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hsession_ = from.hsession_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_CancelFunction)
}

void Req_C_CancelFunction::SharedCtor() {
  hsession_ = 0u;
}

Req_C_CancelFunction::~Req_C_CancelFunction() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_CancelFunction)
  SharedDtor();
}

void Req_C_CancelFunction::SharedDtor() {
}

void Req_C_CancelFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_CancelFunction& Req_C_CancelFunction::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_CancelFunction_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_CancelFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_CancelFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hsession_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_CancelFunction::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_CancelFunction*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_CancelFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_CancelFunction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_CancelFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_CancelFunction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_CancelFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_CancelFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_CancelFunction)
}

::google::protobuf::uint8* Req_C_CancelFunction::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_CancelFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_CancelFunction)
  return target;
}

size_t Req_C_CancelFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_CancelFunction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_CancelFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_CancelFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_CancelFunction* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_CancelFunction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_CancelFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_CancelFunction)
    MergeFrom(*source);
  }
}

void Req_C_CancelFunction::MergeFrom(const Req_C_CancelFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_CancelFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hsession()) {
    set_hsession(from.hsession());
  }
}

void Req_C_CancelFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_CancelFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_CancelFunction::CopyFrom(const Req_C_CancelFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_CancelFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_CancelFunction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_CancelFunction::Swap(Req_C_CancelFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_CancelFunction::InternalSwap(Req_C_CancelFunction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(hsession_, other->hsession_);
}

::google::protobuf::Metadata Req_C_CancelFunction::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_CancelFunction::InitAsDefaultInstance() {
}
class Rsp_C_CancelFunction::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_CancelFunction::Rsp_C_CancelFunction()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_CancelFunction)
}
Rsp_C_CancelFunction::Rsp_C_CancelFunction(const Rsp_C_CancelFunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_CancelFunction)
}

void Rsp_C_CancelFunction::SharedCtor() {
}

Rsp_C_CancelFunction::~Rsp_C_CancelFunction() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_CancelFunction)
  SharedDtor();
}

void Rsp_C_CancelFunction::SharedDtor() {
}

void Rsp_C_CancelFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_CancelFunction& Rsp_C_CancelFunction::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_CancelFunction_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_CancelFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_CancelFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_CancelFunction::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_CancelFunction*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_CancelFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_CancelFunction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_CancelFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_CancelFunction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_CancelFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_CancelFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_CancelFunction)
}

::google::protobuf::uint8* Rsp_C_CancelFunction::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_CancelFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_CancelFunction)
  return target;
}

size_t Rsp_C_CancelFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_CancelFunction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_CancelFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_CancelFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_CancelFunction* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_CancelFunction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_CancelFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_CancelFunction)
    MergeFrom(*source);
  }
}

void Rsp_C_CancelFunction::MergeFrom(const Rsp_C_CancelFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_CancelFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_CancelFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_CancelFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_CancelFunction::CopyFrom(const Rsp_C_CancelFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_CancelFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_CancelFunction::IsInitialized() const {
  return true;
}

void Rsp_C_CancelFunction::Swap(Rsp_C_CancelFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_CancelFunction::InternalSwap(Rsp_C_CancelFunction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_CancelFunction::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_WaitForSlotEvent::InitAsDefaultInstance() {
}
class Req_C_WaitForSlotEvent::HasBitSetters {
 public:
  static void set_has_flags(Req_C_WaitForSlotEvent* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pslot(Req_C_WaitForSlotEvent* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_prserved(Req_C_WaitForSlotEvent* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_WaitForSlotEvent::kFlagsFieldNumber;
const int Req_C_WaitForSlotEvent::kPSlotFieldNumber;
const int Req_C_WaitForSlotEvent::kPRservedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_WaitForSlotEvent::Req_C_WaitForSlotEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_WaitForSlotEvent)
}
Req_C_WaitForSlotEvent::Req_C_WaitForSlotEvent(const Req_C_WaitForSlotEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prserved_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prserved()) {
    prserved_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prserved_);
  }
  ::memcpy(&flags_, &from.flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&pslot_) -
    reinterpret_cast<char*>(&flags_)) + sizeof(pslot_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_WaitForSlotEvent)
}

void Req_C_WaitForSlotEvent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_WaitForSlotEvent_pkcs11_2eproto.base);
  prserved_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pslot_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(pslot_));
}

Req_C_WaitForSlotEvent::~Req_C_WaitForSlotEvent() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  SharedDtor();
}

void Req_C_WaitForSlotEvent::SharedDtor() {
  prserved_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_WaitForSlotEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_WaitForSlotEvent& Req_C_WaitForSlotEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_WaitForSlotEvent_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_WaitForSlotEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    prserved_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&flags_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pslot_) -
        reinterpret_cast<char*>(&flags_)) + sizeof(pslot_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_WaitForSlotEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_WaitForSlotEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 flags = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_flags(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 pSlot = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pslot(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pRserved = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_prserved();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_WaitForSlotEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_flags(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pSlot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pslot(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pslot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pRserved = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prserved()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_WaitForSlotEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 flags = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flags(), output);
  }

  // optional uint32 pSlot = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pslot(), output);
  }

  // optional bytes pRserved = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->prserved(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_WaitForSlotEvent)
}

::google::protobuf::uint8* Req_C_WaitForSlotEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 flags = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flags(), target);
  }

  // optional uint32 pSlot = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pslot(), target);
  }

  // optional bytes pRserved = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->prserved(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  return target;
}

size_t Req_C_WaitForSlotEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 flags = 1;
  if (has_flags()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pRserved = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prserved());
  }

  // optional uint32 pSlot = 2;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pslot());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_WaitForSlotEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_WaitForSlotEvent* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_WaitForSlotEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_WaitForSlotEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_WaitForSlotEvent)
    MergeFrom(*source);
  }
}

void Req_C_WaitForSlotEvent::MergeFrom(const Req_C_WaitForSlotEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      prserved_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prserved_);
    }
    if (cached_has_bits & 0x00000002u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000004u) {
      pslot_ = from.pslot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_WaitForSlotEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_WaitForSlotEvent::CopyFrom(const Req_C_WaitForSlotEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_WaitForSlotEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_WaitForSlotEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Req_C_WaitForSlotEvent::Swap(Req_C_WaitForSlotEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_WaitForSlotEvent::InternalSwap(Req_C_WaitForSlotEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  prserved_.Swap(&other->prserved_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(flags_, other->flags_);
  swap(pslot_, other->pslot_);
}

::google::protobuf::Metadata Req_C_WaitForSlotEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_WaitForSlotEvent::InitAsDefaultInstance() {
}
class Rsp_C_WaitForSlotEvent::HasBitSetters {
 public:
  static void set_has_pslot(Rsp_C_WaitForSlotEvent* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_prserved(Rsp_C_WaitForSlotEvent* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_WaitForSlotEvent::kPSlotFieldNumber;
const int Rsp_C_WaitForSlotEvent::kPRservedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_WaitForSlotEvent::Rsp_C_WaitForSlotEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
}
Rsp_C_WaitForSlotEvent::Rsp_C_WaitForSlotEvent(const Rsp_C_WaitForSlotEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prserved_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prserved()) {
    prserved_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prserved_);
  }
  pslot_ = from.pslot_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
}

void Rsp_C_WaitForSlotEvent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_WaitForSlotEvent_pkcs11_2eproto.base);
  prserved_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pslot_ = 0u;
}

Rsp_C_WaitForSlotEvent::~Rsp_C_WaitForSlotEvent() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  SharedDtor();
}

void Rsp_C_WaitForSlotEvent::SharedDtor() {
  prserved_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_WaitForSlotEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_WaitForSlotEvent& Rsp_C_WaitForSlotEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_WaitForSlotEvent_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_WaitForSlotEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    prserved_.ClearNonDefaultToEmptyNoArena();
  }
  pslot_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_WaitForSlotEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_WaitForSlotEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 pSlot = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_pslot(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pRserved = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_prserved();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_WaitForSlotEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pSlot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_pslot(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pslot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pRserved = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prserved()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_WaitForSlotEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pSlot = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pslot(), output);
  }

  // optional bytes pRserved = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->prserved(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
}

::google::protobuf::uint8* Rsp_C_WaitForSlotEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pSlot = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pslot(), target);
  }

  // optional bytes pRserved = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->prserved(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  return target;
}

size_t Rsp_C_WaitForSlotEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pRserved = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prserved());
    }

    // optional uint32 pSlot = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pslot());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_WaitForSlotEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_WaitForSlotEvent* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_WaitForSlotEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
    MergeFrom(*source);
  }
}

void Rsp_C_WaitForSlotEvent::MergeFrom(const Rsp_C_WaitForSlotEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      prserved_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prserved_);
    }
    if (cached_has_bits & 0x00000002u) {
      pslot_ = from.pslot_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_WaitForSlotEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_WaitForSlotEvent::CopyFrom(const Rsp_C_WaitForSlotEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_WaitForSlotEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_WaitForSlotEvent::IsInitialized() const {
  return true;
}

void Rsp_C_WaitForSlotEvent::Swap(Rsp_C_WaitForSlotEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_WaitForSlotEvent::InternalSwap(Rsp_C_WaitForSlotEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  prserved_.Swap(&other->prserved_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pslot_, other->pslot_);
}

::google::protobuf::Metadata Rsp_C_WaitForSlotEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_GetPinRemainCount::InitAsDefaultInstance() {
}
class Req_C_Extend_GetPinRemainCount::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_GetPinRemainCount* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_puiremaincount(Req_C_Extend_GetPinRemainCount* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_GetPinRemainCount::kHSessionFieldNumber;
const int Req_C_Extend_GetPinRemainCount::kPUiRemainCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_GetPinRemainCount::Req_C_Extend_GetPinRemainCount()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
}
Req_C_Extend_GetPinRemainCount::Req_C_Extend_GetPinRemainCount(const Req_C_Extend_GetPinRemainCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&puiremaincount_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(puiremaincount_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
}

void Req_C_Extend_GetPinRemainCount::SharedCtor() {
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&puiremaincount_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(puiremaincount_));
}

Req_C_Extend_GetPinRemainCount::~Req_C_Extend_GetPinRemainCount() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  SharedDtor();
}

void Req_C_Extend_GetPinRemainCount::SharedDtor() {
}

void Req_C_Extend_GetPinRemainCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_GetPinRemainCount& Req_C_Extend_GetPinRemainCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_GetPinRemainCount_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_GetPinRemainCount::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&puiremaincount_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(puiremaincount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_GetPinRemainCount::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_GetPinRemainCount*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 pUiRemainCount = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_puiremaincount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_GetPinRemainCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pUiRemainCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_puiremaincount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puiremaincount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_GetPinRemainCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional uint32 pUiRemainCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->puiremaincount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
}

::google::protobuf::uint8* Req_C_Extend_GetPinRemainCount::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional uint32 pUiRemainCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->puiremaincount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  return target;
}

size_t Req_C_Extend_GetPinRemainCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 pUiRemainCount = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->puiremaincount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_GetPinRemainCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_GetPinRemainCount* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_GetPinRemainCount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
    MergeFrom(*source);
  }
}

void Req_C_Extend_GetPinRemainCount::MergeFrom(const Req_C_Extend_GetPinRemainCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000002u) {
      puiremaincount_ = from.puiremaincount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_GetPinRemainCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_GetPinRemainCount::CopyFrom(const Req_C_Extend_GetPinRemainCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_GetPinRemainCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_GetPinRemainCount::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_Extend_GetPinRemainCount::Swap(Req_C_Extend_GetPinRemainCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_GetPinRemainCount::InternalSwap(Req_C_Extend_GetPinRemainCount* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(hsession_, other->hsession_);
  swap(puiremaincount_, other->puiremaincount_);
}

::google::protobuf::Metadata Req_C_Extend_GetPinRemainCount::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_GetPinRemainCount::InitAsDefaultInstance() {
}
class Rsp_C_Extend_GetPinRemainCount::HasBitSetters {
 public:
  static void set_has_puiremaincount(Rsp_C_Extend_GetPinRemainCount* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_GetPinRemainCount::kPUiRemainCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_GetPinRemainCount::Rsp_C_Extend_GetPinRemainCount()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
}
Rsp_C_Extend_GetPinRemainCount::Rsp_C_Extend_GetPinRemainCount(const Rsp_C_Extend_GetPinRemainCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  puiremaincount_ = from.puiremaincount_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
}

void Rsp_C_Extend_GetPinRemainCount::SharedCtor() {
  puiremaincount_ = 0u;
}

Rsp_C_Extend_GetPinRemainCount::~Rsp_C_Extend_GetPinRemainCount() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  SharedDtor();
}

void Rsp_C_Extend_GetPinRemainCount::SharedDtor() {
}

void Rsp_C_Extend_GetPinRemainCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_GetPinRemainCount& Rsp_C_Extend_GetPinRemainCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_GetPinRemainCount_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_GetPinRemainCount::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  puiremaincount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_GetPinRemainCount::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_GetPinRemainCount*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 pUiRemainCount = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_puiremaincount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_GetPinRemainCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pUiRemainCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_puiremaincount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puiremaincount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_GetPinRemainCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pUiRemainCount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->puiremaincount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
}

::google::protobuf::uint8* Rsp_C_Extend_GetPinRemainCount::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pUiRemainCount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->puiremaincount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  return target;
}

size_t Rsp_C_Extend_GetPinRemainCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 pUiRemainCount = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->puiremaincount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_GetPinRemainCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_GetPinRemainCount* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_GetPinRemainCount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_GetPinRemainCount::MergeFrom(const Rsp_C_Extend_GetPinRemainCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_puiremaincount()) {
    set_puiremaincount(from.puiremaincount());
  }
}

void Rsp_C_Extend_GetPinRemainCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_GetPinRemainCount::CopyFrom(const Rsp_C_Extend_GetPinRemainCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_GetPinRemainCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_GetPinRemainCount::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_GetPinRemainCount::Swap(Rsp_C_Extend_GetPinRemainCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_GetPinRemainCount::InternalSwap(Rsp_C_Extend_GetPinRemainCount* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(puiremaincount_, other->puiremaincount_);
}

::google::protobuf::Metadata Rsp_C_Extend_GetPinRemainCount::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_GetStatus::InitAsDefaultInstance() {
}
class Req_C_Extend_GetStatus::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_Extend_GetStatus* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pstatus(Req_C_Extend_GetStatus* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_GetStatus::kSlotIDFieldNumber;
const int Req_C_Extend_GetStatus::kPStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_GetStatus::Req_C_Extend_GetStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_GetStatus)
}
Req_C_Extend_GetStatus::Req_C_Extend_GetStatus(const Req_C_Extend_GetStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slotid_, &from.slotid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pstatus_) -
    reinterpret_cast<char*>(&slotid_)) + sizeof(pstatus_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_GetStatus)
}

void Req_C_Extend_GetStatus::SharedCtor() {
  ::memset(&slotid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pstatus_) -
      reinterpret_cast<char*>(&slotid_)) + sizeof(pstatus_));
}

Req_C_Extend_GetStatus::~Req_C_Extend_GetStatus() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_GetStatus)
  SharedDtor();
}

void Req_C_Extend_GetStatus::SharedDtor() {
}

void Req_C_Extend_GetStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_GetStatus& Req_C_Extend_GetStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_GetStatus_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_GetStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_GetStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&slotid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pstatus_) -
        reinterpret_cast<char*>(&slotid_)) + sizeof(pstatus_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_GetStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_GetStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 pStatus = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pstatus(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_GetStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_GetStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pstatus(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_GetStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_GetStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_GetStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_GetStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // optional uint32 pStatus = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pstatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_GetStatus)
}

::google::protobuf::uint8* Req_C_Extend_GetStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_GetStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // optional uint32 pStatus = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pstatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_GetStatus)
  return target;
}

size_t Req_C_Extend_GetStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_GetStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 slotID = 1;
  if (has_slotid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 pStatus = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pstatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_GetStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_GetStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_GetStatus* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_GetStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_GetStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_GetStatus)
    MergeFrom(*source);
  }
}

void Req_C_Extend_GetStatus::MergeFrom(const Req_C_Extend_GetStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_GetStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      slotid_ = from.slotid_;
    }
    if (cached_has_bits & 0x00000002u) {
      pstatus_ = from.pstatus_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_GetStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_GetStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_GetStatus::CopyFrom(const Req_C_Extend_GetStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_GetStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_GetStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_Extend_GetStatus::Swap(Req_C_Extend_GetStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_GetStatus::InternalSwap(Req_C_Extend_GetStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(slotid_, other->slotid_);
  swap(pstatus_, other->pstatus_);
}

::google::protobuf::Metadata Req_C_Extend_GetStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_GetStatus::InitAsDefaultInstance() {
}
class Rsp_C_Extend_GetStatus::HasBitSetters {
 public:
  static void set_has_pstatus(Rsp_C_Extend_GetStatus* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_GetStatus::kPStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_GetStatus::Rsp_C_Extend_GetStatus()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
}
Rsp_C_Extend_GetStatus::Rsp_C_Extend_GetStatus(const Rsp_C_Extend_GetStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pstatus_ = from.pstatus_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
}

void Rsp_C_Extend_GetStatus::SharedCtor() {
  pstatus_ = 0u;
}

Rsp_C_Extend_GetStatus::~Rsp_C_Extend_GetStatus() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  SharedDtor();
}

void Rsp_C_Extend_GetStatus::SharedDtor() {
}

void Rsp_C_Extend_GetStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_GetStatus& Rsp_C_Extend_GetStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_GetStatus_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_GetStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pstatus_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_GetStatus::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_GetStatus*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 pStatus = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_pstatus(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_GetStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_pstatus(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_GetStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pStatus = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pstatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
}

::google::protobuf::uint8* Rsp_C_Extend_GetStatus::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pStatus = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pstatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  return target;
}

size_t Rsp_C_Extend_GetStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 pStatus = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pstatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_GetStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_GetStatus* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_GetStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_GetStatus::MergeFrom(const Rsp_C_Extend_GetStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pstatus()) {
    set_pstatus(from.pstatus());
  }
}

void Rsp_C_Extend_GetStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_GetStatus::CopyFrom(const Rsp_C_Extend_GetStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_GetStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_GetStatus::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_GetStatus::Swap(Rsp_C_Extend_GetStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_GetStatus::InternalSwap(Rsp_C_Extend_GetStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pstatus_, other->pstatus_);
}

::google::protobuf::Metadata Rsp_C_Extend_GetStatus::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_Status_Callback_Func::InitAsDefaultInstance() {
}
class Rsp_Status_Callback_Func::HasBitSetters {
 public:
  static void set_has_slotid(Rsp_Status_Callback_Func* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_status(Rsp_Status_Callback_Func* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_Status_Callback_Func::kSlotIDFieldNumber;
const int Rsp_Status_Callback_Func::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_Status_Callback_Func::Rsp_Status_Callback_Func()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_Status_Callback_Func)
}
Rsp_Status_Callback_Func::Rsp_Status_Callback_Func(const Rsp_Status_Callback_Func& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slotid_, &from.slotid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&slotid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_Status_Callback_Func)
}

void Rsp_Status_Callback_Func::SharedCtor() {
  ::memset(&slotid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&slotid_)) + sizeof(status_));
}

Rsp_Status_Callback_Func::~Rsp_Status_Callback_Func() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_Status_Callback_Func)
  SharedDtor();
}

void Rsp_Status_Callback_Func::SharedDtor() {
}

void Rsp_Status_Callback_Func::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_Status_Callback_Func& Rsp_Status_Callback_Func::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_Status_Callback_Func_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_Status_Callback_Func::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_Status_Callback_Func)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&slotid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&status_) -
        reinterpret_cast<char*>(&slotid_)) + sizeof(status_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_Status_Callback_Func::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_Status_Callback_Func*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 status = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_status(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_Status_Callback_Func::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_Status_Callback_Func)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_status(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_Status_Callback_Func)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_Status_Callback_Func)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_Status_Callback_Func::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_Status_Callback_Func)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // required uint32 status = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_Status_Callback_Func)
}

::google::protobuf::uint8* Rsp_Status_Callback_Func::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_Status_Callback_Func)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // required uint32 status = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_Status_Callback_Func)
  return target;
}

size_t Rsp_Status_Callback_Func::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Rsp_Status_Callback_Func)
  size_t total_size = 0;

  if (has_slotid()) {
    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }

  if (has_status()) {
    // required uint32 status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  return total_size;
}
size_t Rsp_Status_Callback_Func::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_Status_Callback_Func)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());

    // required uint32 status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_Status_Callback_Func::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_Status_Callback_Func)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_Status_Callback_Func* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_Status_Callback_Func>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_Status_Callback_Func)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_Status_Callback_Func)
    MergeFrom(*source);
  }
}

void Rsp_Status_Callback_Func::MergeFrom(const Rsp_Status_Callback_Func& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_Status_Callback_Func)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      slotid_ = from.slotid_;
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_Status_Callback_Func::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_Status_Callback_Func)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_Status_Callback_Func::CopyFrom(const Rsp_Status_Callback_Func& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_Status_Callback_Func)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_Status_Callback_Func::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Rsp_Status_Callback_Func::Swap(Rsp_Status_Callback_Func* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_Status_Callback_Func::InternalSwap(Rsp_Status_Callback_Func* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(slotid_, other->slotid_);
  swap(status_, other->status_);
}

::google::protobuf::Metadata Rsp_Status_Callback_Func::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_Register_Callback::InitAsDefaultInstance() {
}
class Req_C_Extend_Register_Callback::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_Register_Callback::Req_C_Extend_Register_Callback()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_Register_Callback)
}
Req_C_Extend_Register_Callback::Req_C_Extend_Register_Callback(const Req_C_Extend_Register_Callback& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_Register_Callback)
}

void Req_C_Extend_Register_Callback::SharedCtor() {
}

Req_C_Extend_Register_Callback::~Req_C_Extend_Register_Callback() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  SharedDtor();
}

void Req_C_Extend_Register_Callback::SharedDtor() {
}

void Req_C_Extend_Register_Callback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_Register_Callback& Req_C_Extend_Register_Callback::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_Register_Callback_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_Register_Callback::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_Register_Callback::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_Register_Callback*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_Register_Callback::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_Register_Callback::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_Register_Callback)
}

::google::protobuf::uint8* Req_C_Extend_Register_Callback::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  return target;
}

size_t Req_C_Extend_Register_Callback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_Register_Callback::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_Register_Callback* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_Register_Callback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_Register_Callback)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_Register_Callback)
    MergeFrom(*source);
  }
}

void Req_C_Extend_Register_Callback::MergeFrom(const Req_C_Extend_Register_Callback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Req_C_Extend_Register_Callback::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_Register_Callback::CopyFrom(const Req_C_Extend_Register_Callback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_Register_Callback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_Register_Callback::IsInitialized() const {
  return true;
}

void Req_C_Extend_Register_Callback::Swap(Req_C_Extend_Register_Callback* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_Register_Callback::InternalSwap(Req_C_Extend_Register_Callback* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Req_C_Extend_Register_Callback::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_Register_Callback::InitAsDefaultInstance() {
}
class Rsp_C_Extend_Register_Callback::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_Register_Callback::Rsp_C_Extend_Register_Callback()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
}
Rsp_C_Extend_Register_Callback::Rsp_C_Extend_Register_Callback(const Rsp_C_Extend_Register_Callback& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
}

void Rsp_C_Extend_Register_Callback::SharedCtor() {
}

Rsp_C_Extend_Register_Callback::~Rsp_C_Extend_Register_Callback() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  SharedDtor();
}

void Rsp_C_Extend_Register_Callback::SharedDtor() {
}

void Rsp_C_Extend_Register_Callback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_Register_Callback& Rsp_C_Extend_Register_Callback::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_Register_Callback_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_Register_Callback::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_Register_Callback::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_Register_Callback*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_Register_Callback::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_Register_Callback::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
}

::google::protobuf::uint8* Rsp_C_Extend_Register_Callback::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  return target;
}

size_t Rsp_C_Extend_Register_Callback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_Register_Callback::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_Register_Callback* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_Register_Callback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_Register_Callback::MergeFrom(const Rsp_C_Extend_Register_Callback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Extend_Register_Callback::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_Register_Callback::CopyFrom(const Rsp_C_Extend_Register_Callback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Register_Callback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_Register_Callback::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_Register_Callback::Swap(Rsp_C_Extend_Register_Callback* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_Register_Callback::InternalSwap(Rsp_C_Extend_Register_Callback* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Extend_Register_Callback::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_Unregister_Callback::InitAsDefaultInstance() {
}
class Req_C_Extend_Unregister_Callback::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_Unregister_Callback::Req_C_Extend_Unregister_Callback()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
}
Req_C_Extend_Unregister_Callback::Req_C_Extend_Unregister_Callback(const Req_C_Extend_Unregister_Callback& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
}

void Req_C_Extend_Unregister_Callback::SharedCtor() {
}

Req_C_Extend_Unregister_Callback::~Req_C_Extend_Unregister_Callback() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  SharedDtor();
}

void Req_C_Extend_Unregister_Callback::SharedDtor() {
}

void Req_C_Extend_Unregister_Callback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_Unregister_Callback& Req_C_Extend_Unregister_Callback::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_Unregister_Callback_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_Unregister_Callback::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_Unregister_Callback::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_Unregister_Callback*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_Unregister_Callback::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_Unregister_Callback::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
}

::google::protobuf::uint8* Req_C_Extend_Unregister_Callback::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  return target;
}

size_t Req_C_Extend_Unregister_Callback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_Unregister_Callback::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_Unregister_Callback* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_Unregister_Callback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
    MergeFrom(*source);
  }
}

void Req_C_Extend_Unregister_Callback::MergeFrom(const Req_C_Extend_Unregister_Callback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Req_C_Extend_Unregister_Callback::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_Unregister_Callback::CopyFrom(const Req_C_Extend_Unregister_Callback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_Unregister_Callback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_Unregister_Callback::IsInitialized() const {
  return true;
}

void Req_C_Extend_Unregister_Callback::Swap(Req_C_Extend_Unregister_Callback* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_Unregister_Callback::InternalSwap(Req_C_Extend_Unregister_Callback* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Req_C_Extend_Unregister_Callback::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_Unregister_Callback::InitAsDefaultInstance() {
}
class Rsp_C_Extend_Unregister_Callback::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_Unregister_Callback::Rsp_C_Extend_Unregister_Callback()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
}
Rsp_C_Extend_Unregister_Callback::Rsp_C_Extend_Unregister_Callback(const Rsp_C_Extend_Unregister_Callback& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
}

void Rsp_C_Extend_Unregister_Callback::SharedCtor() {
}

Rsp_C_Extend_Unregister_Callback::~Rsp_C_Extend_Unregister_Callback() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  SharedDtor();
}

void Rsp_C_Extend_Unregister_Callback::SharedDtor() {
}

void Rsp_C_Extend_Unregister_Callback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_Unregister_Callback& Rsp_C_Extend_Unregister_Callback::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_Unregister_Callback_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_Unregister_Callback::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_Unregister_Callback::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_Unregister_Callback*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_Unregister_Callback::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_Unregister_Callback::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
}

::google::protobuf::uint8* Rsp_C_Extend_Unregister_Callback::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  return target;
}

size_t Rsp_C_Extend_Unregister_Callback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_Unregister_Callback::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_Unregister_Callback* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_Unregister_Callback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_Unregister_Callback::MergeFrom(const Rsp_C_Extend_Unregister_Callback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Extend_Unregister_Callback::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_Unregister_Callback::CopyFrom(const Rsp_C_Extend_Unregister_Callback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Unregister_Callback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_Unregister_Callback::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_Unregister_Callback::Swap(Rsp_C_Extend_Unregister_Callback* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_Unregister_Callback::InternalSwap(Rsp_C_Extend_Unregister_Callback* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Extend_Unregister_Callback::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_GetExchangeSessionKey::InitAsDefaultInstance() {
}
class Req_C_Extend_GetExchangeSessionKey::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_GetExchangeSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_hkey(Req_C_Extend_GetExchangeSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pencrypteddata(Req_C_Extend_GetExchangeSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulencrypteddatalen(Req_C_Extend_GetExchangeSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_GetExchangeSessionKey::kHSessionFieldNumber;
const int Req_C_Extend_GetExchangeSessionKey::kHKeyFieldNumber;
const int Req_C_Extend_GetExchangeSessionKey::kPEncryptedDataFieldNumber;
const int Req_C_Extend_GetExchangeSessionKey::kPulEncryptedDataLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_GetExchangeSessionKey::Req_C_Extend_GetExchangeSessionKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
}
Req_C_Extend_GetExchangeSessionKey::Req_C_Extend_GetExchangeSessionKey(const Req_C_Extend_GetExchangeSessionKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pencrypteddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencrypteddata()) {
    pencrypteddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencrypteddata_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulencrypteddatalen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulencrypteddatalen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
}

void Req_C_Extend_GetExchangeSessionKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_GetExchangeSessionKey_pkcs11_2eproto.base);
  pencrypteddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulencrypteddatalen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulencrypteddatalen_));
}

Req_C_Extend_GetExchangeSessionKey::~Req_C_Extend_GetExchangeSessionKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  SharedDtor();
}

void Req_C_Extend_GetExchangeSessionKey::SharedDtor() {
  pencrypteddata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_GetExchangeSessionKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_GetExchangeSessionKey& Req_C_Extend_GetExchangeSessionKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_GetExchangeSessionKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_GetExchangeSessionKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pencrypteddata_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulencrypteddatalen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulencrypteddatalen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_GetExchangeSessionKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_GetExchangeSessionKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 hKey = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_hkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pEncryptedData = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencrypteddata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulEncryptedDataLen = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_pulencrypteddatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_GetExchangeSessionKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_hkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pEncryptedData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencrypteddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulEncryptedDataLen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_pulencrypteddatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulencrypteddatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_GetExchangeSessionKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // required uint32 hKey = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hkey(), output);
  }

  // optional bytes pEncryptedData = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->pencrypteddata(), output);
  }

  // optional uint32 pulEncryptedDataLen = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pulencrypteddatalen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
}

::google::protobuf::uint8* Req_C_Extend_GetExchangeSessionKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // required uint32 hKey = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hkey(), target);
  }

  // optional bytes pEncryptedData = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->pencrypteddata(), target);
  }

  // optional uint32 pulEncryptedDataLen = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pulencrypteddatalen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  return target;
}

size_t Req_C_Extend_GetExchangeSessionKey::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hkey()) {
    // required uint32 hKey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());
  }

  return total_size;
}
size_t Req_C_Extend_GetExchangeSessionKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hKey = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pEncryptedData = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pencrypteddata());
  }

  // optional uint32 pulEncryptedDataLen = 4;
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulencrypteddatalen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_GetExchangeSessionKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_GetExchangeSessionKey* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_GetExchangeSessionKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
    MergeFrom(*source);
  }
}

void Req_C_Extend_GetExchangeSessionKey::MergeFrom(const Req_C_Extend_GetExchangeSessionKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pencrypteddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencrypteddata_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      hkey_ = from.hkey_;
    }
    if (cached_has_bits & 0x00000008u) {
      pulencrypteddatalen_ = from.pulencrypteddatalen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_GetExchangeSessionKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_GetExchangeSessionKey::CopyFrom(const Req_C_Extend_GetExchangeSessionKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_GetExchangeSessionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_GetExchangeSessionKey::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void Req_C_Extend_GetExchangeSessionKey::Swap(Req_C_Extend_GetExchangeSessionKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_GetExchangeSessionKey::InternalSwap(Req_C_Extend_GetExchangeSessionKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pencrypteddata_.Swap(&other->pencrypteddata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(hkey_, other->hkey_);
  swap(pulencrypteddatalen_, other->pulencrypteddatalen_);
}

::google::protobuf::Metadata Req_C_Extend_GetExchangeSessionKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_GetExchangeSessionKey::InitAsDefaultInstance() {
}
class Rsp_C_Extend_GetExchangeSessionKey::HasBitSetters {
 public:
  static void set_has_pencrypteddata(Rsp_C_Extend_GetExchangeSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulencrypteddatalen(Rsp_C_Extend_GetExchangeSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_GetExchangeSessionKey::kPEncryptedDataFieldNumber;
const int Rsp_C_Extend_GetExchangeSessionKey::kPulEncryptedDataLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_GetExchangeSessionKey::Rsp_C_Extend_GetExchangeSessionKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
}
Rsp_C_Extend_GetExchangeSessionKey::Rsp_C_Extend_GetExchangeSessionKey(const Rsp_C_Extend_GetExchangeSessionKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pencrypteddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencrypteddata()) {
    pencrypteddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencrypteddata_);
  }
  pulencrypteddatalen_ = from.pulencrypteddatalen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
}

void Rsp_C_Extend_GetExchangeSessionKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Extend_GetExchangeSessionKey_pkcs11_2eproto.base);
  pencrypteddata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulencrypteddatalen_ = 0u;
}

Rsp_C_Extend_GetExchangeSessionKey::~Rsp_C_Extend_GetExchangeSessionKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  SharedDtor();
}

void Rsp_C_Extend_GetExchangeSessionKey::SharedDtor() {
  pencrypteddata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Extend_GetExchangeSessionKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_GetExchangeSessionKey& Rsp_C_Extend_GetExchangeSessionKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_GetExchangeSessionKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_GetExchangeSessionKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pencrypteddata_.ClearNonDefaultToEmptyNoArena();
  }
  pulencrypteddatalen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_GetExchangeSessionKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_GetExchangeSessionKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pEncryptedData = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencrypteddata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulEncryptedDataLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_pulencrypteddatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_GetExchangeSessionKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pEncryptedData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencrypteddata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulEncryptedDataLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_pulencrypteddatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulencrypteddatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_GetExchangeSessionKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pEncryptedData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pencrypteddata(), output);
  }

  // optional uint32 pulEncryptedDataLen = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pulencrypteddatalen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
}

::google::protobuf::uint8* Rsp_C_Extend_GetExchangeSessionKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pEncryptedData = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pencrypteddata(), target);
  }

  // optional uint32 pulEncryptedDataLen = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pulencrypteddatalen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  return target;
}

size_t Rsp_C_Extend_GetExchangeSessionKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pEncryptedData = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencrypteddata());
    }

    // optional uint32 pulEncryptedDataLen = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulencrypteddatalen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_GetExchangeSessionKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_GetExchangeSessionKey* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_GetExchangeSessionKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_GetExchangeSessionKey::MergeFrom(const Rsp_C_Extend_GetExchangeSessionKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pencrypteddata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencrypteddata_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulencrypteddatalen_ = from.pulencrypteddatalen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Extend_GetExchangeSessionKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_GetExchangeSessionKey::CopyFrom(const Rsp_C_Extend_GetExchangeSessionKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_GetExchangeSessionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_GetExchangeSessionKey::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_GetExchangeSessionKey::Swap(Rsp_C_Extend_GetExchangeSessionKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_GetExchangeSessionKey::InternalSwap(Rsp_C_Extend_GetExchangeSessionKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pencrypteddata_.Swap(&other->pencrypteddata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulencrypteddatalen_, other->pulencrypteddatalen_);
}

::google::protobuf::Metadata Rsp_C_Extend_GetExchangeSessionKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_Destroy::InitAsDefaultInstance() {
}
class Req_C_Extend_Destroy::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_Extend_Destroy* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_containername(Req_C_Extend_Destroy* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_Destroy::kSlotIDFieldNumber;
const int Req_C_Extend_Destroy::kContainerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_Destroy::Req_C_Extend_Destroy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_Destroy)
}
Req_C_Extend_Destroy::Req_C_Extend_Destroy(const Req_C_Extend_Destroy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  containername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_containername()) {
    containername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.containername_);
  }
  slotid_ = from.slotid_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_Destroy)
}

void Req_C_Extend_Destroy::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_Destroy_pkcs11_2eproto.base);
  containername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slotid_ = 0u;
}

Req_C_Extend_Destroy::~Req_C_Extend_Destroy() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_Destroy)
  SharedDtor();
}

void Req_C_Extend_Destroy::SharedDtor() {
  containername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_Destroy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_Destroy& Req_C_Extend_Destroy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_Destroy_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_Destroy::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_Destroy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    containername_.ClearNonDefaultToEmptyNoArena();
  }
  slotid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_Destroy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_Destroy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes containerName = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_containername();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_Destroy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_Destroy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes containerName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_containername()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_Destroy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_Destroy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_Destroy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_Destroy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // optional bytes containerName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->containername(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_Destroy)
}

::google::protobuf::uint8* Req_C_Extend_Destroy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_Destroy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // optional bytes containerName = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->containername(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_Destroy)
  return target;
}

size_t Req_C_Extend_Destroy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_Destroy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 slotID = 1;
  if (has_slotid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes containerName = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->containername());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_Destroy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_Destroy)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_Destroy* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_Destroy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_Destroy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_Destroy)
    MergeFrom(*source);
  }
}

void Req_C_Extend_Destroy::MergeFrom(const Req_C_Extend_Destroy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_Destroy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      containername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.containername_);
    }
    if (cached_has_bits & 0x00000002u) {
      slotid_ = from.slotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_Destroy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_Destroy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_Destroy::CopyFrom(const Req_C_Extend_Destroy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_Destroy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_Destroy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Req_C_Extend_Destroy::Swap(Req_C_Extend_Destroy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_Destroy::InternalSwap(Req_C_Extend_Destroy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  containername_.Swap(&other->containername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(slotid_, other->slotid_);
}

::google::protobuf::Metadata Req_C_Extend_Destroy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_Destroy::InitAsDefaultInstance() {
}
class Rsp_C_Extend_Destroy::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_Destroy::Rsp_C_Extend_Destroy()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_Destroy)
}
Rsp_C_Extend_Destroy::Rsp_C_Extend_Destroy(const Rsp_C_Extend_Destroy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_Destroy)
}

void Rsp_C_Extend_Destroy::SharedCtor() {
}

Rsp_C_Extend_Destroy::~Rsp_C_Extend_Destroy() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  SharedDtor();
}

void Rsp_C_Extend_Destroy::SharedDtor() {
}

void Rsp_C_Extend_Destroy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_Destroy& Rsp_C_Extend_Destroy::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_Destroy_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_Destroy::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_Destroy::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_Destroy*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_Destroy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_Destroy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_Destroy)
}

::google::protobuf::uint8* Rsp_C_Extend_Destroy::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  return target;
}

size_t Rsp_C_Extend_Destroy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_Destroy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_Destroy* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_Destroy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_Destroy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_Destroy)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_Destroy::MergeFrom(const Rsp_C_Extend_Destroy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Extend_Destroy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_Destroy::CopyFrom(const Rsp_C_Extend_Destroy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Destroy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_Destroy::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_Destroy::Swap(Rsp_C_Extend_Destroy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_Destroy::InternalSwap(Rsp_C_Extend_Destroy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Extend_Destroy::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_Reset_Pin_With_OTP::InitAsDefaultInstance() {
}
class Req_C_Extend_Reset_Pin_With_OTP::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_Reset_Pin_With_OTP* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pbotppin(Req_C_Extend_Reset_Pin_With_OTP* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulotppinlen(Req_C_Extend_Reset_Pin_With_OTP* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pbnewuserpin(Req_C_Extend_Reset_Pin_With_OTP* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ulnewuserpinlen(Req_C_Extend_Reset_Pin_With_OTP* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_Reset_Pin_With_OTP::kHSessionFieldNumber;
const int Req_C_Extend_Reset_Pin_With_OTP::kPbOTPPINFieldNumber;
const int Req_C_Extend_Reset_Pin_With_OTP::kUlOTPPINLenFieldNumber;
const int Req_C_Extend_Reset_Pin_With_OTP::kPbNewUserPINFieldNumber;
const int Req_C_Extend_Reset_Pin_With_OTP::kUlNewUserPINLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_Reset_Pin_With_OTP::Req_C_Extend_Reset_Pin_With_OTP()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
}
Req_C_Extend_Reset_Pin_With_OTP::Req_C_Extend_Reset_Pin_With_OTP(const Req_C_Extend_Reset_Pin_With_OTP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbotppin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pbotppin()) {
    pbotppin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbotppin_);
  }
  pbnewuserpin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pbnewuserpin()) {
    pbnewuserpin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbnewuserpin_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulnewuserpinlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulnewuserpinlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
}

void Req_C_Extend_Reset_Pin_With_OTP::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_Reset_Pin_With_OTP_pkcs11_2eproto.base);
  pbotppin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbnewuserpin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulnewuserpinlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulnewuserpinlen_));
}

Req_C_Extend_Reset_Pin_With_OTP::~Req_C_Extend_Reset_Pin_With_OTP() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  SharedDtor();
}

void Req_C_Extend_Reset_Pin_With_OTP::SharedDtor() {
  pbotppin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbnewuserpin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_Reset_Pin_With_OTP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_Reset_Pin_With_OTP& Req_C_Extend_Reset_Pin_With_OTP::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_Reset_Pin_With_OTP_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_Reset_Pin_With_OTP::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pbotppin_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pbnewuserpin_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulnewuserpinlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulnewuserpinlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_Reset_Pin_With_OTP::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_Reset_Pin_With_OTP*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pbOTPPIN = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pbotppin();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulOTPPINLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulotppinlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pbNewUserPIN = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pbnewuserpin();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulNewUserPINLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ulnewuserpinlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_Reset_Pin_With_OTP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pbOTPPIN = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pbotppin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulOTPPINLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulotppinlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulotppinlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pbNewUserPIN = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pbnewuserpin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulNewUserPINLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ulnewuserpinlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulnewuserpinlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_Reset_Pin_With_OTP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pbOTPPIN = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pbotppin(), output);
  }

  // required uint32 ulOTPPINLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulotppinlen(), output);
  }

  // optional bytes pbNewUserPIN = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pbnewuserpin(), output);
  }

  // required uint32 ulNewUserPINLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ulnewuserpinlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
}

::google::protobuf::uint8* Req_C_Extend_Reset_Pin_With_OTP::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pbOTPPIN = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pbotppin(), target);
  }

  // required uint32 ulOTPPINLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulotppinlen(), target);
  }

  // optional bytes pbNewUserPIN = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pbnewuserpin(), target);
  }

  // required uint32 ulNewUserPINLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ulnewuserpinlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  return target;
}

size_t Req_C_Extend_Reset_Pin_With_OTP::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulotppinlen()) {
    // required uint32 ulOTPPINLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulotppinlen());
  }

  if (has_ulnewuserpinlen()) {
    // required uint32 ulNewUserPINLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulnewuserpinlen());
  }

  return total_size;
}
size_t Req_C_Extend_Reset_Pin_With_OTP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001c) ^ 0x0000001c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulOTPPINLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulotppinlen());

    // required uint32 ulNewUserPINLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulnewuserpinlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pbOTPPIN = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pbotppin());
    }

    // optional bytes pbNewUserPIN = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pbnewuserpin());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_Reset_Pin_With_OTP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_Reset_Pin_With_OTP* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_Reset_Pin_With_OTP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
    MergeFrom(*source);
  }
}

void Req_C_Extend_Reset_Pin_With_OTP::MergeFrom(const Req_C_Extend_Reset_Pin_With_OTP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pbotppin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbotppin_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pbnewuserpin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbnewuserpin_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulotppinlen_ = from.ulotppinlen_;
    }
    if (cached_has_bits & 0x00000010u) {
      ulnewuserpinlen_ = from.ulnewuserpinlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_Reset_Pin_With_OTP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_Reset_Pin_With_OTP::CopyFrom(const Req_C_Extend_Reset_Pin_With_OTP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_Reset_Pin_With_OTP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_Reset_Pin_With_OTP::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;
  return true;
}

void Req_C_Extend_Reset_Pin_With_OTP::Swap(Req_C_Extend_Reset_Pin_With_OTP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_Reset_Pin_With_OTP::InternalSwap(Req_C_Extend_Reset_Pin_With_OTP* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pbotppin_.Swap(&other->pbotppin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pbnewuserpin_.Swap(&other->pbnewuserpin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulotppinlen_, other->ulotppinlen_);
  swap(ulnewuserpinlen_, other->ulnewuserpinlen_);
}

::google::protobuf::Metadata Req_C_Extend_Reset_Pin_With_OTP::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_Reset_Pin_With_OTP::InitAsDefaultInstance() {
}
class Rsp_C_Extend_Reset_Pin_With_OTP::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_Reset_Pin_With_OTP::Rsp_C_Extend_Reset_Pin_With_OTP()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
}
Rsp_C_Extend_Reset_Pin_With_OTP::Rsp_C_Extend_Reset_Pin_With_OTP(const Rsp_C_Extend_Reset_Pin_With_OTP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
}

void Rsp_C_Extend_Reset_Pin_With_OTP::SharedCtor() {
}

Rsp_C_Extend_Reset_Pin_With_OTP::~Rsp_C_Extend_Reset_Pin_With_OTP() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  SharedDtor();
}

void Rsp_C_Extend_Reset_Pin_With_OTP::SharedDtor() {
}

void Rsp_C_Extend_Reset_Pin_With_OTP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_Reset_Pin_With_OTP& Rsp_C_Extend_Reset_Pin_With_OTP::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_Reset_Pin_With_OTP_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_Reset_Pin_With_OTP::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_Reset_Pin_With_OTP::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_Reset_Pin_With_OTP*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_Reset_Pin_With_OTP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_Reset_Pin_With_OTP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
}

::google::protobuf::uint8* Rsp_C_Extend_Reset_Pin_With_OTP::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  return target;
}

size_t Rsp_C_Extend_Reset_Pin_With_OTP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_Reset_Pin_With_OTP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_Reset_Pin_With_OTP* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_Reset_Pin_With_OTP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_Reset_Pin_With_OTP::MergeFrom(const Rsp_C_Extend_Reset_Pin_With_OTP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Extend_Reset_Pin_With_OTP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_Reset_Pin_With_OTP::CopyFrom(const Rsp_C_Extend_Reset_Pin_With_OTP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_Pin_With_OTP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_Reset_Pin_With_OTP::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_Reset_Pin_With_OTP::Swap(Rsp_C_Extend_Reset_Pin_With_OTP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_Reset_Pin_With_OTP::InternalSwap(Rsp_C_Extend_Reset_Pin_With_OTP* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Extend_Reset_Pin_With_OTP::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_Reset_OTP::InitAsDefaultInstance() {
}
class Req_C_Extend_Reset_OTP::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_Reset_OTP* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pbotpmpk(Req_C_Extend_Reset_OTP* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulmpklen(Req_C_Extend_Reset_OTP* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pbmpkiv(Req_C_Extend_Reset_OTP* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ulmpkivlen(Req_C_Extend_Reset_OTP* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_Reset_OTP::kHSessionFieldNumber;
const int Req_C_Extend_Reset_OTP::kPbOTPMpkFieldNumber;
const int Req_C_Extend_Reset_OTP::kUlMpkLenFieldNumber;
const int Req_C_Extend_Reset_OTP::kPbMpkIVFieldNumber;
const int Req_C_Extend_Reset_OTP::kUlMpkIVLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_Reset_OTP::Req_C_Extend_Reset_OTP()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
}
Req_C_Extend_Reset_OTP::Req_C_Extend_Reset_OTP(const Req_C_Extend_Reset_OTP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbotpmpk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pbotpmpk()) {
    pbotpmpk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbotpmpk_);
  }
  pbmpkiv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pbmpkiv()) {
    pbmpkiv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbmpkiv_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulmpkivlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulmpkivlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
}

void Req_C_Extend_Reset_OTP::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_Reset_OTP_pkcs11_2eproto.base);
  pbotpmpk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbmpkiv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulmpkivlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulmpkivlen_));
}

Req_C_Extend_Reset_OTP::~Req_C_Extend_Reset_OTP() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  SharedDtor();
}

void Req_C_Extend_Reset_OTP::SharedDtor() {
  pbotpmpk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbmpkiv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_Reset_OTP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_Reset_OTP& Req_C_Extend_Reset_OTP::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_Reset_OTP_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_Reset_OTP::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pbotpmpk_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pbmpkiv_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulmpkivlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulmpkivlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_Reset_OTP::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_Reset_OTP*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pbOTPMpk = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pbotpmpk();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulMpkLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulmpklen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pbMpkIV = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pbmpkiv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulMpkIVLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ulmpkivlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_Reset_OTP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pbOTPMpk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pbotpmpk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMpkLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulmpklen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmpklen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pbMpkIV = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pbmpkiv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMpkIVLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ulmpkivlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmpkivlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_Reset_OTP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pbOTPMpk = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pbotpmpk(), output);
  }

  // required uint32 ulMpkLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulmpklen(), output);
  }

  // optional bytes pbMpkIV = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pbmpkiv(), output);
  }

  // required uint32 ulMpkIVLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ulmpkivlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
}

::google::protobuf::uint8* Req_C_Extend_Reset_OTP::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pbOTPMpk = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pbotpmpk(), target);
  }

  // required uint32 ulMpkLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulmpklen(), target);
  }

  // optional bytes pbMpkIV = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pbmpkiv(), target);
  }

  // required uint32 ulMpkIVLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ulmpkivlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  return target;
}

size_t Req_C_Extend_Reset_OTP::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulmpklen()) {
    // required uint32 ulMpkLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpklen());
  }

  if (has_ulmpkivlen()) {
    // required uint32 ulMpkIVLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpkivlen());
  }

  return total_size;
}
size_t Req_C_Extend_Reset_OTP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001c) ^ 0x0000001c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulMpkLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpklen());

    // required uint32 ulMpkIVLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpkivlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pbOTPMpk = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pbotpmpk());
    }

    // optional bytes pbMpkIV = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pbmpkiv());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_Reset_OTP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_Reset_OTP* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_Reset_OTP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
    MergeFrom(*source);
  }
}

void Req_C_Extend_Reset_OTP::MergeFrom(const Req_C_Extend_Reset_OTP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pbotpmpk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbotpmpk_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pbmpkiv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbmpkiv_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulmpklen_ = from.ulmpklen_;
    }
    if (cached_has_bits & 0x00000010u) {
      ulmpkivlen_ = from.ulmpkivlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_Reset_OTP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_Reset_OTP::CopyFrom(const Req_C_Extend_Reset_OTP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_Reset_OTP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_Reset_OTP::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;
  return true;
}

void Req_C_Extend_Reset_OTP::Swap(Req_C_Extend_Reset_OTP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_Reset_OTP::InternalSwap(Req_C_Extend_Reset_OTP* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pbotpmpk_.Swap(&other->pbotpmpk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pbmpkiv_.Swap(&other->pbmpkiv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulmpklen_, other->ulmpklen_);
  swap(ulmpkivlen_, other->ulmpkivlen_);
}

::google::protobuf::Metadata Req_C_Extend_Reset_OTP::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_Reset_OTP::InitAsDefaultInstance() {
}
class Rsp_C_Extend_Reset_OTP::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_Reset_OTP::Rsp_C_Extend_Reset_OTP()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
}
Rsp_C_Extend_Reset_OTP::Rsp_C_Extend_Reset_OTP(const Rsp_C_Extend_Reset_OTP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
}

void Rsp_C_Extend_Reset_OTP::SharedCtor() {
}

Rsp_C_Extend_Reset_OTP::~Rsp_C_Extend_Reset_OTP() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  SharedDtor();
}

void Rsp_C_Extend_Reset_OTP::SharedDtor() {
}

void Rsp_C_Extend_Reset_OTP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_Reset_OTP& Rsp_C_Extend_Reset_OTP::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_Reset_OTP_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_Reset_OTP::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_Reset_OTP::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_Reset_OTP*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_Reset_OTP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_Reset_OTP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
}

::google::protobuf::uint8* Rsp_C_Extend_Reset_OTP::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  return target;
}

size_t Rsp_C_Extend_Reset_OTP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_Reset_OTP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_Reset_OTP* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_Reset_OTP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_Reset_OTP::MergeFrom(const Rsp_C_Extend_Reset_OTP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Extend_Reset_OTP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_Reset_OTP::CopyFrom(const Rsp_C_Extend_Reset_OTP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_OTP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_Reset_OTP::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_Reset_OTP::Swap(Rsp_C_Extend_Reset_OTP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_Reset_OTP::InternalSwap(Rsp_C_Extend_Reset_OTP* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Extend_Reset_OTP::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_Get_OTP_Unlock_Count::InitAsDefaultInstance() {
}
class Req_C_Extend_Get_OTP_Unlock_Count::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_Get_OTP_Unlock_Count* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulcount(Req_C_Extend_Get_OTP_Unlock_Count* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_Get_OTP_Unlock_Count::kHSessionFieldNumber;
const int Req_C_Extend_Get_OTP_Unlock_Count::kPulCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_Get_OTP_Unlock_Count::Req_C_Extend_Get_OTP_Unlock_Count()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
}
Req_C_Extend_Get_OTP_Unlock_Count::Req_C_Extend_Get_OTP_Unlock_Count(const Req_C_Extend_Get_OTP_Unlock_Count& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulcount_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulcount_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
}

void Req_C_Extend_Get_OTP_Unlock_Count::SharedCtor() {
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulcount_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulcount_));
}

Req_C_Extend_Get_OTP_Unlock_Count::~Req_C_Extend_Get_OTP_Unlock_Count() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  SharedDtor();
}

void Req_C_Extend_Get_OTP_Unlock_Count::SharedDtor() {
}

void Req_C_Extend_Get_OTP_Unlock_Count::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_Get_OTP_Unlock_Count& Req_C_Extend_Get_OTP_Unlock_Count::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_Get_OTP_Unlock_Count_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_Get_OTP_Unlock_Count::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulcount_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_Get_OTP_Unlock_Count::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_Get_OTP_Unlock_Count*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 pulCount = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_Get_OTP_Unlock_Count::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_Get_OTP_Unlock_Count::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional uint32 pulCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
}

::google::protobuf::uint8* Req_C_Extend_Get_OTP_Unlock_Count::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional uint32 pulCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  return target;
}

size_t Req_C_Extend_Get_OTP_Unlock_Count::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 pulCount = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_Get_OTP_Unlock_Count::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_Get_OTP_Unlock_Count* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_Get_OTP_Unlock_Count>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
    MergeFrom(*source);
  }
}

void Req_C_Extend_Get_OTP_Unlock_Count::MergeFrom(const Req_C_Extend_Get_OTP_Unlock_Count& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000002u) {
      pulcount_ = from.pulcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_Get_OTP_Unlock_Count::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_Get_OTP_Unlock_Count::CopyFrom(const Req_C_Extend_Get_OTP_Unlock_Count& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Unlock_Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_Get_OTP_Unlock_Count::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_Extend_Get_OTP_Unlock_Count::Swap(Req_C_Extend_Get_OTP_Unlock_Count* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_Get_OTP_Unlock_Count::InternalSwap(Req_C_Extend_Get_OTP_Unlock_Count* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(hsession_, other->hsession_);
  swap(pulcount_, other->pulcount_);
}

::google::protobuf::Metadata Req_C_Extend_Get_OTP_Unlock_Count::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_Get_OTP_Unlock_Count::InitAsDefaultInstance() {
}
class Rsp_C_Extend_Get_OTP_Unlock_Count::HasBitSetters {
 public:
  static void set_has_pulcount(Rsp_C_Extend_Get_OTP_Unlock_Count* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_Get_OTP_Unlock_Count::kPulCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_Get_OTP_Unlock_Count::Rsp_C_Extend_Get_OTP_Unlock_Count()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
}
Rsp_C_Extend_Get_OTP_Unlock_Count::Rsp_C_Extend_Get_OTP_Unlock_Count(const Rsp_C_Extend_Get_OTP_Unlock_Count& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pulcount_ = from.pulcount_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
}

void Rsp_C_Extend_Get_OTP_Unlock_Count::SharedCtor() {
  pulcount_ = 0u;
}

Rsp_C_Extend_Get_OTP_Unlock_Count::~Rsp_C_Extend_Get_OTP_Unlock_Count() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  SharedDtor();
}

void Rsp_C_Extend_Get_OTP_Unlock_Count::SharedDtor() {
}

void Rsp_C_Extend_Get_OTP_Unlock_Count::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_Get_OTP_Unlock_Count& Rsp_C_Extend_Get_OTP_Unlock_Count::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_Get_OTP_Unlock_Count_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_Get_OTP_Unlock_Count::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pulcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_Get_OTP_Unlock_Count::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_Get_OTP_Unlock_Count*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 pulCount = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_pulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_Get_OTP_Unlock_Count::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pulCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_pulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_Get_OTP_Unlock_Count::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pulCount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
}

::google::protobuf::uint8* Rsp_C_Extend_Get_OTP_Unlock_Count::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pulCount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  return target;
}

size_t Rsp_C_Extend_Get_OTP_Unlock_Count::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 pulCount = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_Get_OTP_Unlock_Count::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_Get_OTP_Unlock_Count* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_Get_OTP_Unlock_Count>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_Get_OTP_Unlock_Count::MergeFrom(const Rsp_C_Extend_Get_OTP_Unlock_Count& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pulcount()) {
    set_pulcount(from.pulcount());
  }
}

void Rsp_C_Extend_Get_OTP_Unlock_Count::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_Get_OTP_Unlock_Count::CopyFrom(const Rsp_C_Extend_Get_OTP_Unlock_Count& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Unlock_Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_Get_OTP_Unlock_Count::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_Get_OTP_Unlock_Count::Swap(Rsp_C_Extend_Get_OTP_Unlock_Count* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_Get_OTP_Unlock_Count::InternalSwap(Rsp_C_Extend_Get_OTP_Unlock_Count* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pulcount_, other->pulcount_);
}

::google::protobuf::Metadata Rsp_C_Extend_Get_OTP_Unlock_Count::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_Get_OTP_Remain_Count::InitAsDefaultInstance() {
}
class Req_C_Extend_Get_OTP_Remain_Count::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_Get_OTP_Remain_Count* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulcount(Req_C_Extend_Get_OTP_Remain_Count* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_Get_OTP_Remain_Count::kHSessionFieldNumber;
const int Req_C_Extend_Get_OTP_Remain_Count::kPulCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_Get_OTP_Remain_Count::Req_C_Extend_Get_OTP_Remain_Count()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
}
Req_C_Extend_Get_OTP_Remain_Count::Req_C_Extend_Get_OTP_Remain_Count(const Req_C_Extend_Get_OTP_Remain_Count& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulcount_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulcount_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
}

void Req_C_Extend_Get_OTP_Remain_Count::SharedCtor() {
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulcount_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulcount_));
}

Req_C_Extend_Get_OTP_Remain_Count::~Req_C_Extend_Get_OTP_Remain_Count() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  SharedDtor();
}

void Req_C_Extend_Get_OTP_Remain_Count::SharedDtor() {
}

void Req_C_Extend_Get_OTP_Remain_Count::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_Get_OTP_Remain_Count& Req_C_Extend_Get_OTP_Remain_Count::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_Get_OTP_Remain_Count_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_Get_OTP_Remain_Count::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulcount_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_Get_OTP_Remain_Count::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_Get_OTP_Remain_Count*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 pulCount = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_Get_OTP_Remain_Count::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_Get_OTP_Remain_Count::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional uint32 pulCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
}

::google::protobuf::uint8* Req_C_Extend_Get_OTP_Remain_Count::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional uint32 pulCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  return target;
}

size_t Req_C_Extend_Get_OTP_Remain_Count::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 pulCount = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_Get_OTP_Remain_Count::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_Get_OTP_Remain_Count* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_Get_OTP_Remain_Count>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
    MergeFrom(*source);
  }
}

void Req_C_Extend_Get_OTP_Remain_Count::MergeFrom(const Req_C_Extend_Get_OTP_Remain_Count& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000002u) {
      pulcount_ = from.pulcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_Get_OTP_Remain_Count::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_Get_OTP_Remain_Count::CopyFrom(const Req_C_Extend_Get_OTP_Remain_Count& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_Get_OTP_Remain_Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_Get_OTP_Remain_Count::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_Extend_Get_OTP_Remain_Count::Swap(Req_C_Extend_Get_OTP_Remain_Count* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_Get_OTP_Remain_Count::InternalSwap(Req_C_Extend_Get_OTP_Remain_Count* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(hsession_, other->hsession_);
  swap(pulcount_, other->pulcount_);
}

::google::protobuf::Metadata Req_C_Extend_Get_OTP_Remain_Count::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_Get_OTP_Remain_Count::InitAsDefaultInstance() {
}
class Rsp_C_Extend_Get_OTP_Remain_Count::HasBitSetters {
 public:
  static void set_has_pulcount(Rsp_C_Extend_Get_OTP_Remain_Count* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_Get_OTP_Remain_Count::kPulCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_Get_OTP_Remain_Count::Rsp_C_Extend_Get_OTP_Remain_Count()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
}
Rsp_C_Extend_Get_OTP_Remain_Count::Rsp_C_Extend_Get_OTP_Remain_Count(const Rsp_C_Extend_Get_OTP_Remain_Count& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pulcount_ = from.pulcount_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
}

void Rsp_C_Extend_Get_OTP_Remain_Count::SharedCtor() {
  pulcount_ = 0u;
}

Rsp_C_Extend_Get_OTP_Remain_Count::~Rsp_C_Extend_Get_OTP_Remain_Count() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  SharedDtor();
}

void Rsp_C_Extend_Get_OTP_Remain_Count::SharedDtor() {
}

void Rsp_C_Extend_Get_OTP_Remain_Count::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_Get_OTP_Remain_Count& Rsp_C_Extend_Get_OTP_Remain_Count::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_Get_OTP_Remain_Count_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_Get_OTP_Remain_Count::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pulcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_Get_OTP_Remain_Count::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_Get_OTP_Remain_Count*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 pulCount = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_pulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_Get_OTP_Remain_Count::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pulCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_pulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_Get_OTP_Remain_Count::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pulCount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
}

::google::protobuf::uint8* Rsp_C_Extend_Get_OTP_Remain_Count::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pulCount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  return target;
}

size_t Rsp_C_Extend_Get_OTP_Remain_Count::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 pulCount = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_Get_OTP_Remain_Count::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_Get_OTP_Remain_Count* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_Get_OTP_Remain_Count>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_Get_OTP_Remain_Count::MergeFrom(const Rsp_C_Extend_Get_OTP_Remain_Count& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pulcount()) {
    set_pulcount(from.pulcount());
  }
}

void Rsp_C_Extend_Get_OTP_Remain_Count::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_Get_OTP_Remain_Count::CopyFrom(const Rsp_C_Extend_Get_OTP_Remain_Count& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_OTP_Remain_Count)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_Get_OTP_Remain_Count::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_Get_OTP_Remain_Count::Swap(Rsp_C_Extend_Get_OTP_Remain_Count* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_Get_OTP_Remain_Count::InternalSwap(Rsp_C_Extend_Get_OTP_Remain_Count* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(pulcount_, other->pulcount_);
}

::google::protobuf::Metadata Rsp_C_Extend_Get_OTP_Remain_Count::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_DeriveSessionKey::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_Extend_DeriveSessionKey_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_Extend_DeriveSessionKey::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_DeriveSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_Extend_DeriveSessionKey* msg);
  static void set_has_pmechanism(Req_C_Extend_DeriveSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_hlocalkey(Req_C_Extend_DeriveSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_hremotekey(Req_C_Extend_DeriveSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_ulattributecount(Req_C_Extend_DeriveSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_phkey(Req_C_Extend_DeriveSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
  static void set_has_pexchangeiv(Req_C_Extend_DeriveSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pexchangeivlen(Req_C_Extend_DeriveSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000080u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_Extend_DeriveSessionKey::HasBitSetters::pmechanism(const Req_C_Extend_DeriveSessionKey* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_DeriveSessionKey::kHSessionFieldNumber;
const int Req_C_Extend_DeriveSessionKey::kPMechanismFieldNumber;
const int Req_C_Extend_DeriveSessionKey::kHLocalKeyFieldNumber;
const int Req_C_Extend_DeriveSessionKey::kHRemoteKeyFieldNumber;
const int Req_C_Extend_DeriveSessionKey::kPTemplateFieldNumber;
const int Req_C_Extend_DeriveSessionKey::kUlAttributeCountFieldNumber;
const int Req_C_Extend_DeriveSessionKey::kPhKeyFieldNumber;
const int Req_C_Extend_DeriveSessionKey::kPExchangeIVFieldNumber;
const int Req_C_Extend_DeriveSessionKey::kPExchangeIVLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_DeriveSessionKey::Req_C_Extend_DeriveSessionKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
}
Req_C_Extend_DeriveSessionKey::Req_C_Extend_DeriveSessionKey(const Req_C_Extend_DeriveSessionKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ptemplate_(from.ptemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pexchangeiv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pexchangeiv()) {
    pexchangeiv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pexchangeiv_);
  }
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pexchangeivlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pexchangeivlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
}

void Req_C_Extend_DeriveSessionKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_DeriveSessionKey_pkcs11_2eproto.base);
  pexchangeiv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pexchangeivlen_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(pexchangeivlen_));
}

Req_C_Extend_DeriveSessionKey::~Req_C_Extend_DeriveSessionKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  SharedDtor();
}

void Req_C_Extend_DeriveSessionKey::SharedDtor() {
  pexchangeiv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_Extend_DeriveSessionKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_DeriveSessionKey& Req_C_Extend_DeriveSessionKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_DeriveSessionKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_DeriveSessionKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptemplate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pexchangeiv_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(pmechanism_ != nullptr);
      pmechanism_->Clear();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pexchangeivlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pexchangeivlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_DeriveSessionKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_DeriveSessionKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint32 hLocalKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_hlocalkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 hRemoteKey = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_hremotekey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ptemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // required uint32 ulAttributeCount = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_ulattributecount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional uint32 phKey = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_phkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pExchangeIV = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pexchangeiv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pExchangeIVLen = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_pexchangeivlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_DeriveSessionKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hLocalKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_hlocalkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hlocalkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hRemoteKey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_hremotekey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hremotekey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ptemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulAttributeCount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_ulattributecount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulattributecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 phKey = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_phkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pExchangeIV = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pexchangeiv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pExchangeIVLen = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          HasBitSetters::set_has_pexchangeivlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pexchangeivlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_DeriveSessionKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // required uint32 hLocalKey = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hlocalkey(), output);
  }

  // required uint32 hRemoteKey = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->hremotekey(), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->ptemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulAttributeCount = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ulattributecount(), output);
  }

  // optional uint32 phKey = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->phkey(), output);
  }

  // optional bytes pExchangeIV = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->pexchangeiv(), output);
  }

  // optional uint32 pExchangeIVLen = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->pexchangeivlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
}

::google::protobuf::uint8* Req_C_Extend_DeriveSessionKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // required uint32 hLocalKey = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hlocalkey(), target);
  }

  // required uint32 hRemoteKey = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->hremotekey(), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->ptemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulAttributeCount = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ulattributecount(), target);
  }

  // optional uint32 phKey = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->phkey(), target);
  }

  // optional bytes pExchangeIV = 8;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->pexchangeiv(), target);
  }

  // optional uint32 pExchangeIVLen = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->pexchangeivlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  return target;
}

size_t Req_C_Extend_DeriveSessionKey::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hlocalkey()) {
    // required uint32 hLocalKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hlocalkey());
  }

  if (has_hremotekey()) {
    // required uint32 hRemoteKey = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hremotekey());
  }

  if (has_ulattributecount()) {
    // required uint32 ulAttributeCount = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulattributecount());
  }

  return total_size;
}
size_t Req_C_Extend_DeriveSessionKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003c) ^ 0x0000003c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hLocalKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hlocalkey());

    // required uint32 hRemoteKey = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hremotekey());

    // required uint32 ulAttributeCount = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulattributecount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->ptemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ptemplate(static_cast<int>(i)));
    }
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pExchangeIV = 8;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pexchangeiv());
    }

    // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pmechanism_);
    }

  }
  if (cached_has_bits & 0x000000c0u) {
    // optional uint32 phKey = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->phkey());
    }

    // optional uint32 pExchangeIVLen = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pexchangeivlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_DeriveSessionKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_DeriveSessionKey* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_DeriveSessionKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
    MergeFrom(*source);
  }
}

void Req_C_Extend_DeriveSessionKey::MergeFrom(const Req_C_Extend_DeriveSessionKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ptemplate_.MergeFrom(from.ptemplate_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pexchangeiv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pexchangeiv_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      hlocalkey_ = from.hlocalkey_;
    }
    if (cached_has_bits & 0x00000010u) {
      hremotekey_ = from.hremotekey_;
    }
    if (cached_has_bits & 0x00000020u) {
      ulattributecount_ = from.ulattributecount_;
    }
    if (cached_has_bits & 0x00000040u) {
      phkey_ = from.phkey_;
    }
    if (cached_has_bits & 0x00000080u) {
      pexchangeivlen_ = from.pexchangeivlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_DeriveSessionKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_DeriveSessionKey::CopyFrom(const Req_C_Extend_DeriveSessionKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_DeriveSessionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_DeriveSessionKey::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003c) != 0x0000003c) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ptemplate())) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_Extend_DeriveSessionKey::Swap(Req_C_Extend_DeriveSessionKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_DeriveSessionKey::InternalSwap(Req_C_Extend_DeriveSessionKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ptemplate_)->InternalSwap(CastToBase(&other->ptemplate_));
  pexchangeiv_.Swap(&other->pexchangeiv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(hlocalkey_, other->hlocalkey_);
  swap(hremotekey_, other->hremotekey_);
  swap(ulattributecount_, other->ulattributecount_);
  swap(phkey_, other->phkey_);
  swap(pexchangeivlen_, other->pexchangeivlen_);
}

::google::protobuf::Metadata Req_C_Extend_DeriveSessionKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_DeriveSessionKey::InitAsDefaultInstance() {
}
class Rsp_C_Extend_DeriveSessionKey::HasBitSetters {
 public:
  static void set_has_phkey(Rsp_C_Extend_DeriveSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pexchangeiv(Rsp_C_Extend_DeriveSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pexchangeivlen(Rsp_C_Extend_DeriveSessionKey* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_DeriveSessionKey::kPhKeyFieldNumber;
const int Rsp_C_Extend_DeriveSessionKey::kPExchangeIVFieldNumber;
const int Rsp_C_Extend_DeriveSessionKey::kPExchangeIVLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_DeriveSessionKey::Rsp_C_Extend_DeriveSessionKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
}
Rsp_C_Extend_DeriveSessionKey::Rsp_C_Extend_DeriveSessionKey(const Rsp_C_Extend_DeriveSessionKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pexchangeiv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pexchangeiv()) {
    pexchangeiv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pexchangeiv_);
  }
  ::memcpy(&phkey_, &from.phkey_,
    static_cast<size_t>(reinterpret_cast<char*>(&pexchangeivlen_) -
    reinterpret_cast<char*>(&phkey_)) + sizeof(pexchangeivlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
}

void Rsp_C_Extend_DeriveSessionKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Extend_DeriveSessionKey_pkcs11_2eproto.base);
  pexchangeiv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&phkey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pexchangeivlen_) -
      reinterpret_cast<char*>(&phkey_)) + sizeof(pexchangeivlen_));
}

Rsp_C_Extend_DeriveSessionKey::~Rsp_C_Extend_DeriveSessionKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  SharedDtor();
}

void Rsp_C_Extend_DeriveSessionKey::SharedDtor() {
  pexchangeiv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Extend_DeriveSessionKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_DeriveSessionKey& Rsp_C_Extend_DeriveSessionKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_DeriveSessionKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_DeriveSessionKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pexchangeiv_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&phkey_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pexchangeivlen_) -
        reinterpret_cast<char*>(&phkey_)) + sizeof(pexchangeivlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_DeriveSessionKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_DeriveSessionKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional uint32 phKey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_phkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pExchangeIV = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pexchangeiv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pExchangeIVLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_pexchangeivlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_DeriveSessionKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 phKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_phkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pExchangeIV = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pexchangeiv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pExchangeIVLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_pexchangeivlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pexchangeivlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_DeriveSessionKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phKey = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->phkey(), output);
  }

  // optional bytes pExchangeIV = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pexchangeiv(), output);
  }

  // optional uint32 pExchangeIVLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pexchangeivlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
}

::google::protobuf::uint8* Rsp_C_Extend_DeriveSessionKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 phKey = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->phkey(), target);
  }

  // optional bytes pExchangeIV = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pexchangeiv(), target);
  }

  // optional uint32 pExchangeIVLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pexchangeivlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  return target;
}

size_t Rsp_C_Extend_DeriveSessionKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes pExchangeIV = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pexchangeiv());
    }

    // optional uint32 phKey = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->phkey());
    }

    // optional uint32 pExchangeIVLen = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pexchangeivlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_DeriveSessionKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_DeriveSessionKey* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_DeriveSessionKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_DeriveSessionKey::MergeFrom(const Rsp_C_Extend_DeriveSessionKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pexchangeiv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pexchangeiv_);
    }
    if (cached_has_bits & 0x00000002u) {
      phkey_ = from.phkey_;
    }
    if (cached_has_bits & 0x00000004u) {
      pexchangeivlen_ = from.pexchangeivlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Extend_DeriveSessionKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_DeriveSessionKey::CopyFrom(const Rsp_C_Extend_DeriveSessionKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_DeriveSessionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_DeriveSessionKey::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_DeriveSessionKey::Swap(Rsp_C_Extend_DeriveSessionKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_DeriveSessionKey::InternalSwap(Rsp_C_Extend_DeriveSessionKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pexchangeiv_.Swap(&other->pexchangeiv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(phkey_, other->phkey_);
  swap(pexchangeivlen_, other->pexchangeivlen_);
}

::google::protobuf::Metadata Rsp_C_Extend_DeriveSessionKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_EncryptInit::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_Extend_EncryptInit_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_Extend_EncryptInit::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_EncryptInit* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_Extend_EncryptInit* msg);
  static void set_has_pmechanism(Req_C_Extend_EncryptInit* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulattributecount(Req_C_Extend_EncryptInit* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_Extend_EncryptInit::HasBitSetters::pmechanism(const Req_C_Extend_EncryptInit* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_EncryptInit::kHSessionFieldNumber;
const int Req_C_Extend_EncryptInit::kPMechanismFieldNumber;
const int Req_C_Extend_EncryptInit::kPTemplateFieldNumber;
const int Req_C_Extend_EncryptInit::kUlAttributeCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_EncryptInit::Req_C_Extend_EncryptInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_EncryptInit)
}
Req_C_Extend_EncryptInit::Req_C_Extend_EncryptInit(const Req_C_Extend_EncryptInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ptemplate_(from.ptemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulattributecount_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulattributecount_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_EncryptInit)
}

void Req_C_Extend_EncryptInit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_EncryptInit_pkcs11_2eproto.base);
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulattributecount_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(ulattributecount_));
}

Req_C_Extend_EncryptInit::~Req_C_Extend_EncryptInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  SharedDtor();
}

void Req_C_Extend_EncryptInit::SharedDtor() {
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_Extend_EncryptInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_EncryptInit& Req_C_Extend_EncryptInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_EncryptInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_EncryptInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptemplate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pmechanism_ != nullptr);
    pmechanism_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulattributecount_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulattributecount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_EncryptInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_EncryptInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ptemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // required uint32 ulAttributeCount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_ulattributecount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_EncryptInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ptemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulAttributeCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_ulattributecount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulattributecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_EncryptInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->ptemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulAttributeCount = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ulattributecount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_EncryptInit)
}

::google::protobuf::uint8* Req_C_Extend_EncryptInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->ptemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulAttributeCount = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ulattributecount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  return target;
}

size_t Req_C_Extend_EncryptInit::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulattributecount()) {
    // required uint32 ulAttributeCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulattributecount());
  }

  return total_size;
}
size_t Req_C_Extend_EncryptInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulAttributeCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulattributecount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->ptemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ptemplate(static_cast<int>(i)));
    }
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmechanism_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_EncryptInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_EncryptInit* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_EncryptInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_EncryptInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_EncryptInit)
    MergeFrom(*source);
  }
}

void Req_C_Extend_EncryptInit::MergeFrom(const Req_C_Extend_EncryptInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ptemplate_.MergeFrom(from.ptemplate_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulattributecount_ = from.ulattributecount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_EncryptInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_EncryptInit::CopyFrom(const Req_C_Extend_EncryptInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_EncryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_EncryptInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ptemplate())) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_Extend_EncryptInit::Swap(Req_C_Extend_EncryptInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_EncryptInit::InternalSwap(Req_C_Extend_EncryptInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ptemplate_)->InternalSwap(CastToBase(&other->ptemplate_));
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(ulattributecount_, other->ulattributecount_);
}

::google::protobuf::Metadata Req_C_Extend_EncryptInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_EncryptInit::InitAsDefaultInstance() {
}
class Rsp_C_Extend_EncryptInit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_EncryptInit::Rsp_C_Extend_EncryptInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
}
Rsp_C_Extend_EncryptInit::Rsp_C_Extend_EncryptInit(const Rsp_C_Extend_EncryptInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
}

void Rsp_C_Extend_EncryptInit::SharedCtor() {
}

Rsp_C_Extend_EncryptInit::~Rsp_C_Extend_EncryptInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  SharedDtor();
}

void Rsp_C_Extend_EncryptInit::SharedDtor() {
}

void Rsp_C_Extend_EncryptInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_EncryptInit& Rsp_C_Extend_EncryptInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_EncryptInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_EncryptInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_EncryptInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_EncryptInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_EncryptInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_EncryptInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
}

::google::protobuf::uint8* Rsp_C_Extend_EncryptInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  return target;
}

size_t Rsp_C_Extend_EncryptInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_EncryptInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_EncryptInit* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_EncryptInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_EncryptInit::MergeFrom(const Rsp_C_Extend_EncryptInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Extend_EncryptInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_EncryptInit::CopyFrom(const Rsp_C_Extend_EncryptInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_EncryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_EncryptInit::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_EncryptInit::Swap(Rsp_C_Extend_EncryptInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_EncryptInit::InternalSwap(Rsp_C_Extend_EncryptInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Extend_EncryptInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_DecryptInit::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_Extend_DecryptInit_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_Extend_DecryptInit::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_DecryptInit* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_Extend_DecryptInit* msg);
  static void set_has_pmechanism(Req_C_Extend_DecryptInit* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulattributecount(Req_C_Extend_DecryptInit* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_Extend_DecryptInit::HasBitSetters::pmechanism(const Req_C_Extend_DecryptInit* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_DecryptInit::kHSessionFieldNumber;
const int Req_C_Extend_DecryptInit::kPMechanismFieldNumber;
const int Req_C_Extend_DecryptInit::kPTemplateFieldNumber;
const int Req_C_Extend_DecryptInit::kUlAttributeCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_DecryptInit::Req_C_Extend_DecryptInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_DecryptInit)
}
Req_C_Extend_DecryptInit::Req_C_Extend_DecryptInit(const Req_C_Extend_DecryptInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ptemplate_(from.ptemplate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulattributecount_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulattributecount_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_DecryptInit)
}

void Req_C_Extend_DecryptInit::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_DecryptInit_pkcs11_2eproto.base);
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulattributecount_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(ulattributecount_));
}

Req_C_Extend_DecryptInit::~Req_C_Extend_DecryptInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  SharedDtor();
}

void Req_C_Extend_DecryptInit::SharedDtor() {
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_Extend_DecryptInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_DecryptInit& Req_C_Extend_DecryptInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_DecryptInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_DecryptInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ptemplate_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pmechanism_ != nullptr);
    pmechanism_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulattributecount_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulattributecount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_DecryptInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_DecryptInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::com::weston::pkcs11::PRO_Attribute::_InternalParse;
          object = msg->add_ptemplate();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // required uint32 ulAttributeCount = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_ulattributecount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_DecryptInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ptemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulAttributeCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_ulattributecount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulattributecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_DecryptInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->ptemplate(static_cast<int>(i)),
      output);
  }

  // required uint32 ulAttributeCount = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ulattributecount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_DecryptInit)
}

::google::protobuf::uint8* Req_C_Extend_DecryptInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ptemplate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->ptemplate(static_cast<int>(i)), target);
  }

  // required uint32 ulAttributeCount = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ulattributecount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  return target;
}

size_t Req_C_Extend_DecryptInit::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulattributecount()) {
    // required uint32 ulAttributeCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulattributecount());
  }

  return total_size;
}
size_t Req_C_Extend_DecryptInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulAttributeCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulattributecount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.weston.pkcs11.PRO_Attribute pTemplate = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->ptemplate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ptemplate(static_cast<int>(i)));
    }
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pmechanism_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_DecryptInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_DecryptInit* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_DecryptInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_DecryptInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_DecryptInit)
    MergeFrom(*source);
  }
}

void Req_C_Extend_DecryptInit::MergeFrom(const Req_C_Extend_DecryptInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ptemplate_.MergeFrom(from.ptemplate_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      ulattributecount_ = from.ulattributecount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_DecryptInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_DecryptInit::CopyFrom(const Req_C_Extend_DecryptInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_DecryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_DecryptInit::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ptemplate())) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_Extend_DecryptInit::Swap(Req_C_Extend_DecryptInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_DecryptInit::InternalSwap(Req_C_Extend_DecryptInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&ptemplate_)->InternalSwap(CastToBase(&other->ptemplate_));
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(ulattributecount_, other->ulattributecount_);
}

::google::protobuf::Metadata Req_C_Extend_DecryptInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_DecryptInit::InitAsDefaultInstance() {
}
class Rsp_C_Extend_DecryptInit::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_DecryptInit::Rsp_C_Extend_DecryptInit()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
}
Rsp_C_Extend_DecryptInit::Rsp_C_Extend_DecryptInit(const Rsp_C_Extend_DecryptInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
}

void Rsp_C_Extend_DecryptInit::SharedCtor() {
}

Rsp_C_Extend_DecryptInit::~Rsp_C_Extend_DecryptInit() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  SharedDtor();
}

void Rsp_C_Extend_DecryptInit::SharedDtor() {
}

void Rsp_C_Extend_DecryptInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_DecryptInit& Rsp_C_Extend_DecryptInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_DecryptInit_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_DecryptInit::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_DecryptInit::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_DecryptInit*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_DecryptInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_DecryptInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
}

::google::protobuf::uint8* Rsp_C_Extend_DecryptInit::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  return target;
}

size_t Rsp_C_Extend_DecryptInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_DecryptInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_DecryptInit* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_DecryptInit>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_DecryptInit::MergeFrom(const Rsp_C_Extend_DecryptInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Extend_DecryptInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_DecryptInit::CopyFrom(const Rsp_C_Extend_DecryptInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_DecryptInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_DecryptInit::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_DecryptInit::Swap(Rsp_C_Extend_DecryptInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_DecryptInit::InternalSwap(Rsp_C_Extend_DecryptInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Extend_DecryptInit::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_EncryptUpdate::InitAsDefaultInstance() {
}
class Req_C_Extend_EncryptUpdate::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_piv(Req_C_Extend_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulivlen(Req_C_Extend_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_ppart(Req_C_Extend_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ulpartlen(Req_C_Extend_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_pencryptedpart(Req_C_Extend_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pulencryptedpartlen(Req_C_Extend_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_EncryptUpdate::kHSessionFieldNumber;
const int Req_C_Extend_EncryptUpdate::kPIvFieldNumber;
const int Req_C_Extend_EncryptUpdate::kUlIvLenFieldNumber;
const int Req_C_Extend_EncryptUpdate::kPPartFieldNumber;
const int Req_C_Extend_EncryptUpdate::kUlPartLenFieldNumber;
const int Req_C_Extend_EncryptUpdate::kPEncryptedPartFieldNumber;
const int Req_C_Extend_EncryptUpdate::kPulEncryptedPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_EncryptUpdate::Req_C_Extend_EncryptUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
}
Req_C_Extend_EncryptUpdate::Req_C_Extend_EncryptUpdate(const Req_C_Extend_EncryptUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  piv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_piv()) {
    piv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.piv_);
  }
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencryptedpart()) {
    pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulencryptedpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulencryptedpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
}

void Req_C_Extend_EncryptUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_EncryptUpdate_pkcs11_2eproto.base);
  piv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulencryptedpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulencryptedpartlen_));
}

Req_C_Extend_EncryptUpdate::~Req_C_Extend_EncryptUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  SharedDtor();
}

void Req_C_Extend_EncryptUpdate::SharedDtor() {
  piv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_EncryptUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_EncryptUpdate& Req_C_Extend_EncryptUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_EncryptUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_EncryptUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      piv_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      ppart_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      pencryptedpart_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000078u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulencryptedpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulencryptedpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_EncryptUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_EncryptUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pIv = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_piv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulIvLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulivlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPart = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulPartLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pEncryptedPart = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulEncryptedPartLen = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_pulencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_EncryptUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pIv = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_piv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulIvLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulivlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulivlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPart = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulPartLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pEncryptedPart = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulEncryptedPartLen = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_pulencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_EncryptUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pIv = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->piv(), output);
  }

  // required uint32 ulIvLen = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulivlen(), output);
  }

  // optional bytes pPart = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->ppart(), output);
  }

  // required uint32 ulPartLen = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ulpartlen(), output);
  }

  // optional bytes pEncryptedPart = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->pencryptedpart(), output);
  }

  // optional uint32 pulEncryptedPartLen = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pulencryptedpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
}

::google::protobuf::uint8* Req_C_Extend_EncryptUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pIv = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->piv(), target);
  }

  // required uint32 ulIvLen = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulivlen(), target);
  }

  // optional bytes pPart = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->ppart(), target);
  }

  // required uint32 ulPartLen = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ulpartlen(), target);
  }

  // optional bytes pEncryptedPart = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->pencryptedpart(), target);
  }

  // optional uint32 pulEncryptedPartLen = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pulencryptedpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  return target;
}

size_t Req_C_Extend_EncryptUpdate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulivlen()) {
    // required uint32 ulIvLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulivlen());
  }

  if (has_ulpartlen()) {
    // required uint32 ulPartLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());
  }

  return total_size;
}
size_t Req_C_Extend_EncryptUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000038) ^ 0x00000038) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulIvLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulivlen());

    // required uint32 ulPartLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulpartlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes pIv = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->piv());
    }

    // optional bytes pPart = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppart());
    }

    // optional bytes pEncryptedPart = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencryptedpart());
    }

  }
  // optional uint32 pulEncryptedPartLen = 7;
  if (cached_has_bits & 0x00000040u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulencryptedpartlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_EncryptUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_EncryptUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_EncryptUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
    MergeFrom(*source);
  }
}

void Req_C_Extend_EncryptUpdate::MergeFrom(const Req_C_Extend_EncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      piv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.piv_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
    }
    if (cached_has_bits & 0x00000008u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000010u) {
      ulivlen_ = from.ulivlen_;
    }
    if (cached_has_bits & 0x00000020u) {
      ulpartlen_ = from.ulpartlen_;
    }
    if (cached_has_bits & 0x00000040u) {
      pulencryptedpartlen_ = from.pulencryptedpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_EncryptUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_EncryptUpdate::CopyFrom(const Req_C_Extend_EncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_EncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_EncryptUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000038) != 0x00000038) return false;
  return true;
}

void Req_C_Extend_EncryptUpdate::Swap(Req_C_Extend_EncryptUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_EncryptUpdate::InternalSwap(Req_C_Extend_EncryptUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  piv_.Swap(&other->piv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pencryptedpart_.Swap(&other->pencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulivlen_, other->ulivlen_);
  swap(ulpartlen_, other->ulpartlen_);
  swap(pulencryptedpartlen_, other->pulencryptedpartlen_);
}

::google::protobuf::Metadata Req_C_Extend_EncryptUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_EncryptUpdate::InitAsDefaultInstance() {
}
class Rsp_C_Extend_EncryptUpdate::HasBitSetters {
 public:
  static void set_has_pencryptedpart(Rsp_C_Extend_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulencryptedpartlen(Rsp_C_Extend_EncryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_EncryptUpdate::kPEncryptedPartFieldNumber;
const int Rsp_C_Extend_EncryptUpdate::kPulEncryptedPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_EncryptUpdate::Rsp_C_Extend_EncryptUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
}
Rsp_C_Extend_EncryptUpdate::Rsp_C_Extend_EncryptUpdate(const Rsp_C_Extend_EncryptUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencryptedpart()) {
    pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
  }
  pulencryptedpartlen_ = from.pulencryptedpartlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
}

void Rsp_C_Extend_EncryptUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Extend_EncryptUpdate_pkcs11_2eproto.base);
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulencryptedpartlen_ = 0u;
}

Rsp_C_Extend_EncryptUpdate::~Rsp_C_Extend_EncryptUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  SharedDtor();
}

void Rsp_C_Extend_EncryptUpdate::SharedDtor() {
  pencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Extend_EncryptUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_EncryptUpdate& Rsp_C_Extend_EncryptUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_EncryptUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_EncryptUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pencryptedpart_.ClearNonDefaultToEmptyNoArena();
  }
  pulencryptedpartlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_EncryptUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_EncryptUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pEncryptedPart = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulEncryptedPartLen = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_pulencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_EncryptUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pEncryptedPart = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulEncryptedPartLen = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_pulencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_EncryptUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pEncryptedPart = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->pencryptedpart(), output);
  }

  // optional uint32 pulEncryptedPartLen = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pulencryptedpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
}

::google::protobuf::uint8* Rsp_C_Extend_EncryptUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pEncryptedPart = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->pencryptedpart(), target);
  }

  // optional uint32 pulEncryptedPartLen = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pulencryptedpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  return target;
}

size_t Rsp_C_Extend_EncryptUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pEncryptedPart = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencryptedpart());
    }

    // optional uint32 pulEncryptedPartLen = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulencryptedpartlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_EncryptUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_EncryptUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_EncryptUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_EncryptUpdate::MergeFrom(const Rsp_C_Extend_EncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulencryptedpartlen_ = from.pulencryptedpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Extend_EncryptUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_EncryptUpdate::CopyFrom(const Rsp_C_Extend_EncryptUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_EncryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_EncryptUpdate::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_EncryptUpdate::Swap(Rsp_C_Extend_EncryptUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_EncryptUpdate::InternalSwap(Rsp_C_Extend_EncryptUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pencryptedpart_.Swap(&other->pencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulencryptedpartlen_, other->pulencryptedpartlen_);
}

::google::protobuf::Metadata Rsp_C_Extend_EncryptUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_DecryptUpdate::InitAsDefaultInstance() {
}
class Req_C_Extend_DecryptUpdate::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_piv(Req_C_Extend_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulivlen(Req_C_Extend_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_pencryptedpart(Req_C_Extend_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ulencryptedpartlen(Req_C_Extend_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
  static void set_has_ppart(Req_C_Extend_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pulpartlen(Req_C_Extend_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000040u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_DecryptUpdate::kHSessionFieldNumber;
const int Req_C_Extend_DecryptUpdate::kPIvFieldNumber;
const int Req_C_Extend_DecryptUpdate::kUlIvLenFieldNumber;
const int Req_C_Extend_DecryptUpdate::kPEncryptedPartFieldNumber;
const int Req_C_Extend_DecryptUpdate::kUlEncryptedPartLenFieldNumber;
const int Req_C_Extend_DecryptUpdate::kPPartFieldNumber;
const int Req_C_Extend_DecryptUpdate::kPulPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_DecryptUpdate::Req_C_Extend_DecryptUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
}
Req_C_Extend_DecryptUpdate::Req_C_Extend_DecryptUpdate(const Req_C_Extend_DecryptUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  piv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_piv()) {
    piv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.piv_);
  }
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pencryptedpart()) {
    pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
  }
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
}

void Req_C_Extend_DecryptUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_DecryptUpdate_pkcs11_2eproto.base);
  piv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulpartlen_));
}

Req_C_Extend_DecryptUpdate::~Req_C_Extend_DecryptUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  SharedDtor();
}

void Req_C_Extend_DecryptUpdate::SharedDtor() {
  piv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_DecryptUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_DecryptUpdate& Req_C_Extend_DecryptUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_DecryptUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_DecryptUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      piv_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pencryptedpart_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      ppart_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x00000078u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_DecryptUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_DecryptUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pIv = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_piv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulIvLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulivlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pEncryptedPart = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulEncryptedPartLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ulencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pPart = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulPartLen = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_pulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_DecryptUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pIv = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_piv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulIvLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulivlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulivlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pEncryptedPart = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulEncryptedPartLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ulencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pPart = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulPartLen = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_pulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_DecryptUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pIv = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->piv(), output);
  }

  // required uint32 ulIvLen = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulivlen(), output);
  }

  // optional bytes pEncryptedPart = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pencryptedpart(), output);
  }

  // required uint32 ulEncryptedPartLen = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ulencryptedpartlen(), output);
  }

  // optional bytes pPart = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->ppart(), output);
  }

  // optional uint32 pulPartLen = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pulpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
}

::google::protobuf::uint8* Req_C_Extend_DecryptUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pIv = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->piv(), target);
  }

  // required uint32 ulIvLen = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulivlen(), target);
  }

  // optional bytes pEncryptedPart = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pencryptedpart(), target);
  }

  // required uint32 ulEncryptedPartLen = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ulencryptedpartlen(), target);
  }

  // optional bytes pPart = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->ppart(), target);
  }

  // optional uint32 pulPartLen = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pulpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  return target;
}

size_t Req_C_Extend_DecryptUpdate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulivlen()) {
    // required uint32 ulIvLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulivlen());
  }

  if (has_ulencryptedpartlen()) {
    // required uint32 ulEncryptedPartLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulencryptedpartlen());
  }

  return total_size;
}
size_t Req_C_Extend_DecryptUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000038) ^ 0x00000038) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulIvLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulivlen());

    // required uint32 ulEncryptedPartLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulencryptedpartlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes pIv = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->piv());
    }

    // optional bytes pEncryptedPart = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pencryptedpart());
    }

    // optional bytes pPart = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppart());
    }

  }
  // optional uint32 pulPartLen = 7;
  if (cached_has_bits & 0x00000040u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulpartlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_DecryptUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_DecryptUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_DecryptUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
    MergeFrom(*source);
  }
}

void Req_C_Extend_DecryptUpdate::MergeFrom(const Req_C_Extend_DecryptUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      piv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.piv_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pencryptedpart_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000008u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000010u) {
      ulivlen_ = from.ulivlen_;
    }
    if (cached_has_bits & 0x00000020u) {
      ulencryptedpartlen_ = from.ulencryptedpartlen_;
    }
    if (cached_has_bits & 0x00000040u) {
      pulpartlen_ = from.pulpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_DecryptUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_DecryptUpdate::CopyFrom(const Req_C_Extend_DecryptUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_DecryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_DecryptUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000038) != 0x00000038) return false;
  return true;
}

void Req_C_Extend_DecryptUpdate::Swap(Req_C_Extend_DecryptUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_DecryptUpdate::InternalSwap(Req_C_Extend_DecryptUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  piv_.Swap(&other->piv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pencryptedpart_.Swap(&other->pencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulivlen_, other->ulivlen_);
  swap(ulencryptedpartlen_, other->ulencryptedpartlen_);
  swap(pulpartlen_, other->pulpartlen_);
}

::google::protobuf::Metadata Req_C_Extend_DecryptUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_DecryptUpdate::InitAsDefaultInstance() {
}
class Rsp_C_Extend_DecryptUpdate::HasBitSetters {
 public:
  static void set_has_ppart(Rsp_C_Extend_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulpartlen(Rsp_C_Extend_DecryptUpdate* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_DecryptUpdate::kPPartFieldNumber;
const int Rsp_C_Extend_DecryptUpdate::kPulPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_DecryptUpdate::Rsp_C_Extend_DecryptUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
}
Rsp_C_Extend_DecryptUpdate::Rsp_C_Extend_DecryptUpdate(const Rsp_C_Extend_DecryptUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ppart()) {
    ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
  }
  pulpartlen_ = from.pulpartlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
}

void Rsp_C_Extend_DecryptUpdate::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Extend_DecryptUpdate_pkcs11_2eproto.base);
  ppart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulpartlen_ = 0u;
}

Rsp_C_Extend_DecryptUpdate::~Rsp_C_Extend_DecryptUpdate() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  SharedDtor();
}

void Rsp_C_Extend_DecryptUpdate::SharedDtor() {
  ppart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Extend_DecryptUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_DecryptUpdate& Rsp_C_Extend_DecryptUpdate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_DecryptUpdate_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_DecryptUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ppart_.ClearNonDefaultToEmptyNoArena();
  }
  pulpartlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_DecryptUpdate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_DecryptUpdate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pPart = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_ppart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulPartLen = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_pulpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_DecryptUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pPart = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ppart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulPartLen = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_pulpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_DecryptUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pPart = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->ppart(), output);
  }

  // optional uint32 pulPartLen = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pulpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
}

::google::protobuf::uint8* Rsp_C_Extend_DecryptUpdate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pPart = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->ppart(), target);
  }

  // optional uint32 pulPartLen = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pulpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  return target;
}

size_t Rsp_C_Extend_DecryptUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pPart = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ppart());
    }

    // optional uint32 pulPartLen = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulpartlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_DecryptUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_DecryptUpdate* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_DecryptUpdate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_DecryptUpdate::MergeFrom(const Rsp_C_Extend_DecryptUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      ppart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ppart_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulpartlen_ = from.pulpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Extend_DecryptUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_DecryptUpdate::CopyFrom(const Rsp_C_Extend_DecryptUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_DecryptUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_DecryptUpdate::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_DecryptUpdate::Swap(Rsp_C_Extend_DecryptUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_DecryptUpdate::InternalSwap(Rsp_C_Extend_DecryptUpdate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ppart_.Swap(&other->ppart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulpartlen_, other->pulpartlen_);
}

::google::protobuf::Metadata Rsp_C_Extend_DecryptUpdate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_EncryptFinalize::InitAsDefaultInstance() {
}
class Req_C_Extend_EncryptFinalize::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_EncryptFinalize* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_plastencryptedpart(Req_C_Extend_EncryptFinalize* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pullastencryptedpartlen(Req_C_Extend_EncryptFinalize* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_EncryptFinalize::kHSessionFieldNumber;
const int Req_C_Extend_EncryptFinalize::kPLastEncryptedPartFieldNumber;
const int Req_C_Extend_EncryptFinalize::kPulLastEncryptedPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_EncryptFinalize::Req_C_Extend_EncryptFinalize()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
}
Req_C_Extend_EncryptFinalize::Req_C_Extend_EncryptFinalize(const Req_C_Extend_EncryptFinalize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plastencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plastencryptedpart()) {
    plastencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastencryptedpart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pullastencryptedpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pullastencryptedpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
}

void Req_C_Extend_EncryptFinalize::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_EncryptFinalize_pkcs11_2eproto.base);
  plastencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pullastencryptedpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pullastencryptedpartlen_));
}

Req_C_Extend_EncryptFinalize::~Req_C_Extend_EncryptFinalize() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  SharedDtor();
}

void Req_C_Extend_EncryptFinalize::SharedDtor() {
  plastencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_EncryptFinalize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_EncryptFinalize& Req_C_Extend_EncryptFinalize::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_EncryptFinalize_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_EncryptFinalize::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    plastencryptedpart_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pullastencryptedpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pullastencryptedpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_EncryptFinalize::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_EncryptFinalize*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pLastEncryptedPart = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plastencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulLastEncryptedPartLen = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_pullastencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_EncryptFinalize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pLastEncryptedPart = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plastencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulLastEncryptedPartLen = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_pullastencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullastencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_EncryptFinalize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pLastEncryptedPart = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->plastencryptedpart(), output);
  }

  // optional uint32 pulLastEncryptedPartLen = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pullastencryptedpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
}

::google::protobuf::uint8* Req_C_Extend_EncryptFinalize::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pLastEncryptedPart = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->plastencryptedpart(), target);
  }

  // optional uint32 pulLastEncryptedPartLen = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pullastencryptedpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  return target;
}

size_t Req_C_Extend_EncryptFinalize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pLastEncryptedPart = 6;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plastencryptedpart());
  }

  // optional uint32 pulLastEncryptedPartLen = 7;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pullastencryptedpartlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_EncryptFinalize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_EncryptFinalize* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_EncryptFinalize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
    MergeFrom(*source);
  }
}

void Req_C_Extend_EncryptFinalize::MergeFrom(const Req_C_Extend_EncryptFinalize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      plastencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastencryptedpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      pullastencryptedpartlen_ = from.pullastencryptedpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_EncryptFinalize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_EncryptFinalize::CopyFrom(const Req_C_Extend_EncryptFinalize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_EncryptFinalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_EncryptFinalize::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Req_C_Extend_EncryptFinalize::Swap(Req_C_Extend_EncryptFinalize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_EncryptFinalize::InternalSwap(Req_C_Extend_EncryptFinalize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  plastencryptedpart_.Swap(&other->plastencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(pullastencryptedpartlen_, other->pullastencryptedpartlen_);
}

::google::protobuf::Metadata Req_C_Extend_EncryptFinalize::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_EncryptFinalize::InitAsDefaultInstance() {
}
class Rsp_C_Extend_EncryptFinalize::HasBitSetters {
 public:
  static void set_has_plastencryptedpart(Rsp_C_Extend_EncryptFinalize* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pullastencryptedpartlen(Rsp_C_Extend_EncryptFinalize* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_EncryptFinalize::kPLastEncryptedPartFieldNumber;
const int Rsp_C_Extend_EncryptFinalize::kPulLastEncryptedPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_EncryptFinalize::Rsp_C_Extend_EncryptFinalize()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
}
Rsp_C_Extend_EncryptFinalize::Rsp_C_Extend_EncryptFinalize(const Rsp_C_Extend_EncryptFinalize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plastencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plastencryptedpart()) {
    plastencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastencryptedpart_);
  }
  pullastencryptedpartlen_ = from.pullastencryptedpartlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
}

void Rsp_C_Extend_EncryptFinalize::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Extend_EncryptFinalize_pkcs11_2eproto.base);
  plastencryptedpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pullastencryptedpartlen_ = 0u;
}

Rsp_C_Extend_EncryptFinalize::~Rsp_C_Extend_EncryptFinalize() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  SharedDtor();
}

void Rsp_C_Extend_EncryptFinalize::SharedDtor() {
  plastencryptedpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Extend_EncryptFinalize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_EncryptFinalize& Rsp_C_Extend_EncryptFinalize::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_EncryptFinalize_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_EncryptFinalize::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    plastencryptedpart_.ClearNonDefaultToEmptyNoArena();
  }
  pullastencryptedpartlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_EncryptFinalize::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_EncryptFinalize*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pLastEncryptedPart = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plastencryptedpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulLastEncryptedPartLen = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_pullastencryptedpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_EncryptFinalize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pLastEncryptedPart = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plastencryptedpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulLastEncryptedPartLen = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_pullastencryptedpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullastencryptedpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_EncryptFinalize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pLastEncryptedPart = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->plastencryptedpart(), output);
  }

  // optional uint32 pulLastEncryptedPartLen = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pullastencryptedpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
}

::google::protobuf::uint8* Rsp_C_Extend_EncryptFinalize::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pLastEncryptedPart = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->plastencryptedpart(), target);
  }

  // optional uint32 pulLastEncryptedPartLen = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pullastencryptedpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  return target;
}

size_t Rsp_C_Extend_EncryptFinalize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pLastEncryptedPart = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->plastencryptedpart());
    }

    // optional uint32 pulLastEncryptedPartLen = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pullastencryptedpartlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_EncryptFinalize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_EncryptFinalize* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_EncryptFinalize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_EncryptFinalize::MergeFrom(const Rsp_C_Extend_EncryptFinalize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      plastencryptedpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastencryptedpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      pullastencryptedpartlen_ = from.pullastencryptedpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Extend_EncryptFinalize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_EncryptFinalize::CopyFrom(const Rsp_C_Extend_EncryptFinalize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_EncryptFinalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_EncryptFinalize::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_EncryptFinalize::Swap(Rsp_C_Extend_EncryptFinalize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_EncryptFinalize::InternalSwap(Rsp_C_Extend_EncryptFinalize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  plastencryptedpart_.Swap(&other->plastencryptedpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pullastencryptedpartlen_, other->pullastencryptedpartlen_);
}

::google::protobuf::Metadata Rsp_C_Extend_EncryptFinalize::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_DecryptFinalize::InitAsDefaultInstance() {
}
class Req_C_Extend_DecryptFinalize::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_DecryptFinalize* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_plastpart(Req_C_Extend_DecryptFinalize* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pullastpartlen(Req_C_Extend_DecryptFinalize* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_DecryptFinalize::kHSessionFieldNumber;
const int Req_C_Extend_DecryptFinalize::kPLastPartFieldNumber;
const int Req_C_Extend_DecryptFinalize::kPulLastPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_DecryptFinalize::Req_C_Extend_DecryptFinalize()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
}
Req_C_Extend_DecryptFinalize::Req_C_Extend_DecryptFinalize(const Req_C_Extend_DecryptFinalize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plastpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plastpart()) {
    plastpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastpart_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pullastpartlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pullastpartlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
}

void Req_C_Extend_DecryptFinalize::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_DecryptFinalize_pkcs11_2eproto.base);
  plastpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pullastpartlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pullastpartlen_));
}

Req_C_Extend_DecryptFinalize::~Req_C_Extend_DecryptFinalize() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  SharedDtor();
}

void Req_C_Extend_DecryptFinalize::SharedDtor() {
  plastpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_DecryptFinalize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_DecryptFinalize& Req_C_Extend_DecryptFinalize::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_DecryptFinalize_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_DecryptFinalize::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    plastpart_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pullastpartlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pullastpartlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_DecryptFinalize::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_DecryptFinalize*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pLastPart = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plastpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulLastPartLen = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_pullastpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_DecryptFinalize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pLastPart = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plastpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulLastPartLen = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_pullastpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullastpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_DecryptFinalize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pLastPart = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->plastpart(), output);
  }

  // optional uint32 pulLastPartLen = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pullastpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
}

::google::protobuf::uint8* Req_C_Extend_DecryptFinalize::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pLastPart = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->plastpart(), target);
  }

  // optional uint32 pulLastPartLen = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pullastpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  return target;
}

size_t Req_C_Extend_DecryptFinalize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 hSession = 1;
  if (has_hsession()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pLastPart = 6;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->plastpart());
  }

  // optional uint32 pulLastPartLen = 7;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pullastpartlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_DecryptFinalize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_DecryptFinalize* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_DecryptFinalize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
    MergeFrom(*source);
  }
}

void Req_C_Extend_DecryptFinalize::MergeFrom(const Req_C_Extend_DecryptFinalize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      plastpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      pullastpartlen_ = from.pullastpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_DecryptFinalize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_DecryptFinalize::CopyFrom(const Req_C_Extend_DecryptFinalize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_DecryptFinalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_DecryptFinalize::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Req_C_Extend_DecryptFinalize::Swap(Req_C_Extend_DecryptFinalize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_DecryptFinalize::InternalSwap(Req_C_Extend_DecryptFinalize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  plastpart_.Swap(&other->plastpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(pullastpartlen_, other->pullastpartlen_);
}

::google::protobuf::Metadata Req_C_Extend_DecryptFinalize::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_DecryptFinalize::InitAsDefaultInstance() {
}
class Rsp_C_Extend_DecryptFinalize::HasBitSetters {
 public:
  static void set_has_plastpart(Rsp_C_Extend_DecryptFinalize* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pullastpartlen(Rsp_C_Extend_DecryptFinalize* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_DecryptFinalize::kPLastPartFieldNumber;
const int Rsp_C_Extend_DecryptFinalize::kPulLastPartLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_DecryptFinalize::Rsp_C_Extend_DecryptFinalize()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
}
Rsp_C_Extend_DecryptFinalize::Rsp_C_Extend_DecryptFinalize(const Rsp_C_Extend_DecryptFinalize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plastpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plastpart()) {
    plastpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastpart_);
  }
  pullastpartlen_ = from.pullastpartlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
}

void Rsp_C_Extend_DecryptFinalize::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Extend_DecryptFinalize_pkcs11_2eproto.base);
  plastpart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pullastpartlen_ = 0u;
}

Rsp_C_Extend_DecryptFinalize::~Rsp_C_Extend_DecryptFinalize() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  SharedDtor();
}

void Rsp_C_Extend_DecryptFinalize::SharedDtor() {
  plastpart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Extend_DecryptFinalize::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_DecryptFinalize& Rsp_C_Extend_DecryptFinalize::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_DecryptFinalize_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_DecryptFinalize::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    plastpart_.ClearNonDefaultToEmptyNoArena();
  }
  pullastpartlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_DecryptFinalize::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_DecryptFinalize*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pLastPart = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_plastpart();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulLastPartLen = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_pullastpartlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_DecryptFinalize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pLastPart = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_plastpart()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulLastPartLen = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          HasBitSetters::set_has_pullastpartlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullastpartlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_DecryptFinalize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pLastPart = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->plastpart(), output);
  }

  // optional uint32 pulLastPartLen = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->pullastpartlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
}

::google::protobuf::uint8* Rsp_C_Extend_DecryptFinalize::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pLastPart = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->plastpart(), target);
  }

  // optional uint32 pulLastPartLen = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->pullastpartlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  return target;
}

size_t Rsp_C_Extend_DecryptFinalize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pLastPart = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->plastpart());
    }

    // optional uint32 pulLastPartLen = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pullastpartlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_DecryptFinalize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_DecryptFinalize* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_DecryptFinalize>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_DecryptFinalize::MergeFrom(const Rsp_C_Extend_DecryptFinalize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      plastpart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plastpart_);
    }
    if (cached_has_bits & 0x00000002u) {
      pullastpartlen_ = from.pullastpartlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Extend_DecryptFinalize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_DecryptFinalize::CopyFrom(const Rsp_C_Extend_DecryptFinalize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_DecryptFinalize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_DecryptFinalize::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_DecryptFinalize::Swap(Rsp_C_Extend_DecryptFinalize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_DecryptFinalize::InternalSwap(Rsp_C_Extend_DecryptFinalize* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  plastpart_.Swap(&other->plastpart_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pullastpartlen_, other->pullastpartlen_);
}

::google::protobuf::Metadata Rsp_C_Extend_DecryptFinalize::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_PointMultiply::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_Extend_PointMultiply_default_instance_._instance.get_mutable()->pmechanism_ = const_cast< ::com::weston::pkcs11::PRO_Mechanism*>(
      ::com::weston::pkcs11::PRO_Mechanism::internal_default_instance());
}
class Req_C_Extend_PointMultiply::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_PointMultiply* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static const ::com::weston::pkcs11::PRO_Mechanism& pmechanism(const Req_C_Extend_PointMultiply* msg);
  static void set_has_pmechanism(Req_C_Extend_PointMultiply* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_hkey(Req_C_Extend_PointMultiply* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_poutdata(Req_C_Extend_PointMultiply* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulcount(Req_C_Extend_PointMultiply* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

const ::com::weston::pkcs11::PRO_Mechanism&
Req_C_Extend_PointMultiply::HasBitSetters::pmechanism(const Req_C_Extend_PointMultiply* msg) {
  return *msg->pmechanism_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_PointMultiply::kHSessionFieldNumber;
const int Req_C_Extend_PointMultiply::kPMechanismFieldNumber;
const int Req_C_Extend_PointMultiply::kHKeyFieldNumber;
const int Req_C_Extend_PointMultiply::kPOutDataFieldNumber;
const int Req_C_Extend_PointMultiply::kPulCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_PointMultiply::Req_C_Extend_PointMultiply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_PointMultiply)
}
Req_C_Extend_PointMultiply::Req_C_Extend_PointMultiply(const Req_C_Extend_PointMultiply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  poutdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_poutdata()) {
    poutdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poutdata_);
  }
  if (from.has_pmechanism()) {
    pmechanism_ = new ::com::weston::pkcs11::PRO_Mechanism(*from.pmechanism_);
  } else {
    pmechanism_ = nullptr;
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulcount_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulcount_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_PointMultiply)
}

void Req_C_Extend_PointMultiply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_PointMultiply_pkcs11_2eproto.base);
  poutdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pmechanism_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulcount_) -
      reinterpret_cast<char*>(&pmechanism_)) + sizeof(pulcount_));
}

Req_C_Extend_PointMultiply::~Req_C_Extend_PointMultiply() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  SharedDtor();
}

void Req_C_Extend_PointMultiply::SharedDtor() {
  poutdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pmechanism_;
}

void Req_C_Extend_PointMultiply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_PointMultiply& Req_C_Extend_PointMultiply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_PointMultiply_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_PointMultiply::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      poutdata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(pmechanism_ != nullptr);
      pmechanism_->Clear();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulcount_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_PointMultiply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_PointMultiply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_Mechanism::_InternalParse;
        object = msg->mutable_pmechanism();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // required uint32 hKey = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_hkey(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pOutData = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_poutdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulCount = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_PointMultiply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pmechanism()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_hkey(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pOutData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_poutdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_PointMultiply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pmechanism(this), output);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hkey(), output);
  }

  // optional bytes pOutData = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->poutdata(), output);
  }

  // optional uint32 pulCount = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_PointMultiply)
}

::google::protobuf::uint8* Req_C_Extend_PointMultiply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pmechanism(this), target);
  }

  // required uint32 hKey = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hkey(), target);
  }

  // optional bytes pOutData = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->poutdata(), target);
  }

  // optional uint32 pulCount = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  return target;
}

size_t Req_C_Extend_PointMultiply::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_hkey()) {
    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());
  }

  return total_size;
}
size_t Req_C_Extend_PointMultiply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 hKey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hkey());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pOutData = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->poutdata());
    }

    // optional .com.weston.pkcs11.PRO_Mechanism pMechanism = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pmechanism_);
    }

  }
  // optional uint32 pulCount = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_PointMultiply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_PointMultiply* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_PointMultiply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_PointMultiply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_PointMultiply)
    MergeFrom(*source);
  }
}

void Req_C_Extend_PointMultiply::MergeFrom(const Req_C_Extend_PointMultiply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      poutdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poutdata_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pmechanism()->::com::weston::pkcs11::PRO_Mechanism::MergeFrom(from.pmechanism());
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      hkey_ = from.hkey_;
    }
    if (cached_has_bits & 0x00000010u) {
      pulcount_ = from.pulcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_PointMultiply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_PointMultiply::CopyFrom(const Req_C_Extend_PointMultiply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_PointMultiply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_PointMultiply::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  if (has_pmechanism()) {
    if (!this->pmechanism_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_Extend_PointMultiply::Swap(Req_C_Extend_PointMultiply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_PointMultiply::InternalSwap(Req_C_Extend_PointMultiply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  poutdata_.Swap(&other->poutdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pmechanism_, other->pmechanism_);
  swap(hsession_, other->hsession_);
  swap(hkey_, other->hkey_);
  swap(pulcount_, other->pulcount_);
}

::google::protobuf::Metadata Req_C_Extend_PointMultiply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_PointMultiply::InitAsDefaultInstance() {
}
class Rsp_C_Extend_PointMultiply::HasBitSetters {
 public:
  static void set_has_poutdata(Rsp_C_Extend_PointMultiply* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulcount(Rsp_C_Extend_PointMultiply* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_PointMultiply::kPOutDataFieldNumber;
const int Rsp_C_Extend_PointMultiply::kPulCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_PointMultiply::Rsp_C_Extend_PointMultiply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
}
Rsp_C_Extend_PointMultiply::Rsp_C_Extend_PointMultiply(const Rsp_C_Extend_PointMultiply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  poutdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_poutdata()) {
    poutdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poutdata_);
  }
  pulcount_ = from.pulcount_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
}

void Rsp_C_Extend_PointMultiply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Extend_PointMultiply_pkcs11_2eproto.base);
  poutdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulcount_ = 0u;
}

Rsp_C_Extend_PointMultiply::~Rsp_C_Extend_PointMultiply() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  SharedDtor();
}

void Rsp_C_Extend_PointMultiply::SharedDtor() {
  poutdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Extend_PointMultiply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_PointMultiply& Rsp_C_Extend_PointMultiply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_PointMultiply_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_PointMultiply::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    poutdata_.ClearNonDefaultToEmptyNoArena();
  }
  pulcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_PointMultiply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_PointMultiply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pOutData = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_poutdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulCount = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pulcount(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_PointMultiply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pOutData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_poutdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pulcount(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_PointMultiply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pOutData = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->poutdata(), output);
  }

  // optional uint32 pulCount = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pulcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
}

::google::protobuf::uint8* Rsp_C_Extend_PointMultiply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pOutData = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->poutdata(), target);
  }

  // optional uint32 pulCount = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pulcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  return target;
}

size_t Rsp_C_Extend_PointMultiply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pOutData = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->poutdata());
    }

    // optional uint32 pulCount = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulcount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_PointMultiply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_PointMultiply* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_PointMultiply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_PointMultiply::MergeFrom(const Rsp_C_Extend_PointMultiply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      poutdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poutdata_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulcount_ = from.pulcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Extend_PointMultiply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_PointMultiply::CopyFrom(const Rsp_C_Extend_PointMultiply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_PointMultiply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_PointMultiply::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_PointMultiply::Swap(Rsp_C_Extend_PointMultiply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_PointMultiply::InternalSwap(Rsp_C_Extend_PointMultiply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  poutdata_.Swap(&other->poutdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulcount_, other->pulcount_);
}

::google::protobuf::Metadata Rsp_C_Extend_PointMultiply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_Reset_TT::InitAsDefaultInstance() {
}
class Req_C_Extend_Reset_TT::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_Reset_TT* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pbttmpk(Req_C_Extend_Reset_TT* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulmpklen(Req_C_Extend_Reset_TT* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pbmpkiv(Req_C_Extend_Reset_TT* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ulmpkivlen(Req_C_Extend_Reset_TT* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_Reset_TT::kHSessionFieldNumber;
const int Req_C_Extend_Reset_TT::kPbTTMpkFieldNumber;
const int Req_C_Extend_Reset_TT::kUlMpkLenFieldNumber;
const int Req_C_Extend_Reset_TT::kPbMpkIVFieldNumber;
const int Req_C_Extend_Reset_TT::kUlMpkIVLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_Reset_TT::Req_C_Extend_Reset_TT()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_Reset_TT)
}
Req_C_Extend_Reset_TT::Req_C_Extend_Reset_TT(const Req_C_Extend_Reset_TT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbttmpk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pbttmpk()) {
    pbttmpk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbttmpk_);
  }
  pbmpkiv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pbmpkiv()) {
    pbmpkiv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbmpkiv_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulmpkivlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulmpkivlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_Reset_TT)
}

void Req_C_Extend_Reset_TT::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_Reset_TT_pkcs11_2eproto.base);
  pbttmpk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbmpkiv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulmpkivlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulmpkivlen_));
}

Req_C_Extend_Reset_TT::~Req_C_Extend_Reset_TT() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  SharedDtor();
}

void Req_C_Extend_Reset_TT::SharedDtor() {
  pbttmpk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbmpkiv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_Reset_TT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_Reset_TT& Req_C_Extend_Reset_TT::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_Reset_TT_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_Reset_TT::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pbttmpk_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pbmpkiv_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulmpkivlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulmpkivlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_Reset_TT::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_Reset_TT*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pbTTMpk = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pbttmpk();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulMpkLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulmpklen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pbMpkIV = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pbmpkiv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulMpkIVLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ulmpkivlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_Reset_TT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pbTTMpk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pbttmpk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMpkLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulmpklen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmpklen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pbMpkIV = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pbmpkiv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMpkIVLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ulmpkivlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmpkivlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_Reset_TT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pbTTMpk = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pbttmpk(), output);
  }

  // required uint32 ulMpkLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulmpklen(), output);
  }

  // optional bytes pbMpkIV = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pbmpkiv(), output);
  }

  // required uint32 ulMpkIVLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ulmpkivlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_Reset_TT)
}

::google::protobuf::uint8* Req_C_Extend_Reset_TT::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pbTTMpk = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pbttmpk(), target);
  }

  // required uint32 ulMpkLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulmpklen(), target);
  }

  // optional bytes pbMpkIV = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pbmpkiv(), target);
  }

  // required uint32 ulMpkIVLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ulmpkivlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  return target;
}

size_t Req_C_Extend_Reset_TT::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulmpklen()) {
    // required uint32 ulMpkLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpklen());
  }

  if (has_ulmpkivlen()) {
    // required uint32 ulMpkIVLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpkivlen());
  }

  return total_size;
}
size_t Req_C_Extend_Reset_TT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001c) ^ 0x0000001c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulMpkLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpklen());

    // required uint32 ulMpkIVLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpkivlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pbTTMpk = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pbttmpk());
    }

    // optional bytes pbMpkIV = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pbmpkiv());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_Reset_TT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_Reset_TT* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_Reset_TT>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_Reset_TT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_Reset_TT)
    MergeFrom(*source);
  }
}

void Req_C_Extend_Reset_TT::MergeFrom(const Req_C_Extend_Reset_TT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pbttmpk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbttmpk_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pbmpkiv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbmpkiv_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulmpklen_ = from.ulmpklen_;
    }
    if (cached_has_bits & 0x00000010u) {
      ulmpkivlen_ = from.ulmpkivlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_Reset_TT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_Reset_TT::CopyFrom(const Req_C_Extend_Reset_TT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_Reset_TT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_Reset_TT::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;
  return true;
}

void Req_C_Extend_Reset_TT::Swap(Req_C_Extend_Reset_TT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_Reset_TT::InternalSwap(Req_C_Extend_Reset_TT* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pbttmpk_.Swap(&other->pbttmpk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pbmpkiv_.Swap(&other->pbmpkiv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulmpklen_, other->ulmpklen_);
  swap(ulmpkivlen_, other->ulmpkivlen_);
}

::google::protobuf::Metadata Req_C_Extend_Reset_TT::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_Reset_TT::InitAsDefaultInstance() {
}
class Rsp_C_Extend_Reset_TT::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_Reset_TT::Rsp_C_Extend_Reset_TT()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
}
Rsp_C_Extend_Reset_TT::Rsp_C_Extend_Reset_TT(const Rsp_C_Extend_Reset_TT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
}

void Rsp_C_Extend_Reset_TT::SharedCtor() {
}

Rsp_C_Extend_Reset_TT::~Rsp_C_Extend_Reset_TT() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  SharedDtor();
}

void Rsp_C_Extend_Reset_TT::SharedDtor() {
}

void Rsp_C_Extend_Reset_TT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_Reset_TT& Rsp_C_Extend_Reset_TT::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_Reset_TT_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_Reset_TT::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_Reset_TT::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_Reset_TT*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_Reset_TT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_Reset_TT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
}

::google::protobuf::uint8* Rsp_C_Extend_Reset_TT::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  return target;
}

size_t Rsp_C_Extend_Reset_TT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_Reset_TT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_Reset_TT* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_Reset_TT>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_Reset_TT::MergeFrom(const Rsp_C_Extend_Reset_TT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Extend_Reset_TT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_Reset_TT::CopyFrom(const Rsp_C_Extend_Reset_TT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_TT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_Reset_TT::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_Reset_TT::Swap(Rsp_C_Extend_Reset_TT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_Reset_TT::InternalSwap(Rsp_C_Extend_Reset_TT* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Extend_Reset_TT::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_Reset_BK::InitAsDefaultInstance() {
}
class Req_C_Extend_Reset_BK::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_Reset_BK* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pbbkmpk(Req_C_Extend_Reset_BK* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulmpklen(Req_C_Extend_Reset_BK* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pbmpkiv(Req_C_Extend_Reset_BK* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ulmpkivlen(Req_C_Extend_Reset_BK* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_Reset_BK::kHSessionFieldNumber;
const int Req_C_Extend_Reset_BK::kPbBKMpkFieldNumber;
const int Req_C_Extend_Reset_BK::kUlMpkLenFieldNumber;
const int Req_C_Extend_Reset_BK::kPbMpkIVFieldNumber;
const int Req_C_Extend_Reset_BK::kUlMpkIVLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_Reset_BK::Req_C_Extend_Reset_BK()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_Reset_BK)
}
Req_C_Extend_Reset_BK::Req_C_Extend_Reset_BK(const Req_C_Extend_Reset_BK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbbkmpk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pbbkmpk()) {
    pbbkmpk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbbkmpk_);
  }
  pbmpkiv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pbmpkiv()) {
    pbmpkiv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbmpkiv_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulmpkivlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulmpkivlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_Reset_BK)
}

void Req_C_Extend_Reset_BK::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_Reset_BK_pkcs11_2eproto.base);
  pbbkmpk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbmpkiv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulmpkivlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulmpkivlen_));
}

Req_C_Extend_Reset_BK::~Req_C_Extend_Reset_BK() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  SharedDtor();
}

void Req_C_Extend_Reset_BK::SharedDtor() {
  pbbkmpk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbmpkiv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_Reset_BK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_Reset_BK& Req_C_Extend_Reset_BK::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_Reset_BK_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_Reset_BK::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pbbkmpk_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pbmpkiv_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulmpkivlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulmpkivlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_Reset_BK::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_Reset_BK*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pbBKMpk = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pbbkmpk();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulMpkLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulmpklen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pbMpkIV = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pbmpkiv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulMpkIVLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ulmpkivlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_Reset_BK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pbBKMpk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pbbkmpk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMpkLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulmpklen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmpklen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pbMpkIV = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pbmpkiv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMpkIVLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ulmpkivlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmpkivlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_Reset_BK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pbBKMpk = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pbbkmpk(), output);
  }

  // required uint32 ulMpkLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulmpklen(), output);
  }

  // optional bytes pbMpkIV = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pbmpkiv(), output);
  }

  // required uint32 ulMpkIVLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ulmpkivlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_Reset_BK)
}

::google::protobuf::uint8* Req_C_Extend_Reset_BK::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pbBKMpk = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pbbkmpk(), target);
  }

  // required uint32 ulMpkLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulmpklen(), target);
  }

  // optional bytes pbMpkIV = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pbmpkiv(), target);
  }

  // required uint32 ulMpkIVLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ulmpkivlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  return target;
}

size_t Req_C_Extend_Reset_BK::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulmpklen()) {
    // required uint32 ulMpkLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpklen());
  }

  if (has_ulmpkivlen()) {
    // required uint32 ulMpkIVLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpkivlen());
  }

  return total_size;
}
size_t Req_C_Extend_Reset_BK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001c) ^ 0x0000001c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulMpkLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpklen());

    // required uint32 ulMpkIVLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpkivlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pbBKMpk = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pbbkmpk());
    }

    // optional bytes pbMpkIV = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pbmpkiv());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_Reset_BK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_Reset_BK* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_Reset_BK>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_Reset_BK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_Reset_BK)
    MergeFrom(*source);
  }
}

void Req_C_Extend_Reset_BK::MergeFrom(const Req_C_Extend_Reset_BK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pbbkmpk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbbkmpk_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pbmpkiv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbmpkiv_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulmpklen_ = from.ulmpklen_;
    }
    if (cached_has_bits & 0x00000010u) {
      ulmpkivlen_ = from.ulmpkivlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_Reset_BK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_Reset_BK::CopyFrom(const Req_C_Extend_Reset_BK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_Reset_BK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_Reset_BK::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;
  return true;
}

void Req_C_Extend_Reset_BK::Swap(Req_C_Extend_Reset_BK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_Reset_BK::InternalSwap(Req_C_Extend_Reset_BK* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pbbkmpk_.Swap(&other->pbbkmpk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pbmpkiv_.Swap(&other->pbmpkiv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulmpklen_, other->ulmpklen_);
  swap(ulmpkivlen_, other->ulmpkivlen_);
}

::google::protobuf::Metadata Req_C_Extend_Reset_BK::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_Reset_BK::InitAsDefaultInstance() {
}
class Rsp_C_Extend_Reset_BK::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_Reset_BK::Rsp_C_Extend_Reset_BK()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
}
Rsp_C_Extend_Reset_BK::Rsp_C_Extend_Reset_BK(const Rsp_C_Extend_Reset_BK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
}

void Rsp_C_Extend_Reset_BK::SharedCtor() {
}

Rsp_C_Extend_Reset_BK::~Rsp_C_Extend_Reset_BK() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  SharedDtor();
}

void Rsp_C_Extend_Reset_BK::SharedDtor() {
}

void Rsp_C_Extend_Reset_BK::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_Reset_BK& Rsp_C_Extend_Reset_BK::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_Reset_BK_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_Reset_BK::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_Reset_BK::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_Reset_BK*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_Reset_BK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_Reset_BK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
}

::google::protobuf::uint8* Rsp_C_Extend_Reset_BK::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  return target;
}

size_t Rsp_C_Extend_Reset_BK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_Reset_BK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_Reset_BK* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_Reset_BK>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_Reset_BK::MergeFrom(const Rsp_C_Extend_Reset_BK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Extend_Reset_BK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_Reset_BK::CopyFrom(const Rsp_C_Extend_Reset_BK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Reset_BK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_Reset_BK::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_Reset_BK::Swap(Rsp_C_Extend_Reset_BK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_Reset_BK::InternalSwap(Rsp_C_Extend_Reset_BK* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Extend_Reset_BK::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_Get_Special_Object_Version::InitAsDefaultInstance() {
}
class Req_C_Extend_Get_Special_Object_Version::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_Get_Special_Object_Version* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_objectclass(Req_C_Extend_Get_Special_Object_Version* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pversion(Req_C_Extend_Get_Special_Object_Version* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pullen(Req_C_Extend_Get_Special_Object_Version* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_Get_Special_Object_Version::kHSessionFieldNumber;
const int Req_C_Extend_Get_Special_Object_Version::kObjectClassFieldNumber;
const int Req_C_Extend_Get_Special_Object_Version::kPVersionFieldNumber;
const int Req_C_Extend_Get_Special_Object_Version::kPUlLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_Get_Special_Object_Version::Req_C_Extend_Get_Special_Object_Version()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
}
Req_C_Extend_Get_Special_Object_Version::Req_C_Extend_Get_Special_Object_Version(const Req_C_Extend_Get_Special_Object_Version& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pversion()) {
    pversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pversion_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pullen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pullen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
}

void Req_C_Extend_Get_Special_Object_Version::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_Get_Special_Object_Version_pkcs11_2eproto.base);
  pversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pullen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pullen_));
}

Req_C_Extend_Get_Special_Object_Version::~Req_C_Extend_Get_Special_Object_Version() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  SharedDtor();
}

void Req_C_Extend_Get_Special_Object_Version::SharedDtor() {
  pversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_Get_Special_Object_Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_Get_Special_Object_Version& Req_C_Extend_Get_Special_Object_Version::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_Get_Special_Object_Version_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_Get_Special_Object_Version::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pversion_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pullen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pullen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_Get_Special_Object_Version::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_Get_Special_Object_Version*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 objectClass = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_objectclass(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pVersion = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pversion();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pUlLen = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_pullen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_Get_Special_Object_Version::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 objectClass = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_objectclass(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &objectclass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pVersion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pversion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pUlLen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_pullen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_Get_Special_Object_Version::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // required uint32 objectClass = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->objectclass(), output);
  }

  // optional bytes pVersion = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->pversion(), output);
  }

  // optional uint32 pUlLen = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pullen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
}

::google::protobuf::uint8* Req_C_Extend_Get_Special_Object_Version::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // required uint32 objectClass = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->objectclass(), target);
  }

  // optional bytes pVersion = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->pversion(), target);
  }

  // optional uint32 pUlLen = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pullen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  return target;
}

size_t Req_C_Extend_Get_Special_Object_Version::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_objectclass()) {
    // required uint32 objectClass = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->objectclass());
  }

  return total_size;
}
size_t Req_C_Extend_Get_Special_Object_Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 objectClass = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->objectclass());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pVersion = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pversion());
  }

  // optional uint32 pUlLen = 4;
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pullen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_Get_Special_Object_Version::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_Get_Special_Object_Version* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_Get_Special_Object_Version>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
    MergeFrom(*source);
  }
}

void Req_C_Extend_Get_Special_Object_Version::MergeFrom(const Req_C_Extend_Get_Special_Object_Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pversion_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      objectclass_ = from.objectclass_;
    }
    if (cached_has_bits & 0x00000008u) {
      pullen_ = from.pullen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_Get_Special_Object_Version::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_Get_Special_Object_Version::CopyFrom(const Req_C_Extend_Get_Special_Object_Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_Get_Special_Object_Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_Get_Special_Object_Version::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void Req_C_Extend_Get_Special_Object_Version::Swap(Req_C_Extend_Get_Special_Object_Version* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_Get_Special_Object_Version::InternalSwap(Req_C_Extend_Get_Special_Object_Version* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pversion_.Swap(&other->pversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(objectclass_, other->objectclass_);
  swap(pullen_, other->pullen_);
}

::google::protobuf::Metadata Req_C_Extend_Get_Special_Object_Version::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_Get_Special_Object_Version::InitAsDefaultInstance() {
}
class Rsp_C_Extend_Get_Special_Object_Version::HasBitSetters {
 public:
  static void set_has_pversion(Rsp_C_Extend_Get_Special_Object_Version* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pullen(Rsp_C_Extend_Get_Special_Object_Version* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_Get_Special_Object_Version::kPVersionFieldNumber;
const int Rsp_C_Extend_Get_Special_Object_Version::kPUlLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_Get_Special_Object_Version::Rsp_C_Extend_Get_Special_Object_Version()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
}
Rsp_C_Extend_Get_Special_Object_Version::Rsp_C_Extend_Get_Special_Object_Version(const Rsp_C_Extend_Get_Special_Object_Version& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pversion()) {
    pversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pversion_);
  }
  pullen_ = from.pullen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
}

void Rsp_C_Extend_Get_Special_Object_Version::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Extend_Get_Special_Object_Version_pkcs11_2eproto.base);
  pversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pullen_ = 0u;
}

Rsp_C_Extend_Get_Special_Object_Version::~Rsp_C_Extend_Get_Special_Object_Version() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  SharedDtor();
}

void Rsp_C_Extend_Get_Special_Object_Version::SharedDtor() {
  pversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Extend_Get_Special_Object_Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_Get_Special_Object_Version& Rsp_C_Extend_Get_Special_Object_Version::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_Get_Special_Object_Version_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_Get_Special_Object_Version::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pversion_.ClearNonDefaultToEmptyNoArena();
  }
  pullen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_Get_Special_Object_Version::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_Get_Special_Object_Version*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pVersion = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pversion();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pUlLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pullen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_Get_Special_Object_Version::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pVersion = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pversion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pUlLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pullen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pullen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_Get_Special_Object_Version::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pVersion = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pversion(), output);
  }

  // optional uint32 pUlLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pullen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
}

::google::protobuf::uint8* Rsp_C_Extend_Get_Special_Object_Version::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pVersion = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pversion(), target);
  }

  // optional uint32 pUlLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pullen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  return target;
}

size_t Rsp_C_Extend_Get_Special_Object_Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pVersion = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pversion());
    }

    // optional uint32 pUlLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pullen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_Get_Special_Object_Version::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_Get_Special_Object_Version* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_Get_Special_Object_Version>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_Get_Special_Object_Version::MergeFrom(const Rsp_C_Extend_Get_Special_Object_Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pversion_);
    }
    if (cached_has_bits & 0x00000002u) {
      pullen_ = from.pullen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Extend_Get_Special_Object_Version::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_Get_Special_Object_Version::CopyFrom(const Rsp_C_Extend_Get_Special_Object_Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_Special_Object_Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_Get_Special_Object_Version::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_Get_Special_Object_Version::Swap(Rsp_C_Extend_Get_Special_Object_Version* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_Get_Special_Object_Version::InternalSwap(Rsp_C_Extend_Get_Special_Object_Version* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pversion_.Swap(&other->pversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pullen_, other->pullen_);
}

::google::protobuf::Metadata Rsp_C_Extend_Get_Special_Object_Version::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_DestroyCard::InitAsDefaultInstance() {
}
class Req_C_Extend_DestroyCard::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_Extend_DestroyCard* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_prandomin(Req_C_Extend_DestroyCard* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_randominlen(Req_C_Extend_DestroyCard* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_prandomout(Req_C_Extend_DestroyCard* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_prandomoutlen(Req_C_Extend_DestroyCard* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_DestroyCard::kSlotIDFieldNumber;
const int Req_C_Extend_DestroyCard::kPrandomInFieldNumber;
const int Req_C_Extend_DestroyCard::kRandomInLenFieldNumber;
const int Req_C_Extend_DestroyCard::kPrandomOutFieldNumber;
const int Req_C_Extend_DestroyCard::kPrandomOutLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_DestroyCard::Req_C_Extend_DestroyCard()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_DestroyCard)
}
Req_C_Extend_DestroyCard::Req_C_Extend_DestroyCard(const Req_C_Extend_DestroyCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prandomin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prandomin()) {
    prandomin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prandomin_);
  }
  prandomout_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prandomout()) {
    prandomout_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prandomout_);
  }
  ::memcpy(&slotid_, &from.slotid_,
    static_cast<size_t>(reinterpret_cast<char*>(&prandomoutlen_) -
    reinterpret_cast<char*>(&slotid_)) + sizeof(prandomoutlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_DestroyCard)
}

void Req_C_Extend_DestroyCard::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_DestroyCard_pkcs11_2eproto.base);
  prandomin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prandomout_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&slotid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prandomoutlen_) -
      reinterpret_cast<char*>(&slotid_)) + sizeof(prandomoutlen_));
}

Req_C_Extend_DestroyCard::~Req_C_Extend_DestroyCard() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  SharedDtor();
}

void Req_C_Extend_DestroyCard::SharedDtor() {
  prandomin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prandomout_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_DestroyCard::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_DestroyCard& Req_C_Extend_DestroyCard::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_DestroyCard_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_DestroyCard::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      prandomin_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      prandomout_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&slotid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&prandomoutlen_) -
        reinterpret_cast<char*>(&slotid_)) + sizeof(prandomoutlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_DestroyCard::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_DestroyCard*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required bytes prandomIn = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_prandomin();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 randomInLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_randominlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes prandomOut = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_prandomout();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 prandomOutLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_prandomoutlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_DestroyCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes prandomIn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prandomin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 randomInLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_randominlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &randominlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prandomOut = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prandomout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 prandomOutLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_prandomoutlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prandomoutlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_DestroyCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // required bytes prandomIn = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->prandomin(), output);
  }

  // required uint32 randomInLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->randominlen(), output);
  }

  // optional bytes prandomOut = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->prandomout(), output);
  }

  // optional uint32 prandomOutLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->prandomoutlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_DestroyCard)
}

::google::protobuf::uint8* Req_C_Extend_DestroyCard::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // required bytes prandomIn = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->prandomin(), target);
  }

  // required uint32 randomInLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->randominlen(), target);
  }

  // optional bytes prandomOut = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->prandomout(), target);
  }

  // optional uint32 prandomOutLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->prandomoutlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  return target;
}

size_t Req_C_Extend_DestroyCard::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  size_t total_size = 0;

  if (has_prandomin()) {
    // required bytes prandomIn = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prandomin());
  }

  if (has_slotid()) {
    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }

  if (has_randominlen()) {
    // required uint32 randomInLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->randominlen());
  }

  return total_size;
}
size_t Req_C_Extend_DestroyCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000d) ^ 0x0000000d) == 0) {  // All required fields are present.
    // required bytes prandomIn = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prandomin());

    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());

    // required uint32 randomInLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->randominlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes prandomOut = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prandomout());
  }

  // optional uint32 prandomOutLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prandomoutlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_DestroyCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_DestroyCard* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_DestroyCard>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_DestroyCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_DestroyCard)
    MergeFrom(*source);
  }
}

void Req_C_Extend_DestroyCard::MergeFrom(const Req_C_Extend_DestroyCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      prandomin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prandomin_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      prandomout_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prandomout_);
    }
    if (cached_has_bits & 0x00000004u) {
      slotid_ = from.slotid_;
    }
    if (cached_has_bits & 0x00000008u) {
      randominlen_ = from.randominlen_;
    }
    if (cached_has_bits & 0x00000010u) {
      prandomoutlen_ = from.prandomoutlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_DestroyCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_DestroyCard::CopyFrom(const Req_C_Extend_DestroyCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_DestroyCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_DestroyCard::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;
  return true;
}

void Req_C_Extend_DestroyCard::Swap(Req_C_Extend_DestroyCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_DestroyCard::InternalSwap(Req_C_Extend_DestroyCard* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  prandomin_.Swap(&other->prandomin_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  prandomout_.Swap(&other->prandomout_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(slotid_, other->slotid_);
  swap(randominlen_, other->randominlen_);
  swap(prandomoutlen_, other->prandomoutlen_);
}

::google::protobuf::Metadata Req_C_Extend_DestroyCard::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_DestroyCard::InitAsDefaultInstance() {
}
class Rsp_C_Extend_DestroyCard::HasBitSetters {
 public:
  static void set_has_prandomout(Rsp_C_Extend_DestroyCard* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_prandomoutlen(Rsp_C_Extend_DestroyCard* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_DestroyCard::kPrandomOutFieldNumber;
const int Rsp_C_Extend_DestroyCard::kPrandomOutLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_DestroyCard::Rsp_C_Extend_DestroyCard()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
}
Rsp_C_Extend_DestroyCard::Rsp_C_Extend_DestroyCard(const Rsp_C_Extend_DestroyCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prandomout_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prandomout()) {
    prandomout_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prandomout_);
  }
  prandomoutlen_ = from.prandomoutlen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
}

void Rsp_C_Extend_DestroyCard::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Extend_DestroyCard_pkcs11_2eproto.base);
  prandomout_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prandomoutlen_ = 0u;
}

Rsp_C_Extend_DestroyCard::~Rsp_C_Extend_DestroyCard() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  SharedDtor();
}

void Rsp_C_Extend_DestroyCard::SharedDtor() {
  prandomout_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Extend_DestroyCard::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_DestroyCard& Rsp_C_Extend_DestroyCard::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_DestroyCard_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_DestroyCard::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    prandomout_.ClearNonDefaultToEmptyNoArena();
  }
  prandomoutlen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_DestroyCard::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_DestroyCard*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes prandomOut = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_prandomout();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 prandomOutLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_prandomoutlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_DestroyCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes prandomOut = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prandomout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 prandomOutLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_prandomoutlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prandomoutlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_DestroyCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes prandomOut = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->prandomout(), output);
  }

  // optional uint32 prandomOutLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->prandomoutlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
}

::google::protobuf::uint8* Rsp_C_Extend_DestroyCard::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes prandomOut = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->prandomout(), target);
  }

  // optional uint32 prandomOutLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->prandomoutlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  return target;
}

size_t Rsp_C_Extend_DestroyCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes prandomOut = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prandomout());
    }

    // optional uint32 prandomOutLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prandomoutlen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_DestroyCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_DestroyCard* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_DestroyCard>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_DestroyCard::MergeFrom(const Rsp_C_Extend_DestroyCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      prandomout_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prandomout_);
    }
    if (cached_has_bits & 0x00000002u) {
      prandomoutlen_ = from.prandomoutlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Extend_DestroyCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_DestroyCard::CopyFrom(const Rsp_C_Extend_DestroyCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_DestroyCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_DestroyCard::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_DestroyCard::Swap(Rsp_C_Extend_DestroyCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_DestroyCard::InternalSwap(Rsp_C_Extend_DestroyCard* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  prandomout_.Swap(&other->prandomout_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(prandomoutlen_, other->prandomoutlen_);
}

::google::protobuf::Metadata Rsp_C_Extend_DestroyCard::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_MonopolizeEnable::InitAsDefaultInstance() {
}
class Req_C_Extend_MonopolizeEnable::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_Extend_MonopolizeEnable* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_MonopolizeEnable::kSlotIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_MonopolizeEnable::Req_C_Extend_MonopolizeEnable()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
}
Req_C_Extend_MonopolizeEnable::Req_C_Extend_MonopolizeEnable(const Req_C_Extend_MonopolizeEnable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slotid_ = from.slotid_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
}

void Req_C_Extend_MonopolizeEnable::SharedCtor() {
  slotid_ = 0u;
}

Req_C_Extend_MonopolizeEnable::~Req_C_Extend_MonopolizeEnable() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  SharedDtor();
}

void Req_C_Extend_MonopolizeEnable::SharedDtor() {
}

void Req_C_Extend_MonopolizeEnable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_MonopolizeEnable& Req_C_Extend_MonopolizeEnable::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_MonopolizeEnable_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_MonopolizeEnable::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slotid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_MonopolizeEnable::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_MonopolizeEnable*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_MonopolizeEnable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_MonopolizeEnable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
}

::google::protobuf::uint8* Req_C_Extend_MonopolizeEnable::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  return target;
}

size_t Req_C_Extend_MonopolizeEnable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 slotID = 1;
  if (has_slotid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_MonopolizeEnable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_MonopolizeEnable* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_MonopolizeEnable>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
    MergeFrom(*source);
  }
}

void Req_C_Extend_MonopolizeEnable::MergeFrom(const Req_C_Extend_MonopolizeEnable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slotid()) {
    set_slotid(from.slotid());
  }
}

void Req_C_Extend_MonopolizeEnable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_MonopolizeEnable::CopyFrom(const Req_C_Extend_MonopolizeEnable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_MonopolizeEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_MonopolizeEnable::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_Extend_MonopolizeEnable::Swap(Req_C_Extend_MonopolizeEnable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_MonopolizeEnable::InternalSwap(Req_C_Extend_MonopolizeEnable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(slotid_, other->slotid_);
}

::google::protobuf::Metadata Req_C_Extend_MonopolizeEnable::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_MonopolizeEnable::InitAsDefaultInstance() {
}
class Rsp_C_Extend_MonopolizeEnable::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_MonopolizeEnable::Rsp_C_Extend_MonopolizeEnable()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
}
Rsp_C_Extend_MonopolizeEnable::Rsp_C_Extend_MonopolizeEnable(const Rsp_C_Extend_MonopolizeEnable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
}

void Rsp_C_Extend_MonopolizeEnable::SharedCtor() {
}

Rsp_C_Extend_MonopolizeEnable::~Rsp_C_Extend_MonopolizeEnable() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  SharedDtor();
}

void Rsp_C_Extend_MonopolizeEnable::SharedDtor() {
}

void Rsp_C_Extend_MonopolizeEnable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_MonopolizeEnable& Rsp_C_Extend_MonopolizeEnable::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_MonopolizeEnable_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_MonopolizeEnable::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_MonopolizeEnable::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_MonopolizeEnable*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_MonopolizeEnable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_MonopolizeEnable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
}

::google::protobuf::uint8* Rsp_C_Extend_MonopolizeEnable::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  return target;
}

size_t Rsp_C_Extend_MonopolizeEnable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_MonopolizeEnable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_MonopolizeEnable* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_MonopolizeEnable>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_MonopolizeEnable::MergeFrom(const Rsp_C_Extend_MonopolizeEnable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Extend_MonopolizeEnable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_MonopolizeEnable::CopyFrom(const Rsp_C_Extend_MonopolizeEnable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_MonopolizeEnable::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_MonopolizeEnable::Swap(Rsp_C_Extend_MonopolizeEnable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_MonopolizeEnable::InternalSwap(Rsp_C_Extend_MonopolizeEnable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Extend_MonopolizeEnable::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_MonopolizeDisable::InitAsDefaultInstance() {
}
class Req_C_Extend_MonopolizeDisable::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_Extend_MonopolizeDisable* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_MonopolizeDisable::kSlotIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_MonopolizeDisable::Req_C_Extend_MonopolizeDisable()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
}
Req_C_Extend_MonopolizeDisable::Req_C_Extend_MonopolizeDisable(const Req_C_Extend_MonopolizeDisable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slotid_ = from.slotid_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
}

void Req_C_Extend_MonopolizeDisable::SharedCtor() {
  slotid_ = 0u;
}

Req_C_Extend_MonopolizeDisable::~Req_C_Extend_MonopolizeDisable() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  SharedDtor();
}

void Req_C_Extend_MonopolizeDisable::SharedDtor() {
}

void Req_C_Extend_MonopolizeDisable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_MonopolizeDisable& Req_C_Extend_MonopolizeDisable::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_MonopolizeDisable_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_MonopolizeDisable::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slotid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_MonopolizeDisable::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_MonopolizeDisable*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_MonopolizeDisable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_MonopolizeDisable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
}

::google::protobuf::uint8* Req_C_Extend_MonopolizeDisable::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  return target;
}

size_t Req_C_Extend_MonopolizeDisable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 slotID = 1;
  if (has_slotid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_MonopolizeDisable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_MonopolizeDisable* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_MonopolizeDisable>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
    MergeFrom(*source);
  }
}

void Req_C_Extend_MonopolizeDisable::MergeFrom(const Req_C_Extend_MonopolizeDisable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slotid()) {
    set_slotid(from.slotid());
  }
}

void Req_C_Extend_MonopolizeDisable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_MonopolizeDisable::CopyFrom(const Req_C_Extend_MonopolizeDisable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_MonopolizeDisable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_MonopolizeDisable::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Req_C_Extend_MonopolizeDisable::Swap(Req_C_Extend_MonopolizeDisable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_MonopolizeDisable::InternalSwap(Req_C_Extend_MonopolizeDisable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(slotid_, other->slotid_);
}

::google::protobuf::Metadata Req_C_Extend_MonopolizeDisable::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_MonopolizeDisable::InitAsDefaultInstance() {
}
class Rsp_C_Extend_MonopolizeDisable::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_MonopolizeDisable::Rsp_C_Extend_MonopolizeDisable()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
}
Rsp_C_Extend_MonopolizeDisable::Rsp_C_Extend_MonopolizeDisable(const Rsp_C_Extend_MonopolizeDisable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
}

void Rsp_C_Extend_MonopolizeDisable::SharedCtor() {
}

Rsp_C_Extend_MonopolizeDisable::~Rsp_C_Extend_MonopolizeDisable() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  SharedDtor();
}

void Rsp_C_Extend_MonopolizeDisable::SharedDtor() {
}

void Rsp_C_Extend_MonopolizeDisable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_MonopolizeDisable& Rsp_C_Extend_MonopolizeDisable::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_MonopolizeDisable_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_MonopolizeDisable::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_MonopolizeDisable::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_MonopolizeDisable*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_MonopolizeDisable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_MonopolizeDisable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
}

::google::protobuf::uint8* Rsp_C_Extend_MonopolizeDisable::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  return target;
}

size_t Rsp_C_Extend_MonopolizeDisable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_MonopolizeDisable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_MonopolizeDisable* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_MonopolizeDisable>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_MonopolizeDisable::MergeFrom(const Rsp_C_Extend_MonopolizeDisable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Extend_MonopolizeDisable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_MonopolizeDisable::CopyFrom(const Rsp_C_Extend_MonopolizeDisable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_MonopolizeDisable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_MonopolizeDisable::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_MonopolizeDisable::Swap(Rsp_C_Extend_MonopolizeDisable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_MonopolizeDisable::InternalSwap(Rsp_C_Extend_MonopolizeDisable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Extend_MonopolizeDisable::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_GetDevInfo::InitAsDefaultInstance() {
  ::com::weston::pkcs11::_Req_C_Extend_GetDevInfo_default_instance_._instance.get_mutable()->ipparam_ = const_cast< ::com::weston::pkcs11::PRO_ipparam*>(
      ::com::weston::pkcs11::PRO_ipparam::internal_default_instance());
}
class Req_C_Extend_GetDevInfo::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_Extend_GetDevInfo* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_username(Req_C_Extend_GetDevInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static const ::com::weston::pkcs11::PRO_ipparam& ipparam(const Req_C_Extend_GetDevInfo* msg);
  static void set_has_ipparam(Req_C_Extend_GetDevInfo* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pdevinfo(Req_C_Extend_GetDevInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_puldevinfolen(Req_C_Extend_GetDevInfo* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

const ::com::weston::pkcs11::PRO_ipparam&
Req_C_Extend_GetDevInfo::HasBitSetters::ipparam(const Req_C_Extend_GetDevInfo* msg) {
  return *msg->ipparam_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_GetDevInfo::kSlotIDFieldNumber;
const int Req_C_Extend_GetDevInfo::kUserNameFieldNumber;
const int Req_C_Extend_GetDevInfo::kIpparamFieldNumber;
const int Req_C_Extend_GetDevInfo::kPDevInfoFieldNumber;
const int Req_C_Extend_GetDevInfo::kPUlDevInfoLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_GetDevInfo::Req_C_Extend_GetDevInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
}
Req_C_Extend_GetDevInfo::Req_C_Extend_GetDevInfo(const Req_C_Extend_GetDevInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  pdevinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdevinfo()) {
    pdevinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdevinfo_);
  }
  if (from.has_ipparam()) {
    ipparam_ = new ::com::weston::pkcs11::PRO_ipparam(*from.ipparam_);
  } else {
    ipparam_ = nullptr;
  }
  ::memcpy(&slotid_, &from.slotid_,
    static_cast<size_t>(reinterpret_cast<char*>(&puldevinfolen_) -
    reinterpret_cast<char*>(&slotid_)) + sizeof(puldevinfolen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
}

void Req_C_Extend_GetDevInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_GetDevInfo_pkcs11_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pdevinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ipparam_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&puldevinfolen_) -
      reinterpret_cast<char*>(&ipparam_)) + sizeof(puldevinfolen_));
}

Req_C_Extend_GetDevInfo::~Req_C_Extend_GetDevInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  SharedDtor();
}

void Req_C_Extend_GetDevInfo::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pdevinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ipparam_;
}

void Req_C_Extend_GetDevInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_GetDevInfo& Req_C_Extend_GetDevInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_GetDevInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_GetDevInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      username_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pdevinfo_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(ipparam_ != nullptr);
      ipparam_->Clear();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&slotid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&puldevinfolen_) -
        reinterpret_cast<char*>(&slotid_)) + sizeof(puldevinfolen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_GetDevInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_GetDevInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional string userName = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.weston.pkcs11.Req_C_Extend_GetDevInfo.userName");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional .com.weston.pkcs11.PRO_ipparam ipparam = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::com::weston::pkcs11::PRO_ipparam::_InternalParse;
        object = msg->mutable_ipparam();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // optional bytes pDevInfo = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdevinfo();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pUlDevInfoLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_puldevinfolen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_GetDevInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string userName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.weston.pkcs11.Req_C_Extend_GetDevInfo.userName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.weston.pkcs11.PRO_ipparam ipparam = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ipparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pDevInfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdevinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pUlDevInfoLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_puldevinfolen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puldevinfolen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_GetDevInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // optional string userName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.weston.pkcs11.Req_C_Extend_GetDevInfo.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional .com.weston.pkcs11.PRO_ipparam ipparam = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::ipparam(this), output);
  }

  // optional bytes pDevInfo = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pdevinfo(), output);
  }

  // optional uint32 pUlDevInfoLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->puldevinfolen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
}

::google::protobuf::uint8* Req_C_Extend_GetDevInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // optional string userName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.weston.pkcs11.Req_C_Extend_GetDevInfo.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional .com.weston.pkcs11.PRO_ipparam ipparam = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::ipparam(this), target);
  }

  // optional bytes pDevInfo = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pdevinfo(), target);
  }

  // optional uint32 pUlDevInfoLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->puldevinfolen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  return target;
}

size_t Req_C_Extend_GetDevInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 slotID = 1;
  if (has_slotid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string userName = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional bytes pDevInfo = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdevinfo());
    }

    // optional .com.weston.pkcs11.PRO_ipparam ipparam = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *ipparam_);
    }

  }
  // optional uint32 pUlDevInfoLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->puldevinfolen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_GetDevInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_GetDevInfo* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_GetDevInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
    MergeFrom(*source);
  }
}

void Req_C_Extend_GetDevInfo::MergeFrom(const Req_C_Extend_GetDevInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pdevinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdevinfo_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_ipparam()->::com::weston::pkcs11::PRO_ipparam::MergeFrom(from.ipparam());
    }
    if (cached_has_bits & 0x00000008u) {
      slotid_ = from.slotid_;
    }
    if (cached_has_bits & 0x00000010u) {
      puldevinfolen_ = from.puldevinfolen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_GetDevInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_GetDevInfo::CopyFrom(const Req_C_Extend_GetDevInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_GetDevInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_GetDevInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_ipparam()) {
    if (!this->ipparam_->IsInitialized()) return false;
  }
  return true;
}

void Req_C_Extend_GetDevInfo::Swap(Req_C_Extend_GetDevInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_GetDevInfo::InternalSwap(Req_C_Extend_GetDevInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pdevinfo_.Swap(&other->pdevinfo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(ipparam_, other->ipparam_);
  swap(slotid_, other->slotid_);
  swap(puldevinfolen_, other->puldevinfolen_);
}

::google::protobuf::Metadata Req_C_Extend_GetDevInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_GetDevInfo::InitAsDefaultInstance() {
}
class Rsp_C_Extend_GetDevInfo::HasBitSetters {
 public:
  static void set_has_pdevinfo(Rsp_C_Extend_GetDevInfo* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_puldevinfolen(Rsp_C_Extend_GetDevInfo* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_GetDevInfo::kPDevInfoFieldNumber;
const int Rsp_C_Extend_GetDevInfo::kPUlDevInfoLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_GetDevInfo::Rsp_C_Extend_GetDevInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
}
Rsp_C_Extend_GetDevInfo::Rsp_C_Extend_GetDevInfo(const Rsp_C_Extend_GetDevInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdevinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdevinfo()) {
    pdevinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdevinfo_);
  }
  puldevinfolen_ = from.puldevinfolen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
}

void Rsp_C_Extend_GetDevInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Extend_GetDevInfo_pkcs11_2eproto.base);
  pdevinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  puldevinfolen_ = 0u;
}

Rsp_C_Extend_GetDevInfo::~Rsp_C_Extend_GetDevInfo() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  SharedDtor();
}

void Rsp_C_Extend_GetDevInfo::SharedDtor() {
  pdevinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Extend_GetDevInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_GetDevInfo& Rsp_C_Extend_GetDevInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_GetDevInfo_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_GetDevInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pdevinfo_.ClearNonDefaultToEmptyNoArena();
  }
  puldevinfolen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_GetDevInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_GetDevInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pDevInfo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdevinfo();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pUlDevInfoLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_puldevinfolen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_GetDevInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pDevInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdevinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pUlDevInfoLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_puldevinfolen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &puldevinfolen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_GetDevInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pDevInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pdevinfo(), output);
  }

  // optional uint32 pUlDevInfoLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->puldevinfolen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
}

::google::protobuf::uint8* Rsp_C_Extend_GetDevInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pDevInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pdevinfo(), target);
  }

  // optional uint32 pUlDevInfoLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->puldevinfolen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  return target;
}

size_t Rsp_C_Extend_GetDevInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pDevInfo = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdevinfo());
    }

    // optional uint32 pUlDevInfoLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->puldevinfolen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_GetDevInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_GetDevInfo* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_GetDevInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_GetDevInfo::MergeFrom(const Rsp_C_Extend_GetDevInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdevinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdevinfo_);
    }
    if (cached_has_bits & 0x00000002u) {
      puldevinfolen_ = from.puldevinfolen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Extend_GetDevInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_GetDevInfo::CopyFrom(const Rsp_C_Extend_GetDevInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_GetDevInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_GetDevInfo::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_GetDevInfo::Swap(Rsp_C_Extend_GetDevInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_GetDevInfo::InternalSwap(Rsp_C_Extend_GetDevInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdevinfo_.Swap(&other->pdevinfo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(puldevinfolen_, other->puldevinfolen_);
}

::google::protobuf::Metadata Rsp_C_Extend_GetDevInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_DevSign::InitAsDefaultInstance() {
}
class Req_C_Extend_DevSign::HasBitSetters {
 public:
  static void set_has_slotid(Req_C_Extend_DevSign* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pdata(Req_C_Extend_DevSign* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_uldatalen(Req_C_Extend_DevSign* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_psignature(Req_C_Extend_DevSign* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pulsignaturelen(Req_C_Extend_DevSign* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_DevSign::kSlotIDFieldNumber;
const int Req_C_Extend_DevSign::kPDataFieldNumber;
const int Req_C_Extend_DevSign::kUlDataLenFieldNumber;
const int Req_C_Extend_DevSign::kPSignatureFieldNumber;
const int Req_C_Extend_DevSign::kPulSignatureLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_DevSign::Req_C_Extend_DevSign()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_DevSign)
}
Req_C_Extend_DevSign::Req_C_Extend_DevSign(const Req_C_Extend_DevSign& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdata()) {
    pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
  }
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psignature()) {
    psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
  }
  ::memcpy(&slotid_, &from.slotid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulsignaturelen_) -
    reinterpret_cast<char*>(&slotid_)) + sizeof(pulsignaturelen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_DevSign)
}

void Req_C_Extend_DevSign::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_DevSign_pkcs11_2eproto.base);
  pdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&slotid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulsignaturelen_) -
      reinterpret_cast<char*>(&slotid_)) + sizeof(pulsignaturelen_));
}

Req_C_Extend_DevSign::~Req_C_Extend_DevSign() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_DevSign)
  SharedDtor();
}

void Req_C_Extend_DevSign::SharedDtor() {
  pdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_DevSign::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_DevSign& Req_C_Extend_DevSign::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_DevSign_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_DevSign::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_DevSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pdata_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      psignature_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&slotid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulsignaturelen_) -
        reinterpret_cast<char*>(&slotid_)) + sizeof(pulsignaturelen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_DevSign::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_DevSign*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_slotid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required bytes pData = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulDataLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_uldatalen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pSignature = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_psignature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulSignatureLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_pulsignaturelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_DevSign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_DevSign)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slotID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_slotid(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes pData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulDataLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_uldatalen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uldatalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pSignature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_psignature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulSignatureLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_pulsignaturelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulsignaturelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_DevSign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_DevSign)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_DevSign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_DevSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slotid(), output);
  }

  // required bytes pData = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pdata(), output);
  }

  // required uint32 ulDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uldatalen(), output);
  }

  // optional bytes pSignature = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->psignature(), output);
  }

  // optional uint32 pulSignatureLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pulsignaturelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_DevSign)
}

::google::protobuf::uint8* Req_C_Extend_DevSign::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_DevSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slotID = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slotid(), target);
  }

  // required bytes pData = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pdata(), target);
  }

  // required uint32 ulDataLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uldatalen(), target);
  }

  // optional bytes pSignature = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->psignature(), target);
  }

  // optional uint32 pulSignatureLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pulsignaturelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_DevSign)
  return target;
}

size_t Req_C_Extend_DevSign::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_DevSign)
  size_t total_size = 0;

  if (has_pdata()) {
    // required bytes pData = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pdata());
  }

  if (has_slotid()) {
    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());
  }

  if (has_uldatalen()) {
    // required uint32 ulDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldatalen());
  }

  return total_size;
}
size_t Req_C_Extend_DevSign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_DevSign)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000d) ^ 0x0000000d) == 0) {  // All required fields are present.
    // required bytes pData = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pdata());

    // required uint32 slotID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slotid());

    // required uint32 ulDataLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uldatalen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pSignature = 4;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->psignature());
  }

  // optional uint32 pulSignatureLen = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulsignaturelen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_DevSign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_DevSign)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_DevSign* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_DevSign>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_DevSign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_DevSign)
    MergeFrom(*source);
  }
}

void Req_C_Extend_DevSign::MergeFrom(const Req_C_Extend_DevSign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_DevSign)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdata_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
    }
    if (cached_has_bits & 0x00000004u) {
      slotid_ = from.slotid_;
    }
    if (cached_has_bits & 0x00000008u) {
      uldatalen_ = from.uldatalen_;
    }
    if (cached_has_bits & 0x00000010u) {
      pulsignaturelen_ = from.pulsignaturelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_DevSign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_DevSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_DevSign::CopyFrom(const Req_C_Extend_DevSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_DevSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_DevSign::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;
  return true;
}

void Req_C_Extend_DevSign::Swap(Req_C_Extend_DevSign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_DevSign::InternalSwap(Req_C_Extend_DevSign* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdata_.Swap(&other->pdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  psignature_.Swap(&other->psignature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(slotid_, other->slotid_);
  swap(uldatalen_, other->uldatalen_);
  swap(pulsignaturelen_, other->pulsignaturelen_);
}

::google::protobuf::Metadata Req_C_Extend_DevSign::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_DevSign::InitAsDefaultInstance() {
}
class Rsp_C_Extend_DevSign::HasBitSetters {
 public:
  static void set_has_psignature(Rsp_C_Extend_DevSign* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulsignaturelen(Rsp_C_Extend_DevSign* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_DevSign::kPSignatureFieldNumber;
const int Rsp_C_Extend_DevSign::kPulSignatureLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_DevSign::Rsp_C_Extend_DevSign()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_DevSign)
}
Rsp_C_Extend_DevSign::Rsp_C_Extend_DevSign(const Rsp_C_Extend_DevSign& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_psignature()) {
    psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
  }
  pulsignaturelen_ = from.pulsignaturelen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_DevSign)
}

void Rsp_C_Extend_DevSign::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Extend_DevSign_pkcs11_2eproto.base);
  psignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulsignaturelen_ = 0u;
}

Rsp_C_Extend_DevSign::~Rsp_C_Extend_DevSign() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  SharedDtor();
}

void Rsp_C_Extend_DevSign::SharedDtor() {
  psignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Extend_DevSign::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_DevSign& Rsp_C_Extend_DevSign::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_DevSign_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_DevSign::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    psignature_.ClearNonDefaultToEmptyNoArena();
  }
  pulsignaturelen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_DevSign::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_DevSign*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pSignature = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_psignature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulSignatureLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulsignaturelen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_DevSign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pSignature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_psignature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulSignatureLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulsignaturelen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulsignaturelen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_DevSign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pSignature = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->psignature(), output);
  }

  // optional uint32 pulSignatureLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulsignaturelen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_DevSign)
}

::google::protobuf::uint8* Rsp_C_Extend_DevSign::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pSignature = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->psignature(), target);
  }

  // optional uint32 pulSignatureLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulsignaturelen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  return target;
}

size_t Rsp_C_Extend_DevSign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pSignature = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->psignature());
    }

    // optional uint32 pulSignatureLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulsignaturelen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_DevSign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_DevSign* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_DevSign>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_DevSign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_DevSign)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_DevSign::MergeFrom(const Rsp_C_Extend_DevSign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      psignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psignature_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulsignaturelen_ = from.pulsignaturelen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Extend_DevSign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_DevSign::CopyFrom(const Rsp_C_Extend_DevSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_DevSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_DevSign::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_DevSign::Swap(Rsp_C_Extend_DevSign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_DevSign::InternalSwap(Rsp_C_Extend_DevSign* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  psignature_.Swap(&other->psignature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulsignaturelen_, other->pulsignaturelen_);
}

::google::protobuf::Metadata Rsp_C_Extend_DevSign::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_Set_DestroyKey::InitAsDefaultInstance() {
}
class Req_C_Extend_Set_DestroyKey::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_Set_DestroyKey* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_pdestroykeympk(Req_C_Extend_Set_DestroyKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_ulmpklen(Req_C_Extend_Set_DestroyKey* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_pbmpkiv(Req_C_Extend_Set_DestroyKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_ulmpkivlen(Req_C_Extend_Set_DestroyKey* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_Set_DestroyKey::kHSessionFieldNumber;
const int Req_C_Extend_Set_DestroyKey::kPDestroyKeyMpkFieldNumber;
const int Req_C_Extend_Set_DestroyKey::kUlMpkLenFieldNumber;
const int Req_C_Extend_Set_DestroyKey::kPbMpkIVFieldNumber;
const int Req_C_Extend_Set_DestroyKey::kUlMpkIVLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_Set_DestroyKey::Req_C_Extend_Set_DestroyKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
}
Req_C_Extend_Set_DestroyKey::Req_C_Extend_Set_DestroyKey(const Req_C_Extend_Set_DestroyKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pdestroykeympk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pdestroykeympk()) {
    pdestroykeympk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdestroykeympk_);
  }
  pbmpkiv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pbmpkiv()) {
    pbmpkiv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbmpkiv_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&ulmpkivlen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(ulmpkivlen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
}

void Req_C_Extend_Set_DestroyKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_Set_DestroyKey_pkcs11_2eproto.base);
  pdestroykeympk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbmpkiv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ulmpkivlen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(ulmpkivlen_));
}

Req_C_Extend_Set_DestroyKey::~Req_C_Extend_Set_DestroyKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  SharedDtor();
}

void Req_C_Extend_Set_DestroyKey::SharedDtor() {
  pdestroykeympk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbmpkiv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_Set_DestroyKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_Set_DestroyKey& Req_C_Extend_Set_DestroyKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_Set_DestroyKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_Set_DestroyKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      pdestroykeympk_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      pbmpkiv_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ulmpkivlen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(ulmpkivlen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_Set_DestroyKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_Set_DestroyKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pDestroyKeyMpk = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pdestroykeympk();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulMpkLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_ulmpklen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pbMpkIV = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pbmpkiv();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 ulMpkIVLen = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_ulmpkivlen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_Set_DestroyKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pDestroyKeyMpk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pdestroykeympk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMpkLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_ulmpklen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmpklen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pbMpkIV = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pbmpkiv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ulMpkIVLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_ulmpkivlen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ulmpkivlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_Set_DestroyKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pDestroyKeyMpk = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pdestroykeympk(), output);
  }

  // required uint32 ulMpkLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ulmpklen(), output);
  }

  // optional bytes pbMpkIV = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pbmpkiv(), output);
  }

  // required uint32 ulMpkIVLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ulmpkivlen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
}

::google::protobuf::uint8* Req_C_Extend_Set_DestroyKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pDestroyKeyMpk = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pdestroykeympk(), target);
  }

  // required uint32 ulMpkLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ulmpklen(), target);
  }

  // optional bytes pbMpkIV = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pbmpkiv(), target);
  }

  // required uint32 ulMpkIVLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ulmpkivlen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  return target;
}

size_t Req_C_Extend_Set_DestroyKey::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_ulmpklen()) {
    // required uint32 ulMpkLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpklen());
  }

  if (has_ulmpkivlen()) {
    // required uint32 ulMpkIVLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpkivlen());
  }

  return total_size;
}
size_t Req_C_Extend_Set_DestroyKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001c) ^ 0x0000001c) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 ulMpkLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpklen());

    // required uint32 ulMpkIVLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ulmpkivlen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pDestroyKeyMpk = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pdestroykeympk());
    }

    // optional bytes pbMpkIV = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pbmpkiv());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_Set_DestroyKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_Set_DestroyKey* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_Set_DestroyKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
    MergeFrom(*source);
  }
}

void Req_C_Extend_Set_DestroyKey::MergeFrom(const Req_C_Extend_Set_DestroyKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pdestroykeympk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pdestroykeympk_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      pbmpkiv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbmpkiv_);
    }
    if (cached_has_bits & 0x00000004u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000008u) {
      ulmpklen_ = from.ulmpklen_;
    }
    if (cached_has_bits & 0x00000010u) {
      ulmpkivlen_ = from.ulmpkivlen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_Set_DestroyKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_Set_DestroyKey::CopyFrom(const Req_C_Extend_Set_DestroyKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_Set_DestroyKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_Set_DestroyKey::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;
  return true;
}

void Req_C_Extend_Set_DestroyKey::Swap(Req_C_Extend_Set_DestroyKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_Set_DestroyKey::InternalSwap(Req_C_Extend_Set_DestroyKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pdestroykeympk_.Swap(&other->pdestroykeympk_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pbmpkiv_.Swap(&other->pbmpkiv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(ulmpklen_, other->ulmpklen_);
  swap(ulmpkivlen_, other->ulmpkivlen_);
}

::google::protobuf::Metadata Req_C_Extend_Set_DestroyKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_Set_DestroyKey::InitAsDefaultInstance() {
}
class Rsp_C_Extend_Set_DestroyKey::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_Set_DestroyKey::Rsp_C_Extend_Set_DestroyKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
}
Rsp_C_Extend_Set_DestroyKey::Rsp_C_Extend_Set_DestroyKey(const Rsp_C_Extend_Set_DestroyKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
}

void Rsp_C_Extend_Set_DestroyKey::SharedCtor() {
}

Rsp_C_Extend_Set_DestroyKey::~Rsp_C_Extend_Set_DestroyKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  SharedDtor();
}

void Rsp_C_Extend_Set_DestroyKey::SharedDtor() {
}

void Rsp_C_Extend_Set_DestroyKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_Set_DestroyKey& Rsp_C_Extend_Set_DestroyKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_Set_DestroyKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_Set_DestroyKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_Set_DestroyKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_Set_DestroyKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_Set_DestroyKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_Set_DestroyKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
}

::google::protobuf::uint8* Rsp_C_Extend_Set_DestroyKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  return target;
}

size_t Rsp_C_Extend_Set_DestroyKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_Set_DestroyKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_Set_DestroyKey* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_Set_DestroyKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_Set_DestroyKey::MergeFrom(const Rsp_C_Extend_Set_DestroyKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_C_Extend_Set_DestroyKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_Set_DestroyKey::CopyFrom(const Rsp_C_Extend_Set_DestroyKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Set_DestroyKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_Set_DestroyKey::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_Set_DestroyKey::Swap(Rsp_C_Extend_Set_DestroyKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_Set_DestroyKey::InternalSwap(Rsp_C_Extend_Set_DestroyKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_C_Extend_Set_DestroyKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_C_Extend_Get_ExchangePubKey::InitAsDefaultInstance() {
}
class Req_C_Extend_Get_ExchangePubKey::HasBitSetters {
 public:
  static void set_has_hsession(Req_C_Extend_Get_ExchangePubKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_pexchangepubkeyvalue(Req_C_Extend_Get_ExchangePubKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulkeylen(Req_C_Extend_Get_ExchangePubKey* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_C_Extend_Get_ExchangePubKey::kHSessionFieldNumber;
const int Req_C_Extend_Get_ExchangePubKey::kPExchangePubKeyValueFieldNumber;
const int Req_C_Extend_Get_ExchangePubKey::kPulKeyLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_C_Extend_Get_ExchangePubKey::Req_C_Extend_Get_ExchangePubKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
}
Req_C_Extend_Get_ExchangePubKey::Req_C_Extend_Get_ExchangePubKey(const Req_C_Extend_Get_ExchangePubKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pexchangepubkeyvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pexchangepubkeyvalue()) {
    pexchangepubkeyvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pexchangepubkeyvalue_);
  }
  ::memcpy(&hsession_, &from.hsession_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulkeylen_) -
    reinterpret_cast<char*>(&hsession_)) + sizeof(pulkeylen_));
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
}

void Req_C_Extend_Get_ExchangePubKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_C_Extend_Get_ExchangePubKey_pkcs11_2eproto.base);
  pexchangepubkeyvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hsession_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulkeylen_) -
      reinterpret_cast<char*>(&hsession_)) + sizeof(pulkeylen_));
}

Req_C_Extend_Get_ExchangePubKey::~Req_C_Extend_Get_ExchangePubKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  SharedDtor();
}

void Req_C_Extend_Get_ExchangePubKey::SharedDtor() {
  pexchangepubkeyvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_C_Extend_Get_ExchangePubKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_C_Extend_Get_ExchangePubKey& Req_C_Extend_Get_ExchangePubKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_C_Extend_Get_ExchangePubKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_C_Extend_Get_ExchangePubKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pexchangepubkeyvalue_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&hsession_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pulkeylen_) -
        reinterpret_cast<char*>(&hsession_)) + sizeof(pulkeylen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_C_Extend_Get_ExchangePubKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_C_Extend_Get_ExchangePubKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_hsession(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // optional bytes pExchangePubKeyValue = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pexchangepubkeyvalue();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required uint32 pulKeyLen = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_pulkeylen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_C_Extend_Get_ExchangePubKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hSession = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_hsession(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsession_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pExchangePubKeyValue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pexchangepubkeyvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 pulKeyLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_pulkeylen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulkeylen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_C_Extend_Get_ExchangePubKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hsession(), output);
  }

  // optional bytes pExchangePubKeyValue = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->pexchangepubkeyvalue(), output);
  }

  // required uint32 pulKeyLen = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pulkeylen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
}

::google::protobuf::uint8* Req_C_Extend_Get_ExchangePubKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 hSession = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hsession(), target);
  }

  // optional bytes pExchangePubKeyValue = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->pexchangepubkeyvalue(), target);
  }

  // required uint32 pulKeyLen = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pulkeylen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  return target;
}

size_t Req_C_Extend_Get_ExchangePubKey::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  size_t total_size = 0;

  if (has_hsession()) {
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());
  }

  if (has_pulkeylen()) {
    // required uint32 pulKeyLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulkeylen());
  }

  return total_size;
}
size_t Req_C_Extend_Get_ExchangePubKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 hSession = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hsession());

    // required uint32 pulKeyLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulkeylen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes pExchangePubKeyValue = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pexchangepubkeyvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_C_Extend_Get_ExchangePubKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_C_Extend_Get_ExchangePubKey* source =
      ::google::protobuf::DynamicCastToGenerated<Req_C_Extend_Get_ExchangePubKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
    MergeFrom(*source);
  }
}

void Req_C_Extend_Get_ExchangePubKey::MergeFrom(const Req_C_Extend_Get_ExchangePubKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pexchangepubkeyvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pexchangepubkeyvalue_);
    }
    if (cached_has_bits & 0x00000002u) {
      hsession_ = from.hsession_;
    }
    if (cached_has_bits & 0x00000004u) {
      pulkeylen_ = from.pulkeylen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Req_C_Extend_Get_ExchangePubKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_C_Extend_Get_ExchangePubKey::CopyFrom(const Req_C_Extend_Get_ExchangePubKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_C_Extend_Get_ExchangePubKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_C_Extend_Get_ExchangePubKey::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void Req_C_Extend_Get_ExchangePubKey::Swap(Req_C_Extend_Get_ExchangePubKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_C_Extend_Get_ExchangePubKey::InternalSwap(Req_C_Extend_Get_ExchangePubKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pexchangepubkeyvalue_.Swap(&other->pexchangepubkeyvalue_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(hsession_, other->hsession_);
  swap(pulkeylen_, other->pulkeylen_);
}

::google::protobuf::Metadata Req_C_Extend_Get_ExchangePubKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_C_Extend_Get_ExchangePubKey::InitAsDefaultInstance() {
}
class Rsp_C_Extend_Get_ExchangePubKey::HasBitSetters {
 public:
  static void set_has_pexchangepubkeyvalue(Rsp_C_Extend_Get_ExchangePubKey* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_pulkeylen(Rsp_C_Extend_Get_ExchangePubKey* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rsp_C_Extend_Get_ExchangePubKey::kPExchangePubKeyValueFieldNumber;
const int Rsp_C_Extend_Get_ExchangePubKey::kPulKeyLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_C_Extend_Get_ExchangePubKey::Rsp_C_Extend_Get_ExchangePubKey()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
}
Rsp_C_Extend_Get_ExchangePubKey::Rsp_C_Extend_Get_ExchangePubKey(const Rsp_C_Extend_Get_ExchangePubKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pexchangepubkeyvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pexchangepubkeyvalue()) {
    pexchangepubkeyvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pexchangepubkeyvalue_);
  }
  pulkeylen_ = from.pulkeylen_;
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
}

void Rsp_C_Extend_Get_ExchangePubKey::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Rsp_C_Extend_Get_ExchangePubKey_pkcs11_2eproto.base);
  pexchangepubkeyvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pulkeylen_ = 0u;
}

Rsp_C_Extend_Get_ExchangePubKey::~Rsp_C_Extend_Get_ExchangePubKey() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  SharedDtor();
}

void Rsp_C_Extend_Get_ExchangePubKey::SharedDtor() {
  pexchangepubkeyvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Rsp_C_Extend_Get_ExchangePubKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_C_Extend_Get_ExchangePubKey& Rsp_C_Extend_Get_ExchangePubKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_C_Extend_Get_ExchangePubKey_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_C_Extend_Get_ExchangePubKey::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    pexchangepubkeyvalue_.ClearNonDefaultToEmptyNoArena();
  }
  pulkeylen_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_C_Extend_Get_ExchangePubKey::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_C_Extend_Get_ExchangePubKey*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // optional bytes pExchangePubKeyValue = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_pexchangepubkeyvalue();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // optional uint32 pulKeyLen = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_pulkeylen(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_C_Extend_Get_ExchangePubKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes pExchangePubKeyValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pexchangepubkeyvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pulKeyLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_pulkeylen(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulkeylen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_C_Extend_Get_ExchangePubKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pExchangePubKeyValue = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->pexchangepubkeyvalue(), output);
  }

  // optional uint32 pulKeyLen = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pulkeylen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
}

::google::protobuf::uint8* Rsp_C_Extend_Get_ExchangePubKey::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes pExchangePubKeyValue = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->pexchangepubkeyvalue(), target);
  }

  // optional uint32 pulKeyLen = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pulkeylen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  return target;
}

size_t Rsp_C_Extend_Get_ExchangePubKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes pExchangePubKeyValue = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pexchangepubkeyvalue());
    }

    // optional uint32 pulKeyLen = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pulkeylen());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_C_Extend_Get_ExchangePubKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_C_Extend_Get_ExchangePubKey* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_C_Extend_Get_ExchangePubKey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
    MergeFrom(*source);
  }
}

void Rsp_C_Extend_Get_ExchangePubKey::MergeFrom(const Rsp_C_Extend_Get_ExchangePubKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      pexchangepubkeyvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pexchangepubkeyvalue_);
    }
    if (cached_has_bits & 0x00000002u) {
      pulkeylen_ = from.pulkeylen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Rsp_C_Extend_Get_ExchangePubKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_C_Extend_Get_ExchangePubKey::CopyFrom(const Rsp_C_Extend_Get_ExchangePubKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_C_Extend_Get_ExchangePubKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_C_Extend_Get_ExchangePubKey::IsInitialized() const {
  return true;
}

void Rsp_C_Extend_Get_ExchangePubKey::Swap(Rsp_C_Extend_Get_ExchangePubKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_C_Extend_Get_ExchangePubKey::InternalSwap(Rsp_C_Extend_Get_ExchangePubKey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pexchangepubkeyvalue_.Swap(&other->pexchangepubkeyvalue_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pulkeylen_, other->pulkeylen_);
}

::google::protobuf::Metadata Rsp_C_Extend_Get_ExchangePubKey::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_softCreateCipherCard::InitAsDefaultInstance() {
}
class Req_softCreateCipherCard::HasBitSetters {
 public:
  static void set_has_token(Req_softCreateCipherCard* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_username(Req_softCreateCipherCard* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_licsesrveraddr(Req_softCreateCipherCard* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_csppaddr(Req_softCreateCipherCard* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Req_softCreateCipherCard::kTokenFieldNumber;
const int Req_softCreateCipherCard::kUserNameFieldNumber;
const int Req_softCreateCipherCard::kLicSesrverAddrFieldNumber;
const int Req_softCreateCipherCard::kCsppAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_softCreateCipherCard::Req_softCreateCipherCard()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_softCreateCipherCard)
}
Req_softCreateCipherCard::Req_softCreateCipherCard(const Req_softCreateCipherCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  licsesrveraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_licsesrveraddr()) {
    licsesrveraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.licsesrveraddr_);
  }
  csppaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_csppaddr()) {
    csppaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.csppaddr_);
  }
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_softCreateCipherCard)
}

void Req_softCreateCipherCard::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Req_softCreateCipherCard_pkcs11_2eproto.base);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  licsesrveraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  csppaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Req_softCreateCipherCard::~Req_softCreateCipherCard() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_softCreateCipherCard)
  SharedDtor();
}

void Req_softCreateCipherCard::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  licsesrveraddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  csppaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Req_softCreateCipherCard::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_softCreateCipherCard& Req_softCreateCipherCard::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_softCreateCipherCard_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_softCreateCipherCard::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_softCreateCipherCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      username_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      licsesrveraddr_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      csppaddr_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_softCreateCipherCard::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_softCreateCipherCard*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required string token = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.weston.pkcs11.Req_softCreateCipherCard.token");
        object = msg->mutable_token();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string userName = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.weston.pkcs11.Req_softCreateCipherCard.userName");
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string licSesrverAddr = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.weston.pkcs11.Req_softCreateCipherCard.licSesrverAddr");
        object = msg->mutable_licsesrveraddr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // required string csppAddr = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("com.weston.pkcs11.Req_softCreateCipherCard.csppAddr");
        object = msg->mutable_csppaddr();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8Verify;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8Verify(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_softCreateCipherCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_softCreateCipherCard)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.weston.pkcs11.Req_softCreateCipherCard.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string userName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.weston.pkcs11.Req_softCreateCipherCard.userName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string licSesrverAddr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_licsesrveraddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->licsesrveraddr().data(), static_cast<int>(this->licsesrveraddr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.weston.pkcs11.Req_softCreateCipherCard.licSesrverAddr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string csppAddr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_csppaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->csppaddr().data(), static_cast<int>(this->csppaddr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.weston.pkcs11.Req_softCreateCipherCard.csppAddr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_softCreateCipherCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_softCreateCipherCard)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_softCreateCipherCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_softCreateCipherCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.weston.pkcs11.Req_softCreateCipherCard.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  // required string userName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.weston.pkcs11.Req_softCreateCipherCard.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // required string licSesrverAddr = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->licsesrveraddr().data(), static_cast<int>(this->licsesrveraddr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.weston.pkcs11.Req_softCreateCipherCard.licSesrverAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->licsesrveraddr(), output);
  }

  // required string csppAddr = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csppaddr().data(), static_cast<int>(this->csppaddr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.weston.pkcs11.Req_softCreateCipherCard.csppAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->csppaddr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_softCreateCipherCard)
}

::google::protobuf::uint8* Req_softCreateCipherCard::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_softCreateCipherCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.weston.pkcs11.Req_softCreateCipherCard.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  // required string userName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.weston.pkcs11.Req_softCreateCipherCard.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // required string licSesrverAddr = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->licsesrveraddr().data(), static_cast<int>(this->licsesrveraddr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.weston.pkcs11.Req_softCreateCipherCard.licSesrverAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->licsesrveraddr(), target);
  }

  // required string csppAddr = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csppaddr().data(), static_cast<int>(this->csppaddr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.weston.pkcs11.Req_softCreateCipherCard.csppAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->csppaddr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_softCreateCipherCard)
  return target;
}

size_t Req_softCreateCipherCard::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.weston.pkcs11.Req_softCreateCipherCard)
  size_t total_size = 0;

  if (has_token()) {
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_username()) {
    // required string userName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  if (has_licsesrveraddr()) {
    // required string licSesrverAddr = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->licsesrveraddr());
  }

  if (has_csppaddr()) {
    // required string csppAddr = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->csppaddr());
  }

  return total_size;
}
size_t Req_softCreateCipherCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_softCreateCipherCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string token = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required string userName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());

    // required string licSesrverAddr = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->licsesrveraddr());

    // required string csppAddr = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->csppaddr());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_softCreateCipherCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_softCreateCipherCard)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_softCreateCipherCard* source =
      ::google::protobuf::DynamicCastToGenerated<Req_softCreateCipherCard>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_softCreateCipherCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_softCreateCipherCard)
    MergeFrom(*source);
  }
}

void Req_softCreateCipherCard::MergeFrom(const Req_softCreateCipherCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_softCreateCipherCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      licsesrveraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.licsesrveraddr_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      csppaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.csppaddr_);
    }
  }
}

void Req_softCreateCipherCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_softCreateCipherCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_softCreateCipherCard::CopyFrom(const Req_softCreateCipherCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_softCreateCipherCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_softCreateCipherCard::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void Req_softCreateCipherCard::Swap(Req_softCreateCipherCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_softCreateCipherCard::InternalSwap(Req_softCreateCipherCard* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  licsesrveraddr_.Swap(&other->licsesrveraddr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  csppaddr_.Swap(&other->csppaddr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Req_softCreateCipherCard::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_softCreateCipherCard::InitAsDefaultInstance() {
}
class Rsp_softCreateCipherCard::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_softCreateCipherCard::Rsp_softCreateCipherCard()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_softCreateCipherCard)
}
Rsp_softCreateCipherCard::Rsp_softCreateCipherCard(const Rsp_softCreateCipherCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_softCreateCipherCard)
}

void Rsp_softCreateCipherCard::SharedCtor() {
}

Rsp_softCreateCipherCard::~Rsp_softCreateCipherCard() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_softCreateCipherCard)
  SharedDtor();
}

void Rsp_softCreateCipherCard::SharedDtor() {
}

void Rsp_softCreateCipherCard::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_softCreateCipherCard& Rsp_softCreateCipherCard::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_softCreateCipherCard_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_softCreateCipherCard::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_softCreateCipherCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_softCreateCipherCard::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_softCreateCipherCard*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_softCreateCipherCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_softCreateCipherCard)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_softCreateCipherCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_softCreateCipherCard)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_softCreateCipherCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_softCreateCipherCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_softCreateCipherCard)
}

::google::protobuf::uint8* Rsp_softCreateCipherCard::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_softCreateCipherCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_softCreateCipherCard)
  return target;
}

size_t Rsp_softCreateCipherCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_softCreateCipherCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_softCreateCipherCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_softCreateCipherCard)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_softCreateCipherCard* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_softCreateCipherCard>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_softCreateCipherCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_softCreateCipherCard)
    MergeFrom(*source);
  }
}

void Rsp_softCreateCipherCard::MergeFrom(const Rsp_softCreateCipherCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_softCreateCipherCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_softCreateCipherCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_softCreateCipherCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_softCreateCipherCard::CopyFrom(const Rsp_softCreateCipherCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_softCreateCipherCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_softCreateCipherCard::IsInitialized() const {
  return true;
}

void Rsp_softCreateCipherCard::Swap(Rsp_softCreateCipherCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_softCreateCipherCard::InternalSwap(Rsp_softCreateCipherCard* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_softCreateCipherCard::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Req_DestroyCipherCard::InitAsDefaultInstance() {
}
class Req_DestroyCipherCard::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Req_DestroyCipherCard::Req_DestroyCipherCard()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Req_DestroyCipherCard)
}
Req_DestroyCipherCard::Req_DestroyCipherCard(const Req_DestroyCipherCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Req_DestroyCipherCard)
}

void Req_DestroyCipherCard::SharedCtor() {
}

Req_DestroyCipherCard::~Req_DestroyCipherCard() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Req_DestroyCipherCard)
  SharedDtor();
}

void Req_DestroyCipherCard::SharedDtor() {
}

void Req_DestroyCipherCard::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Req_DestroyCipherCard& Req_DestroyCipherCard::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Req_DestroyCipherCard_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Req_DestroyCipherCard::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Req_DestroyCipherCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Req_DestroyCipherCard::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Req_DestroyCipherCard*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Req_DestroyCipherCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Req_DestroyCipherCard)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Req_DestroyCipherCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Req_DestroyCipherCard)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Req_DestroyCipherCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Req_DestroyCipherCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Req_DestroyCipherCard)
}

::google::protobuf::uint8* Req_DestroyCipherCard::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Req_DestroyCipherCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Req_DestroyCipherCard)
  return target;
}

size_t Req_DestroyCipherCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Req_DestroyCipherCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Req_DestroyCipherCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Req_DestroyCipherCard)
  GOOGLE_DCHECK_NE(&from, this);
  const Req_DestroyCipherCard* source =
      ::google::protobuf::DynamicCastToGenerated<Req_DestroyCipherCard>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Req_DestroyCipherCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Req_DestroyCipherCard)
    MergeFrom(*source);
  }
}

void Req_DestroyCipherCard::MergeFrom(const Req_DestroyCipherCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Req_DestroyCipherCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Req_DestroyCipherCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Req_DestroyCipherCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Req_DestroyCipherCard::CopyFrom(const Req_DestroyCipherCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Req_DestroyCipherCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Req_DestroyCipherCard::IsInitialized() const {
  return true;
}

void Req_DestroyCipherCard::Swap(Req_DestroyCipherCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Req_DestroyCipherCard::InternalSwap(Req_DestroyCipherCard* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Req_DestroyCipherCard::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Rsp_DestroyCipherCard::InitAsDefaultInstance() {
}
class Rsp_DestroyCipherCard::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rsp_DestroyCipherCard::Rsp_DestroyCipherCard()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.weston.pkcs11.Rsp_DestroyCipherCard)
}
Rsp_DestroyCipherCard::Rsp_DestroyCipherCard(const Rsp_DestroyCipherCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.weston.pkcs11.Rsp_DestroyCipherCard)
}

void Rsp_DestroyCipherCard::SharedCtor() {
}

Rsp_DestroyCipherCard::~Rsp_DestroyCipherCard() {
  // @@protoc_insertion_point(destructor:com.weston.pkcs11.Rsp_DestroyCipherCard)
  SharedDtor();
}

void Rsp_DestroyCipherCard::SharedDtor() {
}

void Rsp_DestroyCipherCard::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rsp_DestroyCipherCard& Rsp_DestroyCipherCard::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Rsp_DestroyCipherCard_pkcs11_2eproto.base);
  return *internal_default_instance();
}


void Rsp_DestroyCipherCard::Clear() {
// @@protoc_insertion_point(message_clear_start:com.weston.pkcs11.Rsp_DestroyCipherCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Rsp_DestroyCipherCard::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Rsp_DestroyCipherCard*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Rsp_DestroyCipherCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.weston.pkcs11.Rsp_DestroyCipherCard)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.weston.pkcs11.Rsp_DestroyCipherCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.weston.pkcs11.Rsp_DestroyCipherCard)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Rsp_DestroyCipherCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.weston.pkcs11.Rsp_DestroyCipherCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.weston.pkcs11.Rsp_DestroyCipherCard)
}

::google::protobuf::uint8* Rsp_DestroyCipherCard::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.weston.pkcs11.Rsp_DestroyCipherCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.weston.pkcs11.Rsp_DestroyCipherCard)
  return target;
}

size_t Rsp_DestroyCipherCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.weston.pkcs11.Rsp_DestroyCipherCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rsp_DestroyCipherCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.weston.pkcs11.Rsp_DestroyCipherCard)
  GOOGLE_DCHECK_NE(&from, this);
  const Rsp_DestroyCipherCard* source =
      ::google::protobuf::DynamicCastToGenerated<Rsp_DestroyCipherCard>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.weston.pkcs11.Rsp_DestroyCipherCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.weston.pkcs11.Rsp_DestroyCipherCard)
    MergeFrom(*source);
  }
}

void Rsp_DestroyCipherCard::MergeFrom(const Rsp_DestroyCipherCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.weston.pkcs11.Rsp_DestroyCipherCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rsp_DestroyCipherCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.weston.pkcs11.Rsp_DestroyCipherCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rsp_DestroyCipherCard::CopyFrom(const Rsp_DestroyCipherCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.weston.pkcs11.Rsp_DestroyCipherCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rsp_DestroyCipherCard::IsInitialized() const {
  return true;
}

void Rsp_DestroyCipherCard::Swap(Rsp_DestroyCipherCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rsp_DestroyCipherCard::InternalSwap(Rsp_DestroyCipherCard* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::google::protobuf::Metadata Rsp_DestroyCipherCard::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_pkcs11_2eproto);
  return ::file_level_metadata_pkcs11_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pkcs11
}  // namespace weston
}  // namespace com
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::PRO_Version* Arena::CreateMaybeMessage< ::com::weston::pkcs11::PRO_Version >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::PRO_Version >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::PRO_Attribute* Arena::CreateMaybeMessage< ::com::weston::pkcs11::PRO_Attribute >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::PRO_Attribute >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::PRO_Mechanism* Arena::CreateMaybeMessage< ::com::weston::pkcs11::PRO_Mechanism >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::PRO_Mechanism >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::PRO_CK_INFO* Arena::CreateMaybeMessage< ::com::weston::pkcs11::PRO_CK_INFO >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::PRO_CK_INFO >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::PRO_CK_SLOT_INFO* Arena::CreateMaybeMessage< ::com::weston::pkcs11::PRO_CK_SLOT_INFO >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::PRO_CK_SLOT_INFO >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::PRO_TokenInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::PRO_TokenInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::PRO_TokenInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::PRO_MechanismInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::PRO_MechanismInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::PRO_MechanismInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::PRO_SessionInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::PRO_SessionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::PRO_SessionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::PRO_ipparam* Arena::CreateMaybeMessage< ::com::weston::pkcs11::PRO_ipparam >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::PRO_ipparam >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Initialize* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Initialize >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Initialize >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Initialize* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Initialize >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Initialize >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Finalize* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Finalize >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Finalize >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Finalize* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Finalize >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Finalize >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GetInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GetInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GetInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GetInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GetInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GetInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GetFunctionList* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GetFunctionList >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GetFunctionList >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GetFunctionList* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GetFunctionList >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GetFunctionList >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GetSlotList* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GetSlotList >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GetSlotList >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GetSlotList* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GetSlotList >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GetSlotList >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GetSlotInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GetSlotInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GetSlotInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GetSlotInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GetSlotInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GetSlotInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GetTokenInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GetTokenInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GetTokenInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GetTokenInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GetTokenInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GetTokenInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GetMechanismList* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GetMechanismList >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GetMechanismList >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GetMechanismList* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GetMechanismList >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GetMechanismList >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GetMechanismInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GetMechanismInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GetMechanismInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GetMechanismInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GetMechanismInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GetMechanismInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_InitToken* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_InitToken >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_InitToken >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_InitToken* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_InitToken >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_InitToken >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_InitPIN* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_InitPIN >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_InitPIN >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_InitPIN* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_InitPIN >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_InitPIN >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_SetPIN* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_SetPIN >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_SetPIN >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_SetPIN* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_SetPIN >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_SetPIN >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_OpenSession* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_OpenSession >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_OpenSession >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_OpenSession* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_OpenSession >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_OpenSession >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_CloseSession* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_CloseSession >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_CloseSession >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_CloseSession* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_CloseSession >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_CloseSession >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_CloseAllSessions* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_CloseAllSessions >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_CloseAllSessions >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_CloseAllSessions* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_CloseAllSessions >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_CloseAllSessions >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GetSessionInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GetSessionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GetSessionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GetSessionInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GetSessionInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GetSessionInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GetOperationState* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GetOperationState >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GetOperationState >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GetOperationState* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GetOperationState >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GetOperationState >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_SetOperationState* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_SetOperationState >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_SetOperationState >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_SetOperationState* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_SetOperationState >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_SetOperationState >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Login* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Login >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Login >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Login* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Login >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Login >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Logout* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Logout >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Logout >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Logout* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Logout >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Logout >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_CreateObject* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_CreateObject >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_CreateObject >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_CreateObject* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_CreateObject >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_CreateObject >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_CopyObject* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_CopyObject >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_CopyObject >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_CopyObject* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_CopyObject >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_CopyObject >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_DestroyObject* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_DestroyObject >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_DestroyObject >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_DestroyObject* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_DestroyObject >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_DestroyObject >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GetObjectSize* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GetObjectSize >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GetObjectSize >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GetObjectSize* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GetObjectSize >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GetObjectSize >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GetAttributeValue* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GetAttributeValue >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GetAttributeValue >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GetAttributeValue* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GetAttributeValue >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GetAttributeValue >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_SetAttributeValue* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_SetAttributeValue >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_SetAttributeValue >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_SetAttributeValue* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_SetAttributeValue >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_SetAttributeValue >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_FindObjectsInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_FindObjectsInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_FindObjectsInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_FindObjectsInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_FindObjectsInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_FindObjectsInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_FindObjects* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_FindObjects >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_FindObjects >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_FindObjects* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_FindObjects >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_FindObjects >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_FindObjectsFinal* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_FindObjectsFinal >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_FindObjectsFinal >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_FindObjectsFinal* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_FindObjectsFinal >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_FindObjectsFinal >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_EncryptInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_EncryptInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_EncryptInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_EncryptInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_EncryptInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_EncryptInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Encrypt* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Encrypt >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Encrypt >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Encrypt* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Encrypt >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Encrypt >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_EncryptUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_EncryptUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_EncryptUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_EncryptUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_EncryptUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_EncryptUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_EncryptFinal* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_EncryptFinal >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_EncryptFinal >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_EncryptFinal* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_EncryptFinal >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_EncryptFinal >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_DecryptInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_DecryptInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_DecryptInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_DecryptInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_DecryptInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_DecryptInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Decrypt* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Decrypt >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Decrypt >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Decrypt* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Decrypt >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Decrypt >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_DecryptUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_DecryptUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_DecryptUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_DecryptUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_DecryptUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_DecryptUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_DecryptFinal* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_DecryptFinal >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_DecryptFinal >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_DecryptFinal* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_DecryptFinal >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_DecryptFinal >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_DigestInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_DigestInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_DigestInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_DigestInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_DigestInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_DigestInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Digest* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Digest >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Digest >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Digest* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Digest >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Digest >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_DigestUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_DigestUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_DigestUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_DigestUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_DigestUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_DigestUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_DigestKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_DigestKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_DigestKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_DigestKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_DigestKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_DigestKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_DigestFinal* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_DigestFinal >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_DigestFinal >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_DigestFinal* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_DigestFinal >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_DigestFinal >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_SignInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_SignInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_SignInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_SignInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_SignInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_SignInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Sign* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Sign >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Sign >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Sign* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Sign >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Sign >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_SignUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_SignUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_SignUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_SignUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_SignUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_SignUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_SignFinal* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_SignFinal >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_SignFinal >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_SignFinal* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_SignFinal >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_SignFinal >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_SignRecoverInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_SignRecoverInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_SignRecoverInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_SignRecoverInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_SignRecoverInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_SignRecoverInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_SignRecover* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_SignRecover >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_SignRecover >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_SignRecover* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_SignRecover >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_SignRecover >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_VerifyInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_VerifyInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_VerifyInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_VerifyInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_VerifyInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_VerifyInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Verify* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Verify >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Verify >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Verify* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Verify >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Verify >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_VerifyUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_VerifyUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_VerifyUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_VerifyUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_VerifyUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_VerifyUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_VerifyFinal* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_VerifyFinal >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_VerifyFinal >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_VerifyFinal* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_VerifyFinal >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_VerifyFinal >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_VerifyRecoverInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_VerifyRecoverInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_VerifyRecoverInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_VerifyRecoverInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_VerifyRecoverInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_VerifyRecoverInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_VerifyRecover* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_VerifyRecover >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_VerifyRecover >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_VerifyRecover* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_VerifyRecover >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_VerifyRecover >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_DigestEncryptUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_DigestEncryptUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_DigestEncryptUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_DigestEncryptUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_DigestEncryptUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_DigestEncryptUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_DecryptDigestUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_DecryptDigestUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_DecryptDigestUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_DecryptDigestUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_DecryptDigestUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_DecryptDigestUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_SignEncryptUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_SignEncryptUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_SignEncryptUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_SignEncryptUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_SignEncryptUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_SignEncryptUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_DecryptVerifyUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_DecryptVerifyUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_DecryptVerifyUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_DecryptVerifyUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_DecryptVerifyUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_DecryptVerifyUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GenerateKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GenerateKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GenerateKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GenerateKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GenerateKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GenerateKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GenerateKeyPair* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GenerateKeyPair >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GenerateKeyPair >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GenerateKeyPair* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GenerateKeyPair >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GenerateKeyPair >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_WrapKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_WrapKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_WrapKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_WrapKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_WrapKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_WrapKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_UnwrapKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_UnwrapKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_UnwrapKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_UnwrapKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_UnwrapKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_UnwrapKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_DeriveKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_DeriveKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_DeriveKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_DeriveKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_DeriveKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_DeriveKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_SeedRandom* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_SeedRandom >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_SeedRandom >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_SeedRandom* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_SeedRandom >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_SeedRandom >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GenerateRandom* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GenerateRandom >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GenerateRandom >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GenerateRandom* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GenerateRandom >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GenerateRandom >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_GetFunctionStatus* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_GetFunctionStatus >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_GetFunctionStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_GetFunctionStatus* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_GetFunctionStatus >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_GetFunctionStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_CancelFunction* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_CancelFunction >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_CancelFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_CancelFunction* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_CancelFunction >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_CancelFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_WaitForSlotEvent* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_WaitForSlotEvent >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_WaitForSlotEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_WaitForSlotEvent* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_WaitForSlotEvent >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_WaitForSlotEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_GetPinRemainCount* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_GetPinRemainCount >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_GetPinRemainCount >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_GetPinRemainCount* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_GetPinRemainCount >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_GetPinRemainCount >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_GetStatus* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_GetStatus >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_GetStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_GetStatus* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_GetStatus >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_GetStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_Status_Callback_Func* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_Status_Callback_Func >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_Status_Callback_Func >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_Register_Callback* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_Register_Callback >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_Register_Callback >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_Register_Callback* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_Register_Callback >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_Register_Callback >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_Unregister_Callback* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_Unregister_Callback >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_Unregister_Callback >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_Unregister_Callback* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_Unregister_Callback >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_Unregister_Callback >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_GetExchangeSessionKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_GetExchangeSessionKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_GetExchangeSessionKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_GetExchangeSessionKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_GetExchangeSessionKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_GetExchangeSessionKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_Destroy* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_Destroy >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_Destroy >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_Destroy* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_Destroy >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_Destroy >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_Reset_Pin_With_OTP >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_Reset_Pin_With_OTP* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_Reset_Pin_With_OTP >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_Reset_Pin_With_OTP >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_Reset_OTP* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_Reset_OTP >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_Reset_OTP >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_Reset_OTP* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_Reset_OTP >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_Reset_OTP >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_Get_OTP_Unlock_Count* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_Get_OTP_Unlock_Count >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_Get_OTP_Unlock_Count >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Unlock_Count* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Unlock_Count >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Unlock_Count >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_Get_OTP_Remain_Count* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_Get_OTP_Remain_Count >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_Get_OTP_Remain_Count >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Remain_Count* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Remain_Count >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_Get_OTP_Remain_Count >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_DeriveSessionKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_DeriveSessionKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_DeriveSessionKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_DeriveSessionKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_EncryptInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_EncryptInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_EncryptInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_EncryptInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_EncryptInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_EncryptInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_DecryptInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_DecryptInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_DecryptInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_DecryptInit* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_DecryptInit >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_DecryptInit >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_EncryptUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_EncryptUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_EncryptUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_EncryptUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_EncryptUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_EncryptUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_DecryptUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_DecryptUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_DecryptUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_DecryptUpdate* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_DecryptUpdate >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_DecryptUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_EncryptFinalize* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_EncryptFinalize >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_EncryptFinalize >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_EncryptFinalize* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_EncryptFinalize >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_EncryptFinalize >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_DecryptFinalize* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_DecryptFinalize >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_DecryptFinalize >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_DecryptFinalize* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_DecryptFinalize >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_DecryptFinalize >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_PointMultiply* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_PointMultiply >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_PointMultiply >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_PointMultiply* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_PointMultiply >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_PointMultiply >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_Reset_TT* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_Reset_TT >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_Reset_TT >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_Reset_TT* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_Reset_TT >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_Reset_TT >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_Reset_BK* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_Reset_BK >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_Reset_BK >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_Reset_BK* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_Reset_BK >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_Reset_BK >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_Get_Special_Object_Version* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_Get_Special_Object_Version >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_Get_Special_Object_Version >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_Get_Special_Object_Version* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_Get_Special_Object_Version >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_Get_Special_Object_Version >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_DestroyCard* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_DestroyCard >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_DestroyCard >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_DestroyCard* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_DestroyCard >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_DestroyCard >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_MonopolizeEnable* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_MonopolizeEnable >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_MonopolizeEnable >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_MonopolizeEnable* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_MonopolizeEnable >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_MonopolizeEnable >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_MonopolizeDisable* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_MonopolizeDisable >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_MonopolizeDisable >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_MonopolizeDisable* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_MonopolizeDisable >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_MonopolizeDisable >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_GetDevInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_GetDevInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_GetDevInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_GetDevInfo* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_GetDevInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_GetDevInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_DevSign* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_DevSign >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_DevSign >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_DevSign* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_DevSign >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_DevSign >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_Set_DestroyKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_Set_DestroyKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_Set_DestroyKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_Set_DestroyKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_C_Extend_Get_ExchangePubKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_C_Extend_Get_ExchangePubKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_C_Extend_Get_ExchangePubKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_C_Extend_Get_ExchangePubKey* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_C_Extend_Get_ExchangePubKey >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_C_Extend_Get_ExchangePubKey >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_softCreateCipherCard* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_softCreateCipherCard >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_softCreateCipherCard >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_softCreateCipherCard* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_softCreateCipherCard >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_softCreateCipherCard >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Req_DestroyCipherCard* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Req_DestroyCipherCard >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Req_DestroyCipherCard >(arena);
}
template<> PROTOBUF_NOINLINE ::com::weston::pkcs11::Rsp_DestroyCipherCard* Arena::CreateMaybeMessage< ::com::weston::pkcs11::Rsp_DestroyCipherCard >(Arena* arena) {
  return Arena::CreateInternal< ::com::weston::pkcs11::Rsp_DestroyCipherCard >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
