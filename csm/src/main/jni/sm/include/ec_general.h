#ifndef EC_GENERAL_H
#define EC_GENERAL_H
 

#include "ec.h" 



/*
SM2椭圆曲线公钥密码算法推荐曲线参数
p =	FFFFFFFE FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF 00000000 FFFFFFFF FFFFFFFF
a =	FFFFFFFE FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF 00000000 FFFFFFFF FFFFFFFC
b =	28E9FA9E 9D9F5E34 4D5A9E4B CF6509A7 F39789F5 15AB8F92 DDBCBD41 4D940E93
n =	FFFFFFFE FFFFFFFF FFFFFFFF FFFFFFFF 7203DF6B 21C6052B 53BBF409 39D54123
Gx=	32C4AE2C 1F198119 5F990446 6A39C994 8FE30BBF F2660BE1 715A4589 334C74C7
Gy=	BC3736A2 F4F6779C 59BDCEE3 6B692153 D0A9877C C62A4740 02DF32E5 2139F0A0
*/

const static ECCParameter g_sgst_para=
{
	{/* 模数p		*/ 
		0xFF,0xFF,0xFF,0xFE,	0xFF,0xFF,0xFF,0xFF,	0xFF,0xFF,0xFF,0xFF,	0xFF,0xFF,0xFF,0xFF, 
		0xFF,0xFF,0xFF,0xFF,	0x00,0x00,0x00,0x00,	0xFF,0xFF,0xFF,0xFF,	0xFF,0xFF,0xFF,0xFF
	}, 
	{/* 参数a		*/
		0xFF,0xFF,0xFF,0xFE,	0xFF,0xFF,0xFF,0xFF,	0xFF,0xFF,0xFF,0xFF,	0xFF,0xFF,0xFF,0xFF, 
		0xFF,0xFF,0xFF,0xFF,	0x00,0x00,0x00,0x00,	0xFF,0xFF,0xFF,0xFF,	0xFF,0xFF,0xFF,0xFC
	},
	{/* 参数b		*/
		0x28,0xE9,0xFA,0x9E,	0x9D,0x9F,0x5E,0x34,	0x4D,0x5A,0x9E,0x4B,	0xCF,0x65,0x09,0xA7, 
		0xF3,0x97,0x89,0xF5,	0x15,0xAB,0x8F,0x92,	0xDD,0xBC,0xBD,0x41,	0x4D,0x94,0x0E,0x93
	},
	{/* G点的x坐标	*/
		0x32,0xC4,0xAE,0x2C,	0x1F,0x19,0x81,0x19,	0x5F,0x99,0x04,0x46,	0x6A,0x39,0xC9,0x94,
		0x8F,0xE3,0x0B,0xBF,	0xF2,0x66,0x0B,0xE1,	0x71,0x5A,0x45,0x89,	0x33,0x4C,0x74,0xC7
	},
	{/* G点的y坐标	*/
		0xBC,0x37,0x36,0xA2,	0xF4,0xF6,0x77,0x9C,	0x59,0xBD,0xCE,0xE3,	0x6B,0x69,0x21,0x53,
		0xD0,0xA9,0x87,0x7C,	0xC6,0x2A,0x47,0x40,	0x02,0xDF,0x32,0xE5,	0x21,0x39,0xF0,0xA0
	},
	{/* G点的阶		*/
		0xFF,0xFF,0xFF,0xFE,	0xFF,0xFF,0xFF,0xFF,	0xFF,0xFF,0xFF,0xFF,	0xFF,0xFF,0xFF,0xFF,
		0x72,0x03,0xDF,0x6B,	0x21,0xC6,0x05,0x2B,	0x53,0xBB,0xF4,0x09,	0x39,0xD5,0x41,0x23
	} 
};

int EC_group_init(EC_GROUP *p, ECCParameter *pECCPara);

int EC_generate_key(EC_GROUP *group, ECC_PUBLIC_KEY *pECCPK, ECC_PRIVATE_KEY *pECCSK);

int EC_point_is_on_curve(ECCParameter *p_para, ECC_PUBLIC_KEY *p_pk);

int CalcZValue(ECCParameter *p_ecprm, BYTE *p_id, u32_t id_len, ECC_PUBLIC_KEY *p_pk, 
			   BYTE out_z_value[32] );


/**
//ZA=H256(ENTLA ∥ IDA ∥ a ∥ b ∥ xG ∥ yG ∥ xA ∥ yA)。
// A1：M`=ZA ∥ M；
// A2：计算e = Hash(M`) 
**/
int ECDSA_CalcE(BYTE z[SM3_HASH_VALUE_LEN], BYTE *p_msg, int msg_len, 
				BYTE e[SM3_HASH_VALUE_LEN] );

int GenerateRandom_sm2( BYTE *p_rand, u32_t rand_len, 
					BYTE *p_seed, u32_t seed_len );

int GenerateRandom1( void *p_rand, u32_t rand_len );

#endif


