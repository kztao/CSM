/*******************************************************************************
版权声明: Copyright(C) Westone Co., Ltd. 2013-2014. All rights reserved.
文件名称: sm3.h
文件描述: SM3杂凑算法
创 建 者: 张文科 罗影
创建时间: 2014年10月30日
修改历史:
1. 2014年10月30日	张文科 罗影		创建文件 
*******************************************************************************/

#ifndef _SM3_H_A803937FA72C956F
#define _SM3_H_A803937FA72C956F


/* ------------------------ 头文件包含区 开始 ------------------------------- */
 
#include "mm_types.h"
#include "sm3_core.h"

/* ======================== 头文件包含区 结束 =============================== */


#ifdef __cplusplus
extern "C" {
#endif
 
/* ------------------------ 公共宏定义区 开始 ------------------------------- */

 

#ifndef SM3_HASH_BYTE_SZ
#define SM3_HASH_BYTE_SZ	32	/* SM3 HASH值为256比特 32字节 */
#endif


/* ======================== 公共宏定义区 结束 =============================== */


/* ------------------------ 公共类型定义区 开始 ----------------------------- */


/* ======================== 公共类型定义区 结束 ============================= */


/* ------------------------ 函数原型外部声明区 开始 ------------------------- */



/*******************************************************************************
函 数 名:	sm3_init
功能描述:	初始化SM3 
说    明:	三段式计算消息杂凑值的第 1 步
注    意:	三段式计算消息杂凑值，请严格按照以下步骤执行
			第 1 步 sm3_init(***);			// 初始化
			第 2 步 while(msg_not_end){
						sm3_process(***);	// 消息可分多次添加
					}
			第 3 步 sm3_unit(***);			// 输出杂凑值
参数说明:	-
返 回 值:  非零句柄 [成功],  NULL [失败]
修改历史: 
    1. 2014年10月30日	张文科 罗影		创建函数
    2. 2015年 2月 4日	张文科 罗影		修改函数接口
*******************************************************************************/
 
MM_API mm_handle sm3_init( );


/*******************************************************************************
函 数 名:	sm3_process
功能描述:	处理消息  
说    明:	三段式计算消息杂凑值的第 2 步
注    意:	三段式计算步骤见 sm3_init() 的说明 
参数说明: 
    h(in/out):  句柄 
	p_data(in):	待杂凑数据 
	len(in):	待杂凑数据的长度
返 回 值:  成功返回MM_OK，失败返回MM_ERROR或其他负数.
修改历史: 
	1. 2014年10月30日	张文科 罗影		创建函数
    2. 2015年 2月 4日	张文科 罗影		修改函数接口
*******************************************************************************/

MM_API mm_i32_t sm3_process(mm_handle h, mm_u8_t* p_data, mm_u32_t len);


/*******************************************************************************
函 数 名:	sm3_unit
功能描述:	完成杂凑，返回最终杂凑值 
说    明:	1. 三段式计算消息杂凑值的第 3 步
			2. 杂凑值长度为 32 字节
			3. h 在执行本函数后为悬垂指针，不可再用。 
注    意:	三段式计算步骤见 mm_sm3_init() 的说明 
参数说明: 
    h	(in/out)句柄  
	md	(out)	杂凑值 
返 回 值:  -
修改历史: 
	1. 2014年10月30日	张文科 罗影		创建函数
    2. 2015年 2月 4日	张文科 罗影		修改函数接口
*******************************************************************************/

MM_API mm_i32_t sm3_unit(mm_handle h, mm_u8_t md[SM3_HASH_BYTE_SZ]);
 

/*******************************************************************************
函 数 名:	sm3_hash
功能描述:	一段式计算消息杂凑值 
说    明:	杂凑值长度为 32 字节
注    意:	一段式计算消息杂凑值只需执行 sm3_hash(***)
参数说明: 
	p_data	(in)	待杂凑数据 
	len		(in)	待杂凑数据的长度
	md		(out)	杂凑值 
返 回 值:  1 [成功], <-0 [失败]
修改历史: 
	1. 2014年10月30日	张文科 罗影		创建函数
    2. 2015年 2月 4日	张文科 罗影		修改函数接口
*******************************************************************************/

MM_API mm_i32_t sm3_hash(mm_u8_t *p_data, mm_u32_t len, mm_u8_t md[SM3_HASH_BYTE_SZ]);
 
 

MM_API void sm3_hmac_starts(mm_sm3_hmac_ctx *ctx, mm_u8_t *key, mm_i32_t keylen);

/*
 * SM3 HMAC process buffer
 */
MM_API void sm3_hmac_update(mm_sm3_hmac_ctx *ctx, mm_u8_t *input, mm_i32_t ilen);
/*
 * SM3 HMAC final digest
 */
MM_API void sm3_hmac_finish(mm_sm3_hmac_ctx *ctx, mm_u8_t output[SM3_HASH_BYTE_SZ]);

/*
 * output = HMAC-SM#( hmac key, input buffer )
 */
MM_API void sm3_hmac(mm_u8_t *key, mm_i32_t keylen,
			mm_u8_t *input, mm_i32_t ilen,
			mm_u8_t output[SM3_HASH_BYTE_SZ]);

/* ======================== 函数原型外部声明区 结束 ========================= */


/* ------------------------ 变量外部引用声明区 开始 ------------------------- */

/* ======================== 变量外部引用声明区 结束 ========================= */
 
#ifdef __cplusplus
}
#endif

#endif /* _SM3_H_... */
 