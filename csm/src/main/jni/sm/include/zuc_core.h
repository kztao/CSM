/*******************************************************************************
版权声明: Copyright(C) Westone Co., Ltd. 2013-2014. All rights reserved.
文件名称: zuc_core.h
文件描述: zuc内部核心接口
创 建 者: 张文科 罗影
创建时间: 2015年1月19日
修改历史:
1. 2015年 1月19日	张文科 罗影		创建文件 
2. 2016年 6月13日	罗影			修正zuc_enc_dec_core多次调用时崩溃的问题
									崩溃的原因为逻辑错误导致判断失误 
*******************************************************************************/
#ifndef _ZUC_CORE_H
#define _ZUC_CORE_H



/* ------------------------ 头文件包含区 开始 ------------------------------- */

#include "mm_types.h"
#include "mm_macro.h"

/* ======================== 头文件包含区 结束 =============================== */


#ifdef __cplusplus
extern "C" {
#endif
	

/* ------------------------ 公共宏定义区 开始 ------------------------------- */

/* . . . . . . . . . . . .     可配置区域 开始 . . . . . . . . . . . . . . .  */
	
/* 查表法实现S变换：
	小表法，256B = 1 表 * 256 元/表 * 1 BYTE/元 
	大表法， 4KB = 4 表 * 256 元/表 * 4 BYTE/元 
	目前看，速度相差不多，几乎可以忽略。
*/   
  

/* ........................    可配置区域 结束 .............................. */
 
 
#define ZUC_KEY_LEN			16		/* ZUC 密钥长度 16字节(128比特) */
#define ZUC_IV_LEN			16		/* ZUC 子密钥个数				*/ 
#define ZUC_KEY_STREAM_SIZE  4		/* ZUC 一拍产生的密钥流字节数   */

typedef struct crypto_zuc_ctx
{
	/* 线性反馈移位寄存器组 */
	mm_u32_t	lfsr_0,  lfsr_1,  lfsr_2,  lfsr_3;	 
	mm_u32_t	lfsr_4,  lfsr_5,  lfsr_6,  lfsr_7;	 
	mm_u32_t	lfsr_8,  lfsr_9,  lfsr_10, lfsr_11;	 
	mm_u32_t	lfsr_12, lfsr_13, lfsr_14, lfsr_15;	  
	
	mm_u32_t	r1, r2;	  
	mm_u32_t	left_byte;
	mm_u8_t		key[ZUC_KEY_STREAM_SIZE];
	mm_u32_t	mac;
	mm_u32_t	deal_bit;	/* 是否处理过比特 */
	mm_u32_t	eia3_bits;	/* EIA3处理的比特数 */
	mm_u32_t	key32h;	/* EIA3 gen key stream */
	mm_u32_t	key32l;	/* EIA3 gen key stream */
}zuc_ctx;
 
 
 
/* ======================== 公共类型定义区 结束 ============================= */
	

	
/* ------------------------ 函数原型外部声明区 开始 ------------------------- */
 
	
/*******************************************************************************
函 数 名:	zuc_init_core
功能描述:	初始化ZUC算法
说    明:	
注    意:	1. 初始化完毕之后的首次过程（舍弃输出W的那一次）也放在此函数中
参数说明: 
	p	(in/out)ZUC结构体
	key	(in)	密钥 
	iv	(in)	初始化向量 
返 回 值:	>=1 [成功]，<=0 [失败]
修改历史: 
    1. 2015年1月19日	张文科 罗影		创建函数
*******************************************************************************/ 

mm_i32_t zuc_init_core(zuc_ctx *p, mm_u8_t key[ZUC_KEY_LEN],
					   mm_u8_t iv[ZUC_IV_LEN]);

 

/*******************************************************************************
函 数 名:	zuc_one_step
功能描述:	执行一步，产生32比特密钥流
说    明:	-
注    意:	1. 初始化完毕之后的首次过程（舍弃输出W的那一次）放在 InitZuc 函数中
参数说明: 
	p	(in/out)	ZUC结构体
	p_w	(out)		F函数的输出值 w   
返 回 值:	密钥（ = F函数的输出值W XOR X3 ）
修改历史: 
    1. 2015年1月19日	张文科 罗影		创建函数
*******************************************************************************/ 
 
mm_u32_t zuc_one_step(zuc_ctx *p,  mm_u32_t *p_w);


/*******************************************************************************
函 数 名:	zuc_gen_key_u32
功能描述:	产生32bit的密钥流
说    明:	-
注    意:	1. OneStep 产生密钥流后，直接返回
参数说明: 
	p	(in/out)	ZUC结构体
	key32	(out)	32bit的密钥流
返 回 值:	无
修改历史: 
    1. 2015年1月19日	张文科 罗影		创建函数
*******************************************************************************/ 

/*	zuc_ctx *p, mm_u8_t key32 */
#define zuc_gen_key_u32( p_zuc_ctx, key32)\
{\
	key32 = zuc_one_step(p_zuc_ctx, NULL);\
}


/*******************************************************************************
函 数 名:	zuc_enc_dec_core
功能描述:	利用zuc加密或解密
说    明:	-
注    意:	-
参数说明: 
	p		(in/out)ZUC结构体 
	p_in	(in)	输入数据 
	bit_len	(in)	数据比特长度 
	p_out	(out)	输出数据 
	返 回 值:	>=1 [成功]，<=0 [失败]
	修改历史: 
	1. 2014年10月29日	张文科 罗影		创建函数
	1. 2016年 6月13日	罗影			修正因逻辑问题导致多次调用时崩溃的问题
*******************************************************************************/ 

mm_i32_t zuc_enc_dec_core(zuc_ctx *p, mm_u8_t *p_in, mm_u32_t bit_len, 
					 mm_u8_t *p_out);


/*******************************************************************************
函 数 名:	zuc_unit_core
功能描述:	反初始化ZUC算法
说    明:	
注    意:	 
参数说明: 
	p	(in/out)ZUC结构体 
返 回 值:	>=1 [成功]，<=0 [失败]
修改历史: 
    1. 2015年1月19日	张文科 罗影		创建函数
*******************************************************************************/ 

mm_i32_t zuc_unit_core(zuc_ctx *p );


//-------------------------------------------------------------------
 


/* ======================== 函数原型外部声明区 结束 ========================= */


/* ------------------------ 变量外部引用声明区 开始 ------------------------- */

/* ======================== 变量外部引用声明区 结束 ========================= */
 
#ifdef __cplusplus
}
#endif

#endif/*#ifndef _SM4_CORE_H */
